{"/app/src/models/index.js":{"path":"/app/src/models/index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":20},"end":{"line":8,"column":69}},"3":{"start":{"line":10,"column":17},"end":{"line":10,"column":63}},"4":{"start":{"line":12,"column":16},"end":{"line":12,"column":61}},"5":{"start":{"line":14,"column":12},"end":{"line":14,"column":53}},"6":{"start":{"line":16,"column":12},"end":{"line":16,"column":53}},"7":{"start":{"line":18,"column":20},"end":{"line":18,"column":69}},"8":{"start":{"line":20,"column":24},"end":{"line":20,"column":77}},"9":{"start":{"line":22,"column":28},"end":{"line":22,"column":85}},"10":{"start":{"line":24,"column":25},"end":{"line":24,"column":79}},"11":{"start":{"line":26,"column":39},"end":{"line":26,"column":93}},"12":{"start":{"line":28,"column":15},"end":{"line":38,"column":1}},"13":{"start":{"line":39,"column":0},"end":{"line":39,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":31}},"loc":{"start":{"line":26,"column":37},"end":{"line":26,"column":95}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":46},"end":{"line":26,"column":92}},"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":92}}],"line":26},"1":{"loc":{"start":{"line":26,"column":46},"end":{"line":26,"column":67}},"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":9,"12":1,"13":1},"f":{"0":9},"b":{"0":[9,0],"1":[9,9]},"inputSourceMap":{"version":3,"names":["ExamSchedule","ExamTaken","Question","QuestionModel","questionModel","User","Exam","DigitalAsset","SpellingQuestion","QuantitativeQuestion","EssayExamQuestion"],"sourceRoot":"/app/src/models/","sources":["index.js"],"sourcesContent":["import ExamSchedule from \"./examSchedule\";\nimport ExamTaken from \"./examTaken\";\nimport QuestionModel from \"./question\";\nimport User from \"./user\";\nimport Exam from \"./exam\";\nimport DigitalAsset from \"./digitalAsset\";\nimport SpellingQuestion from \"./spellingQuestion\";\nimport QuantitativeQuestion from \"./quantitativeQuestion\";\nimport EssayExamQuestion from \"./essayExamQuestion\";\n\nexport default {\n  ExamSchedule,\n  ExamTaken,\n  Question: QuestionModel.questionModel,\n  User,\n  Exam,\n  DigitalAsset,\n  SpellingQuestion,\n  QuantitativeQuestion,\n  EssayExamQuestion,\n};\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;eAEe;EACbA,YAAY,EAAZA,qBADa;EAEbC,SAAS,EAATA,kBAFa;EAGbC,QAAQ,EAAEC,iBAAA,CAAcC,aAHX;EAIbC,IAAI,EAAJA,aAJa;EAKbC,IAAI,EAAJA,aALa;EAMbC,YAAY,EAAZA,qBANa;EAObC,gBAAgB,EAAhBA,yBAPa;EAQbC,oBAAoB,EAApBA,6BARa;EASbC,iBAAiB,EAAjBA;AATa,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"433c7f18a11bd640f6361df83e9edd4e955af36f","contentHash":"e802a2762ef2c15dc226251ba17f17604f2269aee5abf4907f3166a01b1d924c"},"/app/src/models/examSchedule.js":{"path":"/app/src/models/examSchedule.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":15},"end":{"line":12,"column":39}},"5":{"start":{"line":13,"column":27},"end":{"line":26,"column":2}},"6":{"start":{"line":28,"column":15},"end":{"line":28,"column":74}},"7":{"start":{"line":30,"column":0},"end":{"line":30,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"names":["Schema","mongoose","ExamScheduleSchema","numberofQuestions","Number","examinationName","String","examTypeID","examTypeName","active","Boolean","examinationDuration","questionType","questions","type","Array","required","default","model"],"sourceRoot":"/app/src/models/","sources":["examSchedule.js"],"sourcesContent":["import mongoose from \"mongoose\";\nconst Schema = mongoose.Schema;\n\nconst ExamScheduleSchema = new Schema({\n  numberofQuestions: Number,\n  examinationName: String,\n  examTypeID: String,\n  examTypeName: String,\n  active: Boolean,\n  examinationDuration: Number,\n  questionType: String,\n  questions: {\n    type: Array,\n    required: false,\n    default: [],\n  },\n});\n\nexport default mongoose.model(\"examSchedule\", ExamScheduleSchema);\n"],"mappings":";;;;;;;AAAA;;;;AACA,MAAMA,MAAM,GAAGC,iBAAA,CAASD,MAAxB;AAEA,MAAME,kBAAkB,GAAG,IAAIF,MAAJ,CAAW;EACpCG,iBAAiB,EAAEC,MADiB;EAEpCC,eAAe,EAAEC,MAFmB;EAGpCC,UAAU,EAAED,MAHwB;EAIpCE,YAAY,EAAEF,MAJsB;EAKpCG,MAAM,EAAEC,OAL4B;EAMpCC,mBAAmB,EAAEP,MANe;EAOpCQ,YAAY,EAAEN,MAPsB;EAQpCO,SAAS,EAAE;IACTC,IAAI,EAAEC,KADG;IAETC,QAAQ,EAAE,KAFD;IAGTC,OAAO,EAAE;EAHA;AARyB,CAAX,CAA3B;;eAeehB,iBAAA,CAASiB,KAAT,CAAe,cAAf,EAA+BhB,kBAA/B,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"d8dd58c985ff6455034490412bb81879ec4fd5f5","contentHash":"8bfddb04b293810de5b49d0817cb8e2131dc491c5ac158d17d0f96a54f54454f"},"/app/src/models/examTaken.js":{"path":"/app/src/models/examTaken.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":15},"end":{"line":12,"column":39}},"5":{"start":{"line":13,"column":24},"end":{"line":33,"column":2}},"6":{"start":{"line":35,"column":15},"end":{"line":35,"column":68}},"7":{"start":{"line":37,"column":0},"end":{"line":37,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"names":["Schema","mongoose","ExamTakenSchema","examDetails","Object","timeExamStarted","Date","canidateDetails","examStarted","Boolean","examFinished","questionType","String","timeExamEnded","type","required","score","Number","scripts","Array","default","model"],"sourceRoot":"/app/src/models/","sources":["examTaken.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst Schema = mongoose.Schema;\n\nconst ExamTakenSchema = new Schema({\n  examDetails: Object,\n  timeExamStarted: Date,\n  canidateDetails: Object,\n  examStarted: Boolean,\n  examFinished: Boolean,\n  questionType: String,\n  timeExamEnded: {\n    type: Date,\n    required: false,\n  },\n  score: {\n    type: Number,\n    required: false,\n  },\n  scripts: {\n    type: Array,\n    required: false,\n    default: [],\n  },\n});\n\nexport default mongoose.model(\"examTaken\", ExamTakenSchema);\n"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,MAAM,GAAGC,iBAAA,CAASD,MAAxB;AAEA,MAAME,eAAe,GAAG,IAAIF,MAAJ,CAAW;EACjCG,WAAW,EAAEC,MADoB;EAEjCC,eAAe,EAAEC,IAFgB;EAGjCC,eAAe,EAAEH,MAHgB;EAIjCI,WAAW,EAAEC,OAJoB;EAKjCC,YAAY,EAAED,OALmB;EAMjCE,YAAY,EAAEC,MANmB;EAOjCC,aAAa,EAAE;IACbC,IAAI,EAAER,IADO;IAEbS,QAAQ,EAAE;EAFG,CAPkB;EAWjCC,KAAK,EAAE;IACLF,IAAI,EAAEG,MADD;IAELF,QAAQ,EAAE;EAFL,CAX0B;EAejCG,OAAO,EAAE;IACPJ,IAAI,EAAEK,KADC;IAEPJ,QAAQ,EAAE,KAFH;IAGPK,OAAO,EAAE;EAHF;AAfwB,CAAX,CAAxB;;eAsBenB,iBAAA,CAASoB,KAAT,CAAe,WAAf,EAA4BnB,eAA5B,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"65da43592f3655501b5be9bf8edb87f28be3bf61","contentHash":"55fc18119b37b1540d135a098a5358efe431ff5c37e184287c332117ee653426"},"/app/src/models/question.js":{"path":"/app/src/models/question.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":15},"end":{"line":12,"column":39}},"5":{"start":{"line":13,"column":23},"end":{"line":33,"column":2}},"6":{"start":{"line":34,"column":0},"end":{"line":36,"column":3}},"7":{"start":{"line":38,"column":22},"end":{"line":38,"column":73}},"8":{"start":{"line":40,"column":15},"end":{"line":43,"column":1}},"9":{"start":{"line":44,"column":0},"end":{"line":44,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"names":["Schema","mongoose","QuestionSchema","question","String","answers","option","isCorrect","Boolean","selected","questionImageUrl","type","required","examinationType","examId","explanation","createdAt","Date","timestamps","index","QuestionModel","model","questionModel","questionSchema"],"sourceRoot":"/app/src/models/","sources":["question.js"],"sourcesContent":["import mongoose from \"mongoose\";\nconst Schema = mongoose.Schema;\n\nconst QuestionSchema = new Schema(\n  {\n    question: String,\n    answers: [\n      {\n        option: String,\n        isCorrect: Boolean,\n        selected: Boolean,\n      },\n    ],\n    questionImageUrl: { type: String, required: false },\n    examinationType: String,\n    examId: String,\n    explanation: { type: String, required: false },\n    createdAt: Date\n  },\n  { timestamps: true }\n);\nQuestionSchema.index({ question: 1 });\n\nconst QuestionModel = mongoose.model(\"question\", QuestionSchema);\n\nexport default {\n  questionModel: QuestionModel,\n  questionSchema: QuestionSchema,\n};\n"],"mappings":";;;;;;;AAAA;;;;AACA,MAAMA,MAAM,GAAGC,iBAAA,CAASD,MAAxB;AAEA,MAAME,cAAc,GAAG,IAAIF,MAAJ,CACrB;EACEG,QAAQ,EAAEC,MADZ;EAEEC,OAAO,EAAE,CACP;IACEC,MAAM,EAAEF,MADV;IAEEG,SAAS,EAAEC,OAFb;IAGEC,QAAQ,EAAED;EAHZ,CADO,CAFX;EASEE,gBAAgB,EAAE;IAAEC,IAAI,EAAEP,MAAR;IAAgBQ,QAAQ,EAAE;EAA1B,CATpB;EAUEC,eAAe,EAAET,MAVnB;EAWEU,MAAM,EAAEV,MAXV;EAYEW,WAAW,EAAE;IAAEJ,IAAI,EAAEP,MAAR;IAAgBQ,QAAQ,EAAE;EAA1B,CAZf;EAaEI,SAAS,EAAEC;AAbb,CADqB,EAgBrB;EAAEC,UAAU,EAAE;AAAd,CAhBqB,CAAvB;AAkBAhB,cAAc,CAACiB,KAAf,CAAqB;EAAEhB,QAAQ,EAAE;AAAZ,CAArB;;AAEA,MAAMiB,aAAa,GAAGnB,iBAAA,CAASoB,KAAT,CAAe,UAAf,EAA2BnB,cAA3B,CAAtB;;eAEe;EACboB,aAAa,EAAEF,aADF;EAEbG,cAAc,EAAErB;AAFH,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2d56e51e140d696f53e9f06a84c9b5e4b5b910db","contentHash":"2d25ef43648c466e80e2a66b7743c299e93c907bcd763f6e1f487b0a09df13a8"},"/app/src/models/user.js":{"path":"/app/src/models/user.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":15},"end":{"line":12,"column":39}},"5":{"start":{"line":13,"column":19},"end":{"line":19,"column":2}},"6":{"start":{"line":21,"column":15},"end":{"line":21,"column":58}},"7":{"start":{"line":23,"column":0},"end":{"line":23,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"names":["Schema","mongoose","UserSchema","username","String","password","userType","active","Boolean","name","model"],"sourceRoot":"/app/src/models/","sources":["user.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst Schema = mongoose.Schema;\n\nconst UserSchema = new Schema({\n  username: String,\n  password: String,\n  userType: String,\n  active: Boolean,\n  name: String,\n});\n\nexport default mongoose.model(\"user\", UserSchema);\n"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,MAAM,GAAGC,iBAAA,CAASD,MAAxB;AAEA,MAAME,UAAU,GAAG,IAAIF,MAAJ,CAAW;EAC5BG,QAAQ,EAAEC,MADkB;EAE5BC,QAAQ,EAAED,MAFkB;EAG5BE,QAAQ,EAAEF,MAHkB;EAI5BG,MAAM,EAAEC,OAJoB;EAK5BC,IAAI,EAAEL;AALsB,CAAX,CAAnB;;eAQeH,iBAAA,CAASS,KAAT,CAAe,MAAf,EAAuBR,UAAvB,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6345d16c18c7c0b1073e10cb45ce975eb2f4156b","contentHash":"71df07d4598952ac066405be4775c7691240dea0a65e2ffdefacf825fead2eb4"},"/app/src/models/exam.js":{"path":"/app/src/models/exam.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":15},"end":{"line":12,"column":39}},"5":{"start":{"line":13,"column":19},"end":{"line":16,"column":2}},"6":{"start":{"line":17,"column":0},"end":{"line":19,"column":3}},"7":{"start":{"line":21,"column":15},"end":{"line":21,"column":58}},"8":{"start":{"line":23,"column":0},"end":{"line":23,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"names":["Schema","mongoose","ExamSchema","examName","String","examType","index","model"],"sourceRoot":"/app/src/models/","sources":["exam.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst Schema = mongoose.Schema;\n\nconst ExamSchema = new Schema({\n  examName: String,\n  examType: String\n});\nExamSchema.index({ examName: 1 });\nexport default mongoose.model(\"exam\", ExamSchema);\n"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,MAAM,GAAGC,iBAAA,CAASD,MAAxB;AAEA,MAAME,UAAU,GAAG,IAAIF,MAAJ,CAAW;EAC5BG,QAAQ,EAAEC,MADkB;EAE5BC,QAAQ,EAAED;AAFkB,CAAX,CAAnB;AAIAF,UAAU,CAACI,KAAX,CAAiB;EAAEH,QAAQ,EAAE;AAAZ,CAAjB;;eACeF,iBAAA,CAASM,KAAT,CAAe,MAAf,EAAuBL,UAAvB,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"5def38c91f081949ed60a3d44ce92fd6cb57499e","contentHash":"37051e029a7bbb238c6598cabac6eeb7a8d51eea416613d225d84d0220573d55"},"/app/src/models/digitalAsset.js":{"path":"/app/src/models/digitalAsset.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":15},"end":{"line":12,"column":39}},"5":{"start":{"line":13,"column":27},"end":{"line":21,"column":2}},"6":{"start":{"line":23,"column":15},"end":{"line":23,"column":74}},"7":{"start":{"line":25,"column":0},"end":{"line":25,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"names":["Schema","mongoose","DigitalAssetSchema","fileName","String","assetType","fileType","description","type","required","model"],"sourceRoot":"/app/src/models/","sources":["digitalAsset.js"],"sourcesContent":["import mongoose from \"mongoose\";\n\nconst Schema = mongoose.Schema;\n\nconst DigitalAssetSchema = new Schema({\n  fileName: String,\n  assetType: String,\n  fileType: String,\n  description: { type: String, required: false },\n});\n\nexport default mongoose.model(\"digitalAsset\", DigitalAssetSchema);\n"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,MAAM,GAAGC,iBAAA,CAASD,MAAxB;AAEA,MAAME,kBAAkB,GAAG,IAAIF,MAAJ,CAAW;EACpCG,QAAQ,EAAEC,MAD0B;EAEpCC,SAAS,EAAED,MAFyB;EAGpCE,QAAQ,EAAEF,MAH0B;EAIpCG,WAAW,EAAE;IAAEC,IAAI,EAAEJ,MAAR;IAAgBK,QAAQ,EAAE;EAA1B;AAJuB,CAAX,CAA3B;;eAOeR,iBAAA,CAASS,KAAT,CAAe,cAAf,EAA+BR,kBAA/B,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c4db78aa9cf885c781425d100dae45a4a9e58639","contentHash":"5d7dc07d658d96bc807f7ed6b36b3ac2b9af54e45ff544f7d1e2ca990b992ee6"},"/app/src/models/spellingQuestion.js":{"path":"/app/src/models/spellingQuestion.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":15},"end":{"line":12,"column":39}},"5":{"start":{"line":13,"column":31},"end":{"line":25,"column":2}},"6":{"start":{"line":27,"column":15},"end":{"line":27,"column":82}},"7":{"start":{"line":29,"column":0},"end":{"line":29,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"names":["Schema","mongoose","SpellingQuestionSchema","word","String","correctWord","clue","type","required","createdAt","Date","examId","examinationType","timestamps","model"],"sourceRoot":"/app/src/models/","sources":["spellingQuestion.js"],"sourcesContent":["import mongoose from \"mongoose\";\nconst Schema = mongoose.Schema;\n\nconst SpellingQuestionSchema = new Schema(\n  {\n    word: String,\n    correctWord: String,\n    clue: { type: String, required: false },\n    createdAt: Date,\n    examId: String,\n    examinationType: String,\n  },\n  { timestamps: true }\n);\n\nexport default mongoose.model(\"spellingQuestion\", SpellingQuestionSchema);\n"],"mappings":";;;;;;;AAAA;;;;AACA,MAAMA,MAAM,GAAGC,iBAAA,CAASD,MAAxB;AAEA,MAAME,sBAAsB,GAAG,IAAIF,MAAJ,CAC7B;EACEG,IAAI,EAAEC,MADR;EAEEC,WAAW,EAAED,MAFf;EAGEE,IAAI,EAAE;IAAEC,IAAI,EAAEH,MAAR;IAAgBI,QAAQ,EAAE;EAA1B,CAHR;EAIEC,SAAS,EAAEC,IAJb;EAKEC,MAAM,EAAEP,MALV;EAMEQ,eAAe,EAAER;AANnB,CAD6B,EAS7B;EAAES,UAAU,EAAE;AAAd,CAT6B,CAA/B;;eAYeZ,iBAAA,CAASa,KAAT,CAAe,kBAAf,EAAmCZ,sBAAnC,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8a92519d3b127ee53301a148dfd3515d22a505e2","contentHash":"6f4003ec9cfa20495bf1e7d97c9525161968036508832a76383fb97a9b0b8343"},"/app/src/models/quantitativeQuestion.js":{"path":"/app/src/models/quantitativeQuestion.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":15},"end":{"line":12,"column":39}},"5":{"start":{"line":13,"column":35},"end":{"line":23,"column":2}},"6":{"start":{"line":25,"column":15},"end":{"line":25,"column":88}},"7":{"start":{"line":27,"column":0},"end":{"line":27,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"names":["Schema","mongoose","QuantitativeQuestionSchema","questionInstruction","String","questionUrl","answersImageUrl","Array","correctAnswerImage","createdAt","Date","examId","examinationType","timestamps","model"],"sourceRoot":"/app/src/models/","sources":["quantitativeQuestion.js"],"sourcesContent":["import mongoose from \"mongoose\";\nconst Schema = mongoose.Schema;\n\nconst QuantitativeQuestionSchema = new Schema(\n  {\n    questionInstruction: String,\n    questionUrl: String,\n    answersImageUrl: Array,\n    correctAnswerImage: String,\n    createdAt: Date,\n    examId: String,\n    examinationType: String,\n  },\n  { timestamps: true }\n);\n\nexport default mongoose.model(\"quantitativeSchema\", QuantitativeQuestionSchema);\n"],"mappings":";;;;;;;AAAA;;;;AACA,MAAMA,MAAM,GAAGC,iBAAA,CAASD,MAAxB;AAEA,MAAME,0BAA0B,GAAG,IAAIF,MAAJ,CACjC;EACEG,mBAAmB,EAAEC,MADvB;EAEEC,WAAW,EAAED,MAFf;EAGEE,eAAe,EAAEC,KAHnB;EAIEC,kBAAkB,EAAEJ,MAJtB;EAKEK,SAAS,EAAEC,IALb;EAMEC,MAAM,EAAEP,MANV;EAOEQ,eAAe,EAAER;AAPnB,CADiC,EAUjC;EAAES,UAAU,EAAE;AAAd,CAViC,CAAnC;;eAaeZ,iBAAA,CAASa,KAAT,CAAe,oBAAf,EAAqCZ,0BAArC,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a0c5f4839669e914f9cbbc0ac35d71e0c5d481b6","contentHash":"6edc45b6fc58b68eb7a3554834d8b93869404e9a576999214d13a106f8d16034"},"/app/src/models/essayExamQuestion.js":{"path":"/app/src/models/essayExamQuestion.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":15},"end":{"line":12,"column":39}},"5":{"start":{"line":13,"column":32},"end":{"line":37,"column":2}},"6":{"start":{"line":39,"column":15},"end":{"line":39,"column":84}},"7":{"start":{"line":41,"column":0},"end":{"line":41,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1},"f":{"0":1},"b":{"0":[0,1],"1":[1,1]},"inputSourceMap":{"version":3,"names":["Schema","mongoose","EssayExamQuestionSchema","type","String","question","clue","required","possibleAnswers","Array","mediaUrl","mediaType","createdAt","Date","examId","examinationType","timestamps","model"],"sourceRoot":"/app/src/models/","sources":["essayExamQuestion.js"],"sourcesContent":["import mongoose from \"mongoose\";\nconst Schema = mongoose.Schema;\n\nconst EssayExamQuestionSchema = new Schema(\n  {\n    type: String,\n    question: String,\n    clue: { required: false, type: String },\n    possibleAnswers: {\n      type: Array,\n      required: false,\n    },\n    mediaUrl: { type: String, required: false },\n    mediaType: {\n      type: String,\n      required: false,\n    },\n    createdAt: Date,\n    examId: String,\n    examinationType: String,\n  },\n  { timestamps: true }\n);\n\nexport default mongoose.model(\"essayExamQuestion\", EssayExamQuestionSchema);\n"],"mappings":";;;;;;;AAAA;;;;AACA,MAAMA,MAAM,GAAGC,iBAAA,CAASD,MAAxB;AAEA,MAAME,uBAAuB,GAAG,IAAIF,MAAJ,CAC9B;EACEG,IAAI,EAAEC,MADR;EAEEC,QAAQ,EAAED,MAFZ;EAGEE,IAAI,EAAE;IAAEC,QAAQ,EAAE,KAAZ;IAAmBJ,IAAI,EAAEC;EAAzB,CAHR;EAIEI,eAAe,EAAE;IACfL,IAAI,EAAEM,KADS;IAEfF,QAAQ,EAAE;EAFK,CAJnB;EAQEG,QAAQ,EAAE;IAAEP,IAAI,EAAEC,MAAR;IAAgBG,QAAQ,EAAE;EAA1B,CARZ;EASEI,SAAS,EAAE;IACTR,IAAI,EAAEC,MADG;IAETG,QAAQ,EAAE;EAFD,CATb;EAaEK,SAAS,EAAEC,IAbb;EAcEC,MAAM,EAAEV,MAdV;EAeEW,eAAe,EAAEX;AAfnB,CAD8B,EAkB9B;EAAEY,UAAU,EAAE;AAAd,CAlB8B,CAAhC;;eAqBef,iBAAA,CAASgB,KAAT,CAAe,mBAAf,EAAoCf,uBAApC,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9c8523a560fbebad3f0d4bdb5b5b1dd03dadb750","contentHash":"adfb8151e202d47850a7ceff04a6dc67889b46866f045b35662241a62a3b466f"},"/app/src/startup/index.js":{"path":"/app/src/startup/index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":11,"column":3}},"2":{"start":{"line":9,"column":4},"end":{"line":9,"column":39}},"3":{"start":{"line":12,"column":0},"end":{"line":17,"column":3}},"4":{"start":{"line":15,"column":4},"end":{"line":15,"column":40}},"5":{"start":{"line":19,"column":27},"end":{"line":19,"column":83}},"6":{"start":{"line":21,"column":26},"end":{"line":21,"column":81}},"7":{"start":{"line":23,"column":39},"end":{"line":23,"column":93}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":7},"end":{"line":8,"column":8}},"loc":{"start":{"line":8,"column":19},"end":{"line":10,"column":3}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":7},"end":{"line":14,"column":8}},"loc":{"start":{"line":14,"column":19},"end":{"line":16,"column":3}},"line":14},"2":{"name":"_interopRequireDefault","decl":{"start":{"line":23,"column":9},"end":{"line":23,"column":31}},"loc":{"start":{"line":23,"column":37},"end":{"line":23,"column":95}},"line":23}},"branchMap":{"0":{"loc":{"start":{"line":23,"column":46},"end":{"line":23,"column":92}},"type":"cond-expr","locations":[{"start":{"line":23,"column":70},"end":{"line":23,"column":73}},{"start":{"line":23,"column":76},"end":{"line":23,"column":92}}],"line":23},"1":{"loc":{"start":{"line":23,"column":46},"end":{"line":23,"column":67}},"type":"binary-expr","locations":[{"start":{"line":23,"column":46},"end":{"line":23,"column":49}},{"start":{"line":23,"column":53},"end":{"line":23,"column":67}}],"line":23}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":2},"f":{"0":1,"1":1,"2":2},"b":{"0":[2,0],"1":[2,2]},"inputSourceMap":{"version":3,"names":[],"sourceRoot":"/app/src/startup/","sources":["index.js"],"sourcesContent":["import expressApp from \"./createExpressServer\";\nimport apolloServer from \"./createApolloServer\"\n\n\nexport { expressApp, apolloServer }"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;AACA"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"829d80a32463e3e873e6b7ab1c4dbaf33ef600fb","contentHash":"3cf7474c17561d12bf41eb05e2d7d94f4593ade515b625edf157e2c5b064431e"},"/app/src/startup/createExpressServer.js":{"path":"/app/src/startup/createExpressServer.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":12},"end":{"line":8,"column":51}},"3":{"start":{"line":10,"column":15},"end":{"line":10,"column":57}},"4":{"start":{"line":12,"column":14},"end":{"line":12,"column":58}},"5":{"start":{"line":14,"column":18},"end":{"line":14,"column":77}},"6":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"7":{"start":{"line":18,"column":15},"end":{"line":18,"column":32}},"8":{"start":{"line":20,"column":21},"end":{"line":41,"column":1}},"9":{"start":{"line":21,"column":14},"end":{"line":21,"column":37}},"10":{"start":{"line":22,"column":2},"end":{"line":22,"column":32}},"11":{"start":{"line":24,"column":2},"end":{"line":28,"column":3}},"12":{"start":{"line":25,"column":4},"end":{"line":27,"column":8}},"13":{"start":{"line":31,"column":2},"end":{"line":31,"column":51}},"14":{"start":{"line":32,"column":2},"end":{"line":39,"column":5}},"15":{"start":{"line":33,"column":4},"end":{"line":33,"column":43}},"16":{"start":{"line":34,"column":4},"end":{"line":34,"column":39}},"17":{"start":{"line":36,"column":4},"end":{"line":36,"column":124}},"18":{"start":{"line":38,"column":4},"end":{"line":38,"column":34}},"19":{"start":{"line":40,"column":2},"end":{"line":40,"column":13}},"20":{"start":{"line":43,"column":15},"end":{"line":43,"column":27}},"21":{"start":{"line":44,"column":0},"end":{"line":44,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":31}},"loc":{"start":{"line":16,"column":37},"end":{"line":16,"column":95}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":21},"end":{"line":20,"column":22}},"loc":{"start":{"line":20,"column":33},"end":{"line":41,"column":1}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":32,"column":10},"end":{"line":32,"column":11}},"loc":{"start":{"line":32,"column":35},"end":{"line":39,"column":3}},"line":32}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":92}},"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}],"line":16},"1":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":67}},"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}],"line":16},"2":{"loc":{"start":{"line":24,"column":2},"end":{"line":28,"column":3}},"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":28,"column":3}},{"start":{"line":24,"column":2},"end":{"line":28,"column":3}}],"line":24},"3":{"loc":{"start":{"line":33,"column":21},"end":{"line":33,"column":42}},"type":"binary-expr","locations":[{"start":{"line":33,"column":21},"end":{"line":33,"column":35}},{"start":{"line":33,"column":39},"end":{"line":33,"column":42}}],"line":33},"4":{"loc":{"start":{"line":34,"column":17},"end":{"line":34,"column":38}},"type":"binary-expr","locations":[{"start":{"line":34,"column":17},"end":{"line":34,"column":27}},{"start":{"line":34,"column":31},"end":{"line":34,"column":38}}],"line":34},"5":{"loc":{"start":{"line":36,"column":37},"end":{"line":36,"column":54}},"type":"binary-expr","locations":[{"start":{"line":36,"column":37},"end":{"line":36,"column":47}},{"start":{"line":36,"column":51},"end":{"line":36,"column":54}}],"line":36},"6":{"loc":{"start":{"line":38,"column":15},"end":{"line":38,"column":32}},"type":"binary-expr","locations":[{"start":{"line":38,"column":15},"end":{"line":38,"column":25}},{"start":{"line":38,"column":29},"end":{"line":38,"column":32}}],"line":38}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":1,"8":1,"9":1,"10":1,"11":1,"12":0,"13":1,"14":1,"15":0,"16":0,"17":0,"18":0,"19":1,"20":1,"21":1},"f":{"0":4,"1":1,"2":0},"b":{"0":[2,2],"1":[4,4],"2":[0,1],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"names":["morgan","require","createServer","app","express","use","cors","process","env","NODE_ENV","stream","config","winston","post","uploadFile","err","req","res","next","statusCode","status","error","message","originalUrl","method","ip"],"sourceRoot":"/app/src/startup/","sources":["createExpressServer.js"],"sourcesContent":["import cors from \"cors\";\nimport express from \"express\";\nimport config from \"../config\";\nimport uploadFile from \"../middleware/uploadFile\";\nconst morgan = require(\"morgan\");\n\nconst createServer = function () {\n  const app = express();\n  app.use(cors());\n  //app.use(express.static(path.join(__dirname, \"../uploads\")));\n  if (process.env.NODE_ENV === \"production\") {\n    app.use(morgan(\"combined\", { stream: config.winston.stream }));\n  }\n\n  //REST Route for uploading files\n  app.post(\"/api/uploadFile\", uploadFile);\n\n  app.use((err, req, res, next) => {\n    err.statusCode = err.statusCode || 500;\n    err.status = err.status || \"error\";\n\n    config.winston.error(\n      `${err.status || 500} - ${err.message} - ${req.originalUrl} - ${\n        req.method\n      } - ${req.ip}`\n    );\n    res.status(err.status || 500);\n  });\n\n  return app;\n};\n\nexport default createServer;"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;AACA,MAAMA,MAAM,GAAGC,OAAO,CAAC,QAAD,CAAtB;;AAEA,MAAMC,YAAY,GAAG,YAAY;EAC/B,MAAMC,GAAG,GAAG,IAAAC,gBAAA,GAAZ;EACAD,GAAG,CAACE,GAAJ,CAAQ,IAAAC,aAAA,GAAR,EAF+B,CAG/B;;EACA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;IACzCN,GAAG,CAACE,GAAJ,CAAQL,MAAM,CAAC,UAAD,EAAa;MAAEU,MAAM,EAAEC,eAAA,CAAOC,OAAP,CAAeF;IAAzB,CAAb,CAAd;EACD,CAN8B,CAQ/B;;;EACAP,GAAG,CAACU,IAAJ,CAAS,iBAAT,EAA4BC,mBAA5B;EAEAX,GAAG,CAACE,GAAJ,CAAQ,CAACU,GAAD,EAAMC,GAAN,EAAWC,GAAX,EAAgBC,IAAhB,KAAyB;IAC/BH,GAAG,CAACI,UAAJ,GAAiBJ,GAAG,CAACI,UAAJ,IAAkB,GAAnC;IACAJ,GAAG,CAACK,MAAJ,GAAaL,GAAG,CAACK,MAAJ,IAAc,OAA3B;;IAEAT,eAAA,CAAOC,OAAP,CAAeS,KAAf,CACG,GAAEN,GAAG,CAACK,MAAJ,IAAc,GAAI,MAAKL,GAAG,CAACO,OAAQ,MAAKN,GAAG,CAACO,WAAY,MACzDP,GAAG,CAACQ,MACL,MAAKR,GAAG,CAACS,EAAG,EAHf;;IAKAR,GAAG,CAACG,MAAJ,CAAWL,GAAG,CAACK,MAAJ,IAAc,GAAzB;EACD,CAVD;EAYA,OAAOjB,GAAP;AACD,CAxBD;;eA0BeD,Y"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"29f89fc760d82b32a6a223b5b1d151f6acfad3fa","contentHash":"78c09c378a95aad291bb5d1c03dd37c7a22f78a9db748a1fcf9d2ac1232a9962"},"/app/src/config/index.js":{"path":"/app/src/config/index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":14},"end":{"line":8,"column":57}},"3":{"start":{"line":10,"column":12},"end":{"line":10,"column":53}},"4":{"start":{"line":12,"column":15},"end":{"line":12,"column":59}},"5":{"start":{"line":14,"column":15},"end":{"line":14,"column":59}},"6":{"start":{"line":16,"column":39},"end":{"line":16,"column":93}},"7":{"start":{"line":18,"column":15},"end":{"line":24,"column":1}},"8":{"start":{"line":25,"column":0},"end":{"line":25,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":16,"column":9},"end":{"line":16,"column":31}},"loc":{"start":{"line":16,"column":37},"end":{"line":16,"column":95}},"line":16}},"branchMap":{"0":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":92}},"type":"cond-expr","locations":[{"start":{"line":16,"column":70},"end":{"line":16,"column":73}},{"start":{"line":16,"column":76},"end":{"line":16,"column":92}}],"line":16},"1":{"loc":{"start":{"line":16,"column":46},"end":{"line":16,"column":67}},"type":"binary-expr","locations":[{"start":{"line":16,"column":46},"end":{"line":16,"column":49}},{"start":{"line":16,"column":53},"end":{"line":16,"column":67}}],"line":16}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":4,"7":1,"8":1},"f":{"0":4},"b":{"0":[4,0],"1":[4,4]},"inputSourceMap":{"version":3,"names":["isAuth","keys","initDataBase","configStart","createAdminUser","winston"],"sourceRoot":"/app/src/config/","sources":["index.js"],"sourcesContent":["import isAuth from \"./isAuth\";\nimport keys from \"./keys\";\nimport configStart from \"./startup\";\nimport winston from \"./winston\";\n\n\n\nexport default {\n    isAuth,\n    keys,\n    initDataBase: configStart.initDataBase, \n    createAdminUser: configStart.createAdminUser,\n    winston\n}"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;;;eAIe;EACXA,MAAM,EAANA,eADW;EAEXC,IAAI,EAAJA,aAFW;EAGXC,YAAY,EAAEC,gBAAA,CAAYD,YAHf;EAIXE,eAAe,EAAED,gBAAA,CAAYC,eAJlB;EAKXC,OAAO,EAAPA;AALW,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"a0a6372bfea9e0a866a38063b07b02a435617e73","contentHash":"afd893a20c91a7cf52d0d8347d55e29a69580a8c455cf2d615e9e7019e53e920"},"/app/src/config/isAuth.js":{"path":"/app/src/config/isAuth.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":20},"end":{"line":8,"column":67}},"3":{"start":{"line":10,"column":12},"end":{"line":10,"column":53}},"4":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"5":{"start":{"line":14,"column":15},"end":{"line":52,"column":1}},"6":{"start":{"line":16,"column":21},"end":{"line":16,"column":52}},"7":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"8":{"start":{"line":19,"column":4},"end":{"line":19,"column":16}},"9":{"start":{"line":22,"column":16},"end":{"line":22,"column":40}},"10":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"11":{"start":{"line":25,"column":4},"end":{"line":25,"column":16}},"12":{"start":{"line":30,"column":2},"end":{"line":34,"column":3}},"13":{"start":{"line":31,"column":4},"end":{"line":31,"column":77}},"14":{"start":{"line":33,"column":4},"end":{"line":33,"column":16}},"15":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"16":{"start":{"line":37,"column":4},"end":{"line":37,"column":16}},"17":{"start":{"line":45,"column":6},"end":{"line":45,"column":18}},"18":{"start":{"line":46,"column":2},"end":{"line":51,"column":4}},"19":{"start":{"line":54,"column":0},"end":{"line":54,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":31}},"loc":{"start":{"line":12,"column":37},"end":{"line":12,"column":95}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":15},"end":{"line":14,"column":16}},"loc":{"start":{"line":14,"column":22},"end":{"line":52,"column":1}},"line":14}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":92}},"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}],"line":12},"1":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":67}},"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}],"line":12},"2":{"loc":{"start":{"line":16,"column":21},"end":{"line":16,"column":52}},"type":"binary-expr","locations":[{"start":{"line":16,"column":21},"end":{"line":16,"column":46}},{"start":{"line":16,"column":50},"end":{"line":16,"column":52}}],"line":16},"3":{"loc":{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},"type":"if","locations":[{"start":{"line":18,"column":2},"end":{"line":20,"column":3}},{"start":{"line":18,"column":2},"end":{"line":20,"column":3}}],"line":18},"4":{"loc":{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},"type":"if","locations":[{"start":{"line":24,"column":2},"end":{"line":26,"column":3}},{"start":{"line":24,"column":2},"end":{"line":26,"column":3}}],"line":24},"5":{"loc":{"start":{"line":24,"column":6},"end":{"line":24,"column":28}},"type":"binary-expr","locations":[{"start":{"line":24,"column":6},"end":{"line":24,"column":12}},{"start":{"line":24,"column":16},"end":{"line":24,"column":28}}],"line":24},"6":{"loc":{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},"type":"if","locations":[{"start":{"line":36,"column":2},"end":{"line":38,"column":3}},{"start":{"line":36,"column":2},"end":{"line":38,"column":3}}],"line":36}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":1,"6":4,"7":4,"8":4,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":1},"f":{"0":2,"1":4},"b":{"0":[1,1],"1":[2,2],"2":[4,4],"3":[4,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"names":["req","authHeader","headers","authorization","token","split","decodedToken","jwt","verify","keys","secret","error","id","username","name","userType"],"sourceRoot":"/app/src/config/","sources":["isAuth.js"],"sourcesContent":["import jwt from \"jsonwebtoken\";\nimport keys from \"./keys\";\n\nexport default (req) => {\n  //const token = req.headers.authorization || \"\";\n  const authHeader = req.headers.authorization || \"\";\n  if (!authHeader) {\n    return null;\n  }\n  const token = authHeader.split(\" \")[1];\n  if (!token || token === \"\") {\n    return null;\n  }\n  let decodedToken;\n  try {\n    decodedToken = jwt.verify(token, keys.secret);\n  } catch (error) {\n    return null;\n  }\n\n  if (!decodedToken) {\n    return null;\n  }\n\n  const { id, username, name, userType } = decodedToken;\n\n  return {\n    id,\n    username,\n    name,\n    userType,\n  };\n};\n"],"mappings":";;;;;;;AAAA;;AACA;;;;eAEgBA,GAAD,IAAS;EACtB;EACA,MAAMC,UAAU,GAAGD,GAAG,CAACE,OAAJ,CAAYC,aAAZ,IAA6B,EAAhD;;EACA,IAAI,CAACF,UAAL,EAAiB;IACf,OAAO,IAAP;EACD;;EACD,MAAMG,KAAK,GAAGH,UAAU,CAACI,KAAX,CAAiB,GAAjB,EAAsB,CAAtB,CAAd;;EACA,IAAI,CAACD,KAAD,IAAUA,KAAK,KAAK,EAAxB,EAA4B;IAC1B,OAAO,IAAP;EACD;;EACD,IAAIE,YAAJ;;EACA,IAAI;IACFA,YAAY,GAAGC,qBAAA,CAAIC,MAAJ,CAAWJ,KAAX,EAAkBK,aAAA,CAAKC,MAAvB,CAAf;EACD,CAFD,CAEE,OAAOC,KAAP,EAAc;IACd,OAAO,IAAP;EACD;;EAED,IAAI,CAACL,YAAL,EAAmB;IACjB,OAAO,IAAP;EACD;;EAED,MAAM;IAAEM,EAAF;IAAMC,QAAN;IAAgBC,IAAhB;IAAsBC;EAAtB,IAAmCT,YAAzC;EAEA,OAAO;IACLM,EADK;IAELC,QAFK;IAGLC,IAHK;IAILC;EAJK,CAAP;AAMD,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8c3ba2e2780a8f1863d2b2bf3976fc1c66b49b4c","contentHash":"6a9cabbe2f9aea986e8b62446972847ec26e7f6ce5295f875941233ecd68b25f"},"/app/src/config/keys.js":{"path":"/app/src/config/keys.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":7,"column":15},"end":{"line":9,"column":1}},"3":{"start":{"line":10,"column":0},"end":{"line":10,"column":27}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["secret"],"sourceRoot":"/app/src/config/","sources":["keys.js"],"sourcesContent":["export default {\n  secret:\n    \"fhfyyfyrr8888484hfnnfnfjfkkkdkdhhhhhhhhhhhhhhhhhhh66666666666666666633333333333333333333333333331111111111djooyy777777ggfgggg55444dddffggssawqqsdfggghhbhhoooppphhhvcvdfxxzewew4rfgghhhhdjuidieieejejjejh444+++++%%%%%%^^^GGGGHHHHHHsfdfdfdfdf434343434343434dbdghgggdgdteteeeyyeyeyeyeyeggddbddgdghhwwuwuwuwuwuwuuwsszzwzezdfzfzgzhzhzzjdhhyeyey77y4h4hg4g4g4g4g4fgfcdwzwsx\",\n};\n"],"mappings":";;;;;;eAAe;EACbA,MAAM,EACJ;AAFW,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f13f3a7b2ed2c6ff4d9d67b572ef55d6eeee1439","contentHash":"b1cce65a89c240b08cf0a251f8af965b258fe0f423cf534f2b6d79a91d13fdcb"},"/app/src/config/startup.js":{"path":"/app/src/config/startup.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":14},"end":{"line":10,"column":58}},"4":{"start":{"line":12,"column":14},"end":{"line":12,"column":55}},"5":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"6":{"start":{"line":16,"column":17},"end":{"line":16,"column":19}},"7":{"start":{"line":23,"column":4},"end":{"line":23,"column":15}},"8":{"start":{"line":25,"column":21},"end":{"line":35,"column":1}},"9":{"start":{"line":26,"column":12},"end":{"line":26,"column":56}},"10":{"start":{"line":27,"column":2},"end":{"line":33,"column":5}},"11":{"start":{"line":34,"column":2},"end":{"line":34,"column":26}},"12":{"start":{"line":37,"column":24},"end":{"line":63,"column":1}},"13":{"start":{"line":38,"column":2},"end":{"line":62,"column":3}},"14":{"start":{"line":39,"column":22},"end":{"line":41,"column":6}},"15":{"start":{"line":42,"column":4},"end":{"line":42,"column":45}},"16":{"start":{"line":44,"column":4},"end":{"line":59,"column":5}},"17":{"start":{"line":45,"column":6},"end":{"line":45,"column":36}},"18":{"start":{"line":47,"column":19},"end":{"line":47,"column":70}},"19":{"start":{"line":49,"column":20},"end":{"line":55,"column":7}},"20":{"start":{"line":56,"column":24},"end":{"line":56,"column":55}},"21":{"start":{"line":57,"column":6},"end":{"line":57,"column":29}},"22":{"start":{"line":58,"column":6},"end":{"line":58,"column":33}},"23":{"start":{"line":61,"column":4},"end":{"line":61,"column":23}},"24":{"start":{"line":65,"column":15},"end":{"line":68,"column":1}},"25":{"start":{"line":69,"column":0},"end":{"line":69,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":95}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":25,"column":21},"end":{"line":25,"column":22}},"loc":{"start":{"line":25,"column":33},"end":{"line":35,"column":1}},"line":25},"2":{"name":"(anonymous_2)","decl":{"start":{"line":37,"column":24},"end":{"line":37,"column":25}},"loc":{"start":{"line":37,"column":36},"end":{"line":63,"column":1}},"line":37}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":92}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14},"2":{"loc":{"start":{"line":44,"column":4},"end":{"line":59,"column":5}},"type":"if","locations":[{"start":{"line":44,"column":4},"end":{"line":59,"column":5}},{"start":{"line":44,"column":4},"end":{"line":59,"column":5}}],"line":44}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":1,"9":0,"10":0,"11":0,"12":1,"13":1,"14":1,"15":1,"16":1,"17":1,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":1,"25":1},"f":{"0":3,"1":0,"2":1},"b":{"0":[1,2],"1":[3,3],"2":[1,0]},"inputSourceMap":{"version":3,"names":["saltRounds","DB_HOST","DB_PORT","DB_USER","DB_DATABASE","DB_PASSWORD","process","env","initDataBase","url","mongoose","connect","useNewUrlParser","useFindAndModify","useUnifiedTopology","useCreateIndex","keepAlive","createAdminUser","findAdmin","models","User","findOne","username","console","log","hash","bcrypt","hashSync","admin","password","name","active","userType","adminUser","save","error"],"sourceRoot":"/app/src/config/","sources":["startup.js"],"sourcesContent":["import mongoose from \"mongoose\";\nimport models from \"../models\";\nimport bcrypt from \"bcrypt\";\nlet saltRounds = 10;\n\nconst { DB_HOST, DB_PORT, DB_USER, DB_DATABASE, DB_PASSWORD } = process.env;\n\nconst initDataBase = async () => {\n  let url = `mongodb://mongodb_cbt:27017/${DB_DATABASE}`;\n\n  await mongoose.connect(url, {\n    useNewUrlParser: true,\n    useFindAndModify: false,\n    useUnifiedTopology: true,\n    useCreateIndex: true,\n    keepAlive: true,\n  });\n  await createAdminUser();\n};\n\nconst createAdminUser = async () => {\n  try {\n    const findAdmin = await models.User.findOne({\n      username: \"jamiebones147@gmail.com\",\n    });\n    console.log(\"find admin is \", findAdmin);\n\n    if (findAdmin) {\n      console.log(\"admin is found\");\n    } else {\n      const hash = bcrypt.hashSync(\"password123\", saltRounds);\n      const admin = {\n        username: \"jamiebones147@gmail.com\",\n        password: hash,\n        name: \"James Oshomah\",\n        active: true,\n        userType: \"super-admin\",\n      };\n      const adminUser = new models.User(admin);\n      await adminUser.save();\n      console.log(\"admin saved\");\n    }\n  } catch (error) {\n    console.log(error);\n  }\n};\n\nexport default { initDataBase, createAdminUser };\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;;;AACA,IAAIA,UAAU,GAAG,EAAjB;AAEA,MAAM;EAAEC,OAAF;EAAWC,OAAX;EAAoBC,OAApB;EAA6BC,WAA7B;EAA0CC;AAA1C,IAA0DC,OAAO,CAACC,GAAxE;;AAEA,MAAMC,YAAY,GAAG,YAAY;EAC/B,IAAIC,GAAG,GAAI,+BAA8BL,WAAY,EAArD;EAEA,MAAMM,iBAAA,CAASC,OAAT,CAAiBF,GAAjB,EAAsB;IAC1BG,eAAe,EAAE,IADS;IAE1BC,gBAAgB,EAAE,KAFQ;IAG1BC,kBAAkB,EAAE,IAHM;IAI1BC,cAAc,EAAE,IAJU;IAK1BC,SAAS,EAAE;EALe,CAAtB,CAAN;EAOA,MAAMC,eAAe,EAArB;AACD,CAXD;;AAaA,MAAMA,eAAe,GAAG,YAAY;EAClC,IAAI;IACF,MAAMC,SAAS,GAAG,MAAMC,eAAA,CAAOC,IAAP,CAAYC,OAAZ,CAAoB;MAC1CC,QAAQ,EAAE;IADgC,CAApB,CAAxB;IAGAC,OAAO,CAACC,GAAR,CAAY,gBAAZ,EAA8BN,SAA9B;;IAEA,IAAIA,SAAJ,EAAe;MACbK,OAAO,CAACC,GAAR,CAAY,gBAAZ;IACD,CAFD,MAEO;MACL,MAAMC,IAAI,GAAGC,eAAA,CAAOC,QAAP,CAAgB,aAAhB,EAA+B3B,UAA/B,CAAb;;MACA,MAAM4B,KAAK,GAAG;QACZN,QAAQ,EAAE,yBADE;QAEZO,QAAQ,EAAEJ,IAFE;QAGZK,IAAI,EAAE,eAHM;QAIZC,MAAM,EAAE,IAJI;QAKZC,QAAQ,EAAE;MALE,CAAd;MAOA,MAAMC,SAAS,GAAG,IAAId,eAAA,CAAOC,IAAX,CAAgBQ,KAAhB,CAAlB;MACA,MAAMK,SAAS,CAACC,IAAV,EAAN;MACAX,OAAO,CAACC,GAAR,CAAY,aAAZ;IACD;EACF,CArBD,CAqBE,OAAOW,KAAP,EAAc;IACdZ,OAAO,CAACC,GAAR,CAAYW,KAAZ;EACD;AACF,CAzBD;;eA2Be;EAAE3B,YAAF;EAAgBS;AAAhB,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"4985cc7a27333073c9e4ccbbdf99db9c2dbc25d8","contentHash":"91e6d8f2c6196607f100a44fafd6150a1f4e2ee757e98c353b21527e82236599"},"/app/src/config/winston.js":{"path":"/app/src/config/winston.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":40}},"3":{"start":{"line":10,"column":16},"end":{"line":10,"column":34}},"4":{"start":{"line":12,"column":16},"end":{"line":29,"column":1}},"5":{"start":{"line":30,"column":15},"end":{"line":34,"column":2}},"6":{"start":{"line":35,"column":0},"end":{"line":39,"column":2}},"7":{"start":{"line":37,"column":4},"end":{"line":37,"column":25}},"8":{"start":{"line":40,"column":15},"end":{"line":40,"column":21}},"9":{"start":{"line":41,"column":0},"end":{"line":41,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":36,"column":9},"end":{"line":36,"column":10}},"loc":{"start":{"line":36,"column":38},"end":{"line":38,"column":3}},"line":36}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":0,"8":1,"9":1},"f":{"0":0},"b":{},"inputSourceMap":{"version":3,"names":["appRoot","require","winston","options","file","level","filename","handleExceptions","json","maxsize","maxFiles","colorize","console","logger","createLogger","transports","File","Console","exitOnError","stream","write","message","encoding","info"],"sourceRoot":"/app/src/config/","sources":["winston.js"],"sourcesContent":["const appRoot = require(\"app-root-path\");\nconst winston = require(\"winston\");\n\nconst options = {\n  file: {\n    level: \"info\",\n    filename: `${appRoot}/logs/app.log`,\n    handleExceptions: true,\n    json: true,\n    maxsize: 5242880, // 5MB\n    maxFiles: 5,\n    colorize: false,\n  },\n  console: {\n    level: \"debug\",\n    handleExceptions: true,\n    json: false,\n    colorize: true,\n  },\n};\n\nconst logger = new winston.createLogger({\n  transports: [\n    new winston.transports.File(options.file),\n    new winston.transports.Console(options.console),\n  ],\n  exitOnError: false, // do not exit on handled exceptions\n});\n\nlogger.stream = {\n  write: function (message, encoding) {\n    logger.info(message);\n  },\n};\n\nexport default logger;\n"],"mappings":";;;;;;;AAAA,MAAMA,OAAO,GAAGC,OAAO,CAAC,eAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,SAAD,CAAvB;;AAEA,MAAME,OAAO,GAAG;EACdC,IAAI,EAAE;IACJC,KAAK,EAAE,MADH;IAEJC,QAAQ,EAAG,GAAEN,OAAQ,eAFjB;IAGJO,gBAAgB,EAAE,IAHd;IAIJC,IAAI,EAAE,IAJF;IAKJC,OAAO,EAAE,OALL;IAKc;IAClBC,QAAQ,EAAE,CANN;IAOJC,QAAQ,EAAE;EAPN,CADQ;EAUdC,OAAO,EAAE;IACPP,KAAK,EAAE,OADA;IAEPE,gBAAgB,EAAE,IAFX;IAGPC,IAAI,EAAE,KAHC;IAIPG,QAAQ,EAAE;EAJH;AAVK,CAAhB;AAkBA,MAAME,MAAM,GAAG,IAAIX,OAAO,CAACY,YAAZ,CAAyB;EACtCC,UAAU,EAAE,CACV,IAAIb,OAAO,CAACa,UAAR,CAAmBC,IAAvB,CAA4Bb,OAAO,CAACC,IAApC,CADU,EAEV,IAAIF,OAAO,CAACa,UAAR,CAAmBE,OAAvB,CAA+Bd,OAAO,CAACS,OAAvC,CAFU,CAD0B;EAKtCM,WAAW,EAAE,KALyB,CAKlB;;AALkB,CAAzB,CAAf;AAQAL,MAAM,CAACM,MAAP,GAAgB;EACdC,KAAK,EAAE,UAAUC,OAAV,EAAmBC,QAAnB,EAA6B;IAClCT,MAAM,CAACU,IAAP,CAAYF,OAAZ;EACD;AAHa,CAAhB;eAMeR,M"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"514c6fd5e44b8528d0e243d440a3ce988682ec39","contentHash":"df7f3fc555ff4ecb09cba3cbd408c6b134f4256d980af461f33ac1cd29ae05d9"},"/app/src/middleware/uploadFile.js":{"path":"/app/src/middleware/uploadFile.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":10},"end":{"line":8,"column":47}},"3":{"start":{"line":10,"column":12},"end":{"line":10,"column":51}},"4":{"start":{"line":12,"column":15},"end":{"line":12,"column":60}},"5":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"6":{"start":{"line":16,"column":19},"end":{"line":16,"column":40}},"7":{"start":{"line":18,"column":19},"end":{"line":46,"column":1}},"8":{"start":{"line":19,"column":15},"end":{"line":19,"column":44}},"9":{"start":{"line":20,"column":2},"end":{"line":20,"column":39}},"10":{"start":{"line":21,"column":2},"end":{"line":45,"column":5}},"11":{"start":{"line":22,"column":4},"end":{"line":44,"column":5}},"12":{"start":{"line":23,"column":19},"end":{"line":23,"column":29}},"13":{"start":{"line":24,"column":25},"end":{"line":24,"column":73}},"14":{"start":{"line":25,"column":20},"end":{"line":25,"column":44}},"15":{"start":{"line":26,"column":20},"end":{"line":26,"column":100}},"16":{"start":{"line":28,"column":20},"end":{"line":28,"column":53}},"17":{"start":{"line":30,"column":6},"end":{"line":30,"column":50}},"18":{"start":{"line":33,"column":24},"end":{"line":38,"column":7}},"19":{"start":{"line":39,"column":6},"end":{"line":39,"column":73}},"20":{"start":{"line":40,"column":6},"end":{"line":40,"column":47}},"21":{"start":{"line":42,"column":6},"end":{"line":42,"column":25}},"22":{"start":{"line":43,"column":6},"end":{"line":43,"column":29}},"23":{"start":{"line":48,"column":15},"end":{"line":48,"column":25}},"24":{"start":{"line":49,"column":0},"end":{"line":49,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":95}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":19},"end":{"line":18,"column":20}},"loc":{"start":{"line":18,"column":39},"end":{"line":46,"column":1}},"line":18},"2":{"name":"(anonymous_2)","decl":{"start":{"line":21,"column":18},"end":{"line":21,"column":19}},"loc":{"start":{"line":21,"column":54},"end":{"line":45,"column":3}},"line":21}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":92}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":1,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":1,"24":1},"f":{"0":3,"1":0,"2":0},"b":{"0":[1,2],"1":[3,3]},"inputSourceMap":{"version":3,"names":["formidable","require","uploadFile","req","res","next","form","IncomingForm","maxFileSize","parse","err","fields","files","date","Date","dateString","getMilliseconds","getSeconds","oldPath","digitalAssets","path","newPath","resolve","name","rawData","fs","readFileSync","writeFileSync","assetData","fileName","assetType","description","fileType","type","method","digitalAsset","createDigitalAssets","send","error","console","log","Error"],"sourceRoot":"/app/src/middleware/","sources":["uploadFile.js"],"sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\nconst formidable = require(\"formidable\");\nimport method from \"../methods\";\n\nconst uploadFile = (req, res, next) => {\n  const form = new formidable.IncomingForm();\n  form.maxFileSize = 600 * 1024 * 1024;\n  form.parse(req, async function (err, fields, files) {\n    try {\n      const date = new Date();\n      const dateString = date.getMilliseconds() + date.getSeconds() + \"_\";\n      var oldPath = files.digitalAssets.path;\n      var newPath =\n        path.resolve(\"./uploads\") + \"/\" + dateString + files.digitalAssets.name;\n      var rawData = fs.readFileSync(oldPath);\n      fs.writeFileSync(newPath, rawData);\n      //this is where we call the method to save the file in the database\n      const assetData = {\n        fileName: dateString + files.digitalAssets.name,\n        assetType: fields.assetType,\n        description: fields.description,\n        fileType: files.digitalAssets.type,\n      };\n      await method.digitalAsset.createDigitalAssets(assetData);\n      return res.send(\"Successfully uploaded\");\n    } catch (error) {\n      console.log(error);\n      throw new Error(error);\n    }\n  });\n};\n\nexport default uploadFile;\n"],"mappings":";;;;;;;AAAA;;AACA;;AAEA;;;;AADA,MAAMA,UAAU,GAAGC,OAAO,CAAC,YAAD,CAA1B;;AAGA,MAAMC,UAAU,GAAG,CAACC,GAAD,EAAMC,GAAN,EAAWC,IAAX,KAAoB;EACrC,MAAMC,IAAI,GAAG,IAAIN,UAAU,CAACO,YAAf,EAAb;EACAD,IAAI,CAACE,WAAL,GAAmB,MAAM,IAAN,GAAa,IAAhC;EACAF,IAAI,CAACG,KAAL,CAAWN,GAAX,EAAgB,gBAAgBO,GAAhB,EAAqBC,MAArB,EAA6BC,KAA7B,EAAoC;IAClD,IAAI;MACF,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;MACA,MAAMC,UAAU,GAAGF,IAAI,CAACG,eAAL,KAAyBH,IAAI,CAACI,UAAL,EAAzB,GAA6C,GAAhE;MACA,IAAIC,OAAO,GAAGN,KAAK,CAACO,aAAN,CAAoBC,IAAlC;MACA,IAAIC,OAAO,GACTD,aAAA,CAAKE,OAAL,CAAa,WAAb,IAA4B,GAA5B,GAAkCP,UAAlC,GAA+CH,KAAK,CAACO,aAAN,CAAoBI,IADrE;;MAEA,IAAIC,OAAO,GAAGC,WAAA,CAAGC,YAAH,CAAgBR,OAAhB,CAAd;;MACAO,WAAA,CAAGE,aAAH,CAAiBN,OAAjB,EAA0BG,OAA1B,EAPE,CAQF;;;MACA,MAAMI,SAAS,GAAG;QAChBC,QAAQ,EAAEd,UAAU,GAAGH,KAAK,CAACO,aAAN,CAAoBI,IAD3B;QAEhBO,SAAS,EAAEnB,MAAM,CAACmB,SAFF;QAGhBC,WAAW,EAAEpB,MAAM,CAACoB,WAHJ;QAIhBC,QAAQ,EAAEpB,KAAK,CAACO,aAAN,CAAoBc;MAJd,CAAlB;MAMA,MAAMC,gBAAA,CAAOC,YAAP,CAAoBC,mBAApB,CAAwCR,SAAxC,CAAN;MACA,OAAOxB,GAAG,CAACiC,IAAJ,CAAS,uBAAT,CAAP;IACD,CAjBD,CAiBE,OAAOC,KAAP,EAAc;MACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACA,MAAM,IAAIG,KAAJ,CAAUH,KAAV,CAAN;IACD;EACF,CAtBD;AAuBD,CA1BD;;eA4BepC,U"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"474d66cea9b770eaae544cdaf92af732c64bdb9d","contentHash":"535faaf5a621f717897d328060db97e882d414dd94fa64c031987b5e6d23a8c5"},"/app/src/methods/index.js":{"path":"/app/src/methods/index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":20},"end":{"line":8,"column":69}},"3":{"start":{"line":10,"column":18},"end":{"line":10,"column":65}},"4":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"5":{"start":{"line":14,"column":15},"end":{"line":17,"column":1}},"6":{"start":{"line":18,"column":0},"end":{"line":18,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":31}},"loc":{"start":{"line":12,"column":37},"end":{"line":12,"column":95}},"line":12}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":92}},"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}],"line":12},"1":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":67}},"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}],"line":12}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":1,"6":1},"f":{"0":2},"b":{"0":[2,0],"1":[2,2]},"inputSourceMap":{"version":3,"names":["digitalAsset","uploadFile"],"sourceRoot":"/app/src/methods/","sources":["index.js"],"sourcesContent":["import digitalAsset from \"./digitalAsset\";\nimport uploadFile from \"./uploadFile\";\n\nexport default {\n  digitalAsset,\n  uploadFile,\n};\n"],"mappings":";;;;;;;AAAA;;AACA;;;;eAEe;EACbA,YAAY,EAAZA,qBADa;EAEbC,UAAU,EAAVA;AAFa,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"6abbdcd69a13e1a52a660d68336f218424a2a6ad","contentHash":"12b5037e934f9cca26b143fea917b6cffd46bc245198a1a94f9a712670c24a86"},"/app/src/methods/digitalAsset/index.js":{"path":"/app/src/methods/digitalAsset/index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":26},"end":{"line":8,"column":81}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":15},"end":{"line":14,"column":1}},"5":{"start":{"line":15,"column":0},"end":{"line":15,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1},"f":{"0":1},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"names":["createDigitalAssets"],"sourceRoot":"/app/src/methods/digitalAsset/","sources":["index.js"],"sourcesContent":["import createDigitalAssets from \"./createDigitalAsset\";\n\nexport default {\n  createDigitalAssets,\n};\n"],"mappings":";;;;;;;AAAA;;;;eAEe;EACbA,mBAAmB,EAAnBA;AADa,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b6a77de9742de1d5ea87373c769eb7d5a97a2956","contentHash":"ed4ac45aae3531b9de952322f82a205a1fd8056b5a34b958cf5d2e055aaa3f69"},"/app/src/methods/digitalAsset/createDigitalAsset.js":{"path":"/app/src/methods/digitalAsset/createDigitalAsset.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":14},"end":{"line":8,"column":61}},"3":{"start":{"line":10,"column":39},"end":{"line":10,"column":93}},"4":{"start":{"line":12,"column":30},"end":{"line":26,"column":1}},"5":{"start":{"line":18,"column":26},"end":{"line":23,"column":4}},"6":{"start":{"line":24,"column":2},"end":{"line":24,"column":31}},"7":{"start":{"line":25,"column":2},"end":{"line":25,"column":14}},"8":{"start":{"line":28,"column":15},"end":{"line":28,"column":36}},"9":{"start":{"line":29,"column":0},"end":{"line":29,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":10,"column":9},"end":{"line":10,"column":31}},"loc":{"start":{"line":10,"column":37},"end":{"line":10,"column":95}},"line":10},"1":{"name":"(anonymous_1)","decl":{"start":{"line":12,"column":30},"end":{"line":12,"column":31}},"loc":{"start":{"line":17,"column":6},"end":{"line":26,"column":1}},"line":17}},"branchMap":{"0":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":92}},"type":"cond-expr","locations":[{"start":{"line":10,"column":70},"end":{"line":10,"column":73}},{"start":{"line":10,"column":76},"end":{"line":10,"column":92}}],"line":10},"1":{"loc":{"start":{"line":10,"column":46},"end":{"line":10,"column":67}},"type":"binary-expr","locations":[{"start":{"line":10,"column":46},"end":{"line":10,"column":49}},{"start":{"line":10,"column":53},"end":{"line":10,"column":67}}],"line":10}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":0,"6":0,"7":0,"8":1,"9":1},"f":{"0":1,"1":0},"b":{"0":[1,0],"1":[1,1]},"inputSourceMap":{"version":3,"names":["createNewDigitalAsset","fileName","assetType","description","fileType","newDigitalAsset","models","DigitalAsset","save"],"sourceRoot":"/app/src/methods/digitalAsset/","sources":["createDigitalAsset.js"],"sourcesContent":["import models from \"../../models\";\n\nconst createNewDigitalAsset = async ({\n  fileName,\n  assetType,\n  description,\n  fileType,\n}) => {\n  const newDigitalAsset = new models.DigitalAsset({\n    fileName,\n    assetType,\n    description,\n    fileType,\n  });\n  await newDigitalAsset.save();\n  return true;\n};\n\nexport default createNewDigitalAsset;\n"],"mappings":";;;;;;;AAAA;;;;AAEA,MAAMA,qBAAqB,GAAG,OAAO;EACnCC,QADmC;EAEnCC,SAFmC;EAGnCC,WAHmC;EAInCC;AAJmC,CAAP,KAKxB;EACJ,MAAMC,eAAe,GAAG,IAAIC,eAAA,CAAOC,YAAX,CAAwB;IAC9CN,QAD8C;IAE9CC,SAF8C;IAG9CC,WAH8C;IAI9CC;EAJ8C,CAAxB,CAAxB;EAMA,MAAMC,eAAe,CAACG,IAAhB,EAAN;EACA,OAAO,IAAP;AACD,CAdD;;eAgBeR,qB"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ae4887a74f5187c89fd84ec17a72c9b9ba37f0fa","contentHash":"6a2d9c71c57e82ec362ecf563b74b9eb11d92d6a32a2f9172ca624d53f133338"},"/app/src/methods/uploadFile.js":{"path":"/app/src/methods/uploadFile.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":10},"end":{"line":8,"column":47}},"3":{"start":{"line":10,"column":12},"end":{"line":10,"column":51}},"4":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"5":{"start":{"line":14,"column":16},"end":{"line":27,"column":1}},"6":{"start":{"line":18,"column":15},"end":{"line":18,"column":25}},"7":{"start":{"line":19,"column":21},"end":{"line":19,"column":63}},"8":{"start":{"line":20,"column":20},"end":{"line":20,"column":90}},"9":{"start":{"line":21,"column":19},"end":{"line":21,"column":46}},"10":{"start":{"line":22,"column":2},"end":{"line":26,"column":127}},"11":{"start":{"line":22,"column":42},"end":{"line":26,"column":125}},"12":{"start":{"line":23,"column":4},"end":{"line":24,"column":40}},"13":{"start":{"line":24,"column":6},"end":{"line":24,"column":40}},"14":{"start":{"line":25,"column":4},"end":{"line":25,"column":18}},"15":{"start":{"line":26,"column":73},"end":{"line":26,"column":86}},"16":{"start":{"line":26,"column":107},"end":{"line":26,"column":124}},"17":{"start":{"line":29,"column":15},"end":{"line":29,"column":22}},"18":{"start":{"line":30,"column":0},"end":{"line":30,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":31}},"loc":{"start":{"line":12,"column":37},"end":{"line":12,"column":95}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":14,"column":16},"end":{"line":14,"column":17}},"loc":{"start":{"line":17,"column":6},"end":{"line":27,"column":1}},"line":17},"2":{"name":"(anonymous_2)","decl":{"start":{"line":22,"column":21},"end":{"line":22,"column":22}},"loc":{"start":{"line":22,"column":42},"end":{"line":26,"column":125}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":22,"column":61},"end":{"line":22,"column":62}},"loc":{"start":{"line":22,"column":70},"end":{"line":26,"column":3}},"line":22},"4":{"name":"(anonymous_4)","decl":{"start":{"line":26,"column":64},"end":{"line":26,"column":65}},"loc":{"start":{"line":26,"column":73},"end":{"line":26,"column":86}},"line":26},"5":{"name":"(anonymous_5)","decl":{"start":{"line":26,"column":101},"end":{"line":26,"column":102}},"loc":{"start":{"line":26,"column":107},"end":{"line":26,"column":124}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":92}},"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}],"line":12},"1":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":67}},"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}],"line":12},"2":{"loc":{"start":{"line":23,"column":4},"end":{"line":24,"column":40}},"type":"if","locations":[{"start":{"line":23,"column":4},"end":{"line":24,"column":40}},{"start":{"line":23,"column":4},"end":{"line":24,"column":40}}],"line":23}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":1,"18":1},"f":{"0":2,"1":0,"2":0,"3":0,"4":0,"5":0},"b":{"0":[0,2],"1":[2,2],"2":[0,0]},"inputSourceMap":{"version":3,"names":["storeFS","stream","filename","date","Date","dateString","getMilliseconds","getSeconds","uploadDir","path","resolve","filePath","Promise","reject","on","error","truncated","fs","unlinkSync","pipe","createWriteStream"],"sourceRoot":"/app/src/methods/","sources":["uploadFile.js"],"sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\n\nconst storeFS = ({ stream, filename }) => {\n  const date = new Date();\n  const dateString = date.getMilliseconds() + date.getSeconds();\n  const uploadDir =\n    path.resolve(\"./uploads\") + \"/\" + dateString + \"-\" + filename;\n\n  const filePath = dateString + \"-\" + filename;\n\n  return new Promise((resolve, reject) =>\n    stream\n      .on(\"error\", (error) => {\n        if (stream.truncated)\n          // delete the truncated file\n          fs.unlinkSync(uploadDir);\n        reject(error);\n      })\n      .pipe(fs.createWriteStream(uploadDir))\n      .on(\"error\", (error) => reject(error))\n      .on(\"finish\", () => resolve(filePath))\n  );\n};\n\nexport default storeFS;\n"],"mappings":";;;;;;;AAAA;;AACA;;;;AAEA,MAAMA,OAAO,GAAG,CAAC;EAAEC,MAAF;EAAUC;AAAV,CAAD,KAA0B;EACxC,MAAMC,IAAI,GAAG,IAAIC,IAAJ,EAAb;EACA,MAAMC,UAAU,GAAGF,IAAI,CAACG,eAAL,KAAyBH,IAAI,CAACI,UAAL,EAA5C;EACA,MAAMC,SAAS,GACbC,aAAA,CAAKC,OAAL,CAAa,WAAb,IAA4B,GAA5B,GAAkCL,UAAlC,GAA+C,GAA/C,GAAqDH,QADvD;EAGA,MAAMS,QAAQ,GAAGN,UAAU,GAAG,GAAb,GAAmBH,QAApC;EAEA,OAAO,IAAIU,OAAJ,CAAY,CAACF,OAAD,EAAUG,MAAV,KACjBZ,MAAM,CACHa,EADH,CACM,OADN,EACgBC,KAAD,IAAW;IACtB,IAAId,MAAM,CAACe,SAAX,EACE;MACAC,WAAA,CAAGC,UAAH,CAAcV,SAAd;IACFK,MAAM,CAACE,KAAD,CAAN;EACD,CANH,EAOGI,IAPH,CAOQF,WAAA,CAAGG,iBAAH,CAAqBZ,SAArB,CAPR,EAQGM,EARH,CAQM,OARN,EAQgBC,KAAD,IAAWF,MAAM,CAACE,KAAD,CARhC,EASGD,EATH,CASM,QATN,EASgB,MAAMJ,OAAO,CAACC,QAAD,CAT7B,CADK,CAAP;AAYD,CApBD;;eAsBeX,O"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"7be39c525cdaaf3404a74a996e3c4395dce04d5c","contentHash":"518165e4a453f0e8791d8810515ce0b4474f8e35e81fa64339667f1cd34c43de"},"/app/src/startup/createApolloServer.js":{"path":"/app/src/startup/createApolloServer.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":14},"end":{"line":8,"column":58}},"3":{"start":{"line":10,"column":17},"end":{"line":10,"column":64}},"4":{"start":{"line":12,"column":27},"end":{"line":12,"column":59}},"5":{"start":{"line":14,"column":14},"end":{"line":14,"column":58}},"6":{"start":{"line":16,"column":14},"end":{"line":16,"column":58}},"7":{"start":{"line":18,"column":39},"end":{"line":18,"column":93}},"8":{"start":{"line":20,"column":27},"end":{"line":76,"column":1}},"9":{"start":{"line":21,"column":17},"end":{"line":74,"column":4}},"10":{"start":{"line":26,"column":6},"end":{"line":29,"column":7}},"11":{"start":{"line":27,"column":8},"end":{"line":27,"column":32}},"12":{"start":{"line":28,"column":8},"end":{"line":28,"column":27}},"13":{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},"14":{"start":{"line":32,"column":8},"end":{"line":32,"column":59}},"15":{"start":{"line":35,"column":6},"end":{"line":37,"column":7}},"16":{"start":{"line":36,"column":8},"end":{"line":36,"column":50}},"17":{"start":{"line":39,"column":6},"end":{"line":39,"column":43}},"18":{"start":{"line":40,"column":6},"end":{"line":40,"column":17}},"19":{"start":{"line":47,"column":19},"end":{"line":47,"column":46}},"20":{"start":{"line":49,"column":21},"end":{"line":49,"column":48}},"21":{"start":{"line":51,"column":6},"end":{"line":58,"column":7}},"22":{"start":{"line":52,"column":8},"end":{"line":57,"column":10}},"23":{"start":{"line":60,"column":6},"end":{"line":67,"column":7}},"24":{"start":{"line":61,"column":8},"end":{"line":66,"column":10}},"25":{"start":{"line":75,"column":2},"end":{"line":75,"column":16}},"26":{"start":{"line":78,"column":15},"end":{"line":78,"column":33}},"27":{"start":{"line":79,"column":0},"end":{"line":79,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":18,"column":9},"end":{"line":18,"column":31}},"loc":{"start":{"line":18,"column":37},"end":{"line":18,"column":95}},"line":18},"1":{"name":"(anonymous_1)","decl":{"start":{"line":20,"column":27},"end":{"line":20,"column":28}},"loc":{"start":{"line":20,"column":42},"end":{"line":76,"column":1}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":4},"end":{"line":25,"column":5}},"loc":{"start":{"line":25,"column":21},"end":{"line":41,"column":5}},"line":25},"3":{"name":"(anonymous_3)","decl":{"start":{"line":43,"column":13},"end":{"line":43,"column":14}},"loc":{"start":{"line":46,"column":10},"end":{"line":68,"column":5}},"line":46}},"branchMap":{"0":{"loc":{"start":{"line":18,"column":46},"end":{"line":18,"column":92}},"type":"cond-expr","locations":[{"start":{"line":18,"column":70},"end":{"line":18,"column":73}},{"start":{"line":18,"column":76},"end":{"line":18,"column":92}}],"line":18},"1":{"loc":{"start":{"line":18,"column":46},"end":{"line":18,"column":67}},"type":"binary-expr","locations":[{"start":{"line":18,"column":46},"end":{"line":18,"column":49}},{"start":{"line":18,"column":53},"end":{"line":18,"column":67}}],"line":18},"2":{"loc":{"start":{"line":26,"column":6},"end":{"line":29,"column":7}},"type":"if","locations":[{"start":{"line":26,"column":6},"end":{"line":29,"column":7}},{"start":{"line":26,"column":6},"end":{"line":29,"column":7}}],"line":26},"3":{"loc":{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},"type":"if","locations":[{"start":{"line":31,"column":6},"end":{"line":33,"column":7}},{"start":{"line":31,"column":6},"end":{"line":33,"column":7}}],"line":31},"4":{"loc":{"start":{"line":35,"column":6},"end":{"line":37,"column":7}},"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":37,"column":7}},{"start":{"line":35,"column":6},"end":{"line":37,"column":7}}],"line":35},"5":{"loc":{"start":{"line":51,"column":6},"end":{"line":58,"column":7}},"type":"if","locations":[{"start":{"line":51,"column":6},"end":{"line":58,"column":7}},{"start":{"line":51,"column":6},"end":{"line":58,"column":7}}],"line":51},"6":{"loc":{"start":{"line":60,"column":6},"end":{"line":67,"column":7}},"type":"if","locations":[{"start":{"line":60,"column":6},"end":{"line":67,"column":7}},{"start":{"line":60,"column":6},"end":{"line":67,"column":7}}],"line":60}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":4,"8":1,"9":1,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":4,"20":4,"21":4,"22":0,"23":4,"24":4,"25":1,"26":1,"27":1},"f":{"0":4,"1":1,"2":0,"3":4},"b":{"0":[4,0],"1":[4,4],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,4],"6":[4,0]},"inputSourceMap":{"version":3,"names":["createApolloServer","app","server","ApolloServer","typeDefs","schema","resolvers","formatError","err","AuthenticationError","console","log","message","UserInputError","Error","startsWith","context","req","connection","user","config","isAuth","secret","keys","models","playground","settings"],"sourceRoot":"/app/src/startup/","sources":["createApolloServer.js"],"sourcesContent":["import schema from \"../schema\";\nimport resolvers from \"../resolvers\";\nimport {\n  ApolloServer,\n  AuthenticationError,\n  UserInputError,\n} from \"apollo-server-express\";\nimport models from \"../models\";\nimport config from \"../config\";\n\nconst createApolloServer = function (app) {\n  const server = new ApolloServer({\n    typeDefs: schema,\n    resolvers,\n    formatError(err) {\n      if (err instanceof AuthenticationError) {\n        console.log(\"err\", err);\n        return err.message;\n      }\n      if (err instanceof UserInputError) {\n        return new Error(\"Input not in the correct order\");\n      }\n      if (err.message.startsWith(\"Database Error\")) {\n        return new Error(\"Internal server error\");\n      }\n      console.log(\"this is an error\", err);\n      return err;\n      //return new Error(\"There was an error\");\n    },\n    context: async ({ req, connection }) => {\n      const user = config.isAuth(req);\n      const secret = config.keys.secret;\n\n      if (connection) {\n        return { models, secret, req, user };\n      }\n\n      if (req) {\n        return {\n          user,\n          models,\n          secret,\n          req,\n        };\n      }\n    },\n    playground: {\n      settings: {\n        \"editor.theme\": \"light\",\n      },\n    },\n  });\n\n  return server;\n};\n\nexport default createApolloServer;\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AAKA;;AACA;;;;AAEA,MAAMA,kBAAkB,GAAG,UAAUC,GAAV,EAAe;EACxC,MAAMC,MAAM,GAAG,IAAIC,iCAAJ,CAAiB;IAC9BC,QAAQ,EAAEC,eADoB;IAE9BC,SAAS,EAATA,kBAF8B;;IAG9BC,WAAW,CAACC,GAAD,EAAM;MACf,IAAIA,GAAG,YAAYC,wCAAnB,EAAwC;QACtCC,OAAO,CAACC,GAAR,CAAY,KAAZ,EAAmBH,GAAnB;QACA,OAAOA,GAAG,CAACI,OAAX;MACD;;MACD,IAAIJ,GAAG,YAAYK,mCAAnB,EAAmC;QACjC,OAAO,IAAIC,KAAJ,CAAU,gCAAV,CAAP;MACD;;MACD,IAAIN,GAAG,CAACI,OAAJ,CAAYG,UAAZ,CAAuB,gBAAvB,CAAJ,EAA8C;QAC5C,OAAO,IAAID,KAAJ,CAAU,uBAAV,CAAP;MACD;;MACDJ,OAAO,CAACC,GAAR,CAAY,kBAAZ,EAAgCH,GAAhC;MACA,OAAOA,GAAP,CAZe,CAaf;IACD,CAjB6B;;IAkB9BQ,OAAO,EAAE,OAAO;MAAEC,GAAF;MAAOC;IAAP,CAAP,KAA+B;MACtC,MAAMC,IAAI,GAAGC,eAAA,CAAOC,MAAP,CAAcJ,GAAd,CAAb;;MACA,MAAMK,MAAM,GAAGF,eAAA,CAAOG,IAAP,CAAYD,MAA3B;;MAEA,IAAIJ,UAAJ,EAAgB;QACd,OAAO;UAAEM,MAAM,EAANA,eAAF;UAAUF,MAAV;UAAkBL,GAAlB;UAAuBE;QAAvB,CAAP;MACD;;MAED,IAAIF,GAAJ,EAAS;QACP,OAAO;UACLE,IADK;UAELK,MAAM,EAANA,eAFK;UAGLF,MAHK;UAILL;QAJK,CAAP;MAMD;IACF,CAlC6B;IAmC9BQ,UAAU,EAAE;MACVC,QAAQ,EAAE;QACR,gBAAgB;MADR;IADA;EAnCkB,CAAjB,CAAf;EA0CA,OAAOxB,MAAP;AACD,CA5CD;;eA8CeF,kB"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"02b16e5e6b575c0c319d180e518340d9b42cdbf6","contentHash":"667276af6a49b3c2178030bf98cadf3128193732f679f80952f16f105c3f4912"},"/app/src/schema/index.js":{"path":"/app/src/schema/index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":27},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":20},"end":{"line":10,"column":69}},"4":{"start":{"line":12,"column":17},"end":{"line":12,"column":63}},"5":{"start":{"line":14,"column":12},"end":{"line":14,"column":53}},"6":{"start":{"line":16,"column":16},"end":{"line":16,"column":61}},"7":{"start":{"line":18,"column":12},"end":{"line":18,"column":53}},"8":{"start":{"line":20,"column":20},"end":{"line":20,"column":69}},"9":{"start":{"line":22,"column":24},"end":{"line":22,"column":77}},"10":{"start":{"line":24,"column":25},"end":{"line":24,"column":79}},"11":{"start":{"line":26,"column":39},"end":{"line":26,"column":93}},"12":{"start":{"line":28,"column":19},"end":{"line":42,"column":1}},"13":{"start":{"line":43,"column":15},"end":{"line":43,"column":197}},"14":{"start":{"line":44,"column":0},"end":{"line":44,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":31}},"loc":{"start":{"line":26,"column":37},"end":{"line":26,"column":95}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":46},"end":{"line":26,"column":92}},"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":92}}],"line":26},"1":{"loc":{"start":{"line":26,"column":46},"end":{"line":26,"column":67}},"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":8,"12":1,"13":1,"14":1},"f":{"0":8},"b":{"0":[8,0],"1":[8,8]},"inputSourceMap":{"version":3,"names":["linkSchema","gql","ExamScheduleSchema","ExamTakenSchema","UserSchema","QuestionSchema","ExamSchema","DigitalAssetSchema","SpellingQuestionSchema","EssayExamQuestionSchema"],"sourceRoot":"/app/src/schema/","sources":["index.js"],"sourcesContent":["import { gql } from \"apollo-server-express\";\nimport ExamScheduleSchema from \"./examSchedule\";\nimport ExamTakenSchema from \"./examTaken\";\nimport UserSchema from \"./user\";\nimport QuestionSchema from \"./question\";\nimport ExamSchema from \"./exam\";\nimport DigitalAssetSchema from \"./digitalAsset\";\nimport SpellingQuestionSchema from \"./spellingQuestion\";\nimport EssayExamQuestionSchema from \"./essayExamQuestion\";\n\nconst linkSchema = gql`\n  scalar Date\n  #scalar Upload\n  type Query {\n    _: Boolean\n  }\n\n  type Mutation {\n    _: Boolean\n  }\n\n  type Subscription {\n    _: Boolean\n  }\n`;\n\nexport default [\n  linkSchema,\n  ExamScheduleSchema,\n  ExamTakenSchema,\n  UserSchema,\n  QuestionSchema,\n  ExamSchema,\n  DigitalAssetSchema,\n  SpellingQuestionSchema,\n  EssayExamQuestionSchema,\n];\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AAEA,MAAMA,UAAU,GAAG,IAAAC,wBAAA,CAAI;AACvB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAdA;eAgBe,CACbD,UADa,EAEbE,qBAFa,EAGbC,kBAHa,EAIbC,aAJa,EAKbC,iBALa,EAMbC,aANa,EAObC,qBAPa,EAQbC,yBARa,EASbC,0BATa,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"155111dc63558d8e18e90b55b7aef321b8977d3c","contentHash":"af0e6cb0804dbffc834b122be4ea69446ab58f51df4fe3f522af41ceaf185fe1"},"/app/src/schema/examSchedule.js":{"path":"/app/src/schema/examSchedule.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":27},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":15},"end":{"line":100,"column":1}},"4":{"start":{"line":102,"column":0},"end":{"line":102,"column":27}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["gql"],"sourceRoot":"/app/src/schema/","sources":["examSchedule.js"],"sourcesContent":["import { gql } from \"apollo-server-express\";\n\nexport default gql`\n  extend type Query {\n    getexamSchedule(examScheduleId: ID!): ExamSchedule\n    getExamScheduleByType(examTypeId: ID!): [ExamSchedule]\n    examScheduleDetails(scheduleId: ID!): ExamSchedule\n    getAllExamSchedule: [ExamSchedule!]\n    getActiveExamSchedule: [ExamSchedule]\n    activeExamination: [ExamSchedule!]!\n  }\n\n  extend type Mutation {\n    createMultipleExamSchedule(input: MultipleExamScheduleInput!): ExamSchedule\n    createSpellingExamSchedule(input: SpellingExamScheduleInput!): ExamSchedule\n    createEssayExamSchedule(input: EssayExamScheduleInput!): ExamSchedule\n    addEssayQuestionsToExam(\n      questionsArray: [EssayQuestionInputTypeForExamSchedule!]\n      scheduleId: ID!\n    ): Boolean\n    addQuestionsToExam(\n      questionsArray: [QuestionInput2!]\n      scheduleId: ID!\n    ): Boolean\n    addSpellingQuestionsToExam(\n      questionsArray: [SpellingQuestionInput2!]\n      scheduleId: ID!\n    ): Boolean\n    editExamSchedule(\n      examScheduleId: ID!\n      examSchedule: MultipleExamScheduleInput!\n    ): ExamSchedule\n    deleteExamSchedule(examScheduleId: ID!): Boolean\n    changeExamStatus(examId: ID!, status: Boolean!): ActiveExamDetails!\n  }\n\n  union ActiveExamDetails = ActiveExamSuccessful | Error\n  union QuestionTypes = SpellingQuestion | Question | EssayExamQuestion\n\n  input MultipleExamScheduleInput {\n    numberofQuestions: Int!\n    examinationName: String!\n    active: Boolean\n    examinationDuration: Int!\n    questions: [QuestionInput]\n    examTypeID: ID!\n    examTypeName: String!\n    questionType: String!\n  }\n\n  input SpellingExamScheduleInput {\n    numberofQuestions: Int!\n    examinationName: String!\n    active: Boolean\n    examinationDuration: Int!\n    questions: [SpellingQuestionInput]\n    examTypeID: ID!\n    examTypeName: String!\n    questionType: String!\n  }\n\n  input EssayExamScheduleInput {\n    numberofQuestions: Int!\n    examinationName: String!\n    active: Boolean\n    examinationDuration: Int!\n    questions: [EssayExamQuestionInput]\n    examTypeID: ID!\n    examTypeName: String!\n    questionType: String!\n  }\n\n  type Error {\n    message: String!\n    type: String!\n  }\n\n  type ExamSchedule {\n    id: ID!\n    numberofQuestions: Int!\n    examinationName: String!\n    active: Boolean\n    examinationDuration: Int!\n    questions: [QuestionTypes]\n    questionType: String!\n    examTypeID: ID!\n    examTypeName: String!\n  }\n\n  type ActiveExamSuccessful {\n    message: String!\n  }\n`;\n"],"mappings":";;;;;;;AAAA;;eAEe,IAAAA,wBAAA,CAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8ec403b25a778de8a06c444ab79a5b6660d6b379","contentHash":"139cecf48d0cc1058f3bfa927ca6050aeacf762f00fcd99308c168822594770d"},"/app/src/schema/examTaken.js":{"path":"/app/src/schema/examTaken.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":27},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":15},"end":{"line":108,"column":1}},"4":{"start":{"line":110,"column":0},"end":{"line":110,"column":27}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["gql"],"sourceRoot":"/app/src/schema/","sources":["examTaken.js"],"sourcesContent":["import { gql } from \"apollo-server-express\";\n\nexport default gql`\n  extend type Query {\n    getExamOfCanidate(examId: ID!): ExamTaken\n    getSpellingExamOfCanidate(examId: ID!): ExamTaken\n    getAllCanidateExam(username: String!): [ExamTaken!]\n    getExamResults(examScheduleId: ID!): [ExamTaken]\n    getRunningExamination: [ExamTaken]\n  }\n\n  extend type Mutation {\n    startExam(examDetails: ExamTakenInput!): ExamTakenDetails!\n    examEnded(submissionDetails: ExamFinishedInput!): Boolean!\n    spellingExamEnded(submissionDetails: SpellingExamFinishedInput!): Boolean!\n    essayExamEnded(submissionDetails: EssayExamFinishedInput!): Boolean!\n    cancelExamination(examId: ID!): Boolean!\n  }\n\n  union ExamTakenDetails = ExamTakenSuccess | Error\n  union ScriptTypes =\n      ScriptQuestion\n    | SpellingScriptQuestion\n    | EssayQuestionScript\n\n  type ExamTakenSuccess {\n    type: String\n    message: String!\n    examId: String!\n    questionType: String\n  }\n\n  input ExamTakenInput {\n    examDetails: ExamDetailsInput!\n    timeExamStarted: Date!\n    canidateDetails: CandidateDetailsInput!\n    examStarted: Boolean!\n    examFinished: Boolean!\n    questionType: String\n  }\n\n  input ExamFinishedInput {\n    examTakenId: ID!\n    examFinished: Boolean!\n    timeExamEnded: Date\n    score: Int\n    scripts: [ScriptQuestionInput]\n  }\n\n  input SpellingExamFinishedInput {\n    examTakenId: ID!\n    examFinished: Boolean!\n    timeExamEnded: Date\n    score: Int\n    scripts: [SpellingQuestionScriptInput]\n  }\n\n  input EssayExamFinishedInput {\n    examTakenId: ID!\n    examFinished: Boolean!\n    timeExamEnded: Date\n    score: Int\n    scripts: [EssayQuestionScriptInput]\n  }\n\n  type ExamTaken {\n    id: ID!\n    examDetails: ExamDetails!\n    timeExamStarted: Date!\n    canidateDetails: CandidateDetails!\n    examStarted: Boolean!\n    examFinished: Boolean!\n    timeExamEnded: Date\n    score: Int\n    scripts: [ScriptTypes]\n    questionType: String\n  }\n\n  input ExamDetailsInput {\n    examinationName: String!\n    examinationId: ID!\n    numberOfQuestions: Int!\n    duration: Int!\n  }\n\n  type ExamDetails {\n    examinationName: String!\n    examinationId: ID!\n    numberOfQuestions: String!\n    duration: Int!\n  }\n  type CandidateDetails {\n    username: String\n    name: String\n  }\n\n  input CandidateDetailsInput {\n    username: String\n    name: String\n  }\n`;\n"],"mappings":";;;;;;;AAAA;;eAEe,IAAAA,wBAAA,CAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8b23559a32df07073b6502a9aed7caa8c7b1532c","contentHash":"293bdda757a98c7bf2278a928c48f9bea40253095d30d3a182a118059741286b"},"/app/src/schema/user.js":{"path":"/app/src/schema/user.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":27},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":15},"end":{"line":46,"column":1}},"4":{"start":{"line":48,"column":0},"end":{"line":48,"column":27}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["gql"],"sourceRoot":"/app/src/schema/","sources":["user.js"],"sourcesContent":["import { gql } from \"apollo-server-express\";\n\nexport default gql`\n  extend type Query {\n    loginUser(username: String!, password: String!): UserDetailsResult\n    #users: [User!]\n    #user(id: ID!): User\n    usersByStatus(status: Boolean!, offset: Int!): UserQueryResult!\n  }\n\n  extend type Mutation {\n    changePassword(username: String!, newPassword: String!): Boolean!\n    changeUserStatus(id: ID!, active: Boolean!): Boolean!\n    createUser(\n      username: String!\n      password: String!\n      userType: String!\n      name: String!\n      active: Boolean!\n    ): UserDetailsResult!\n  }\n\n  union UserDetailsResult = User | Error\n\n  type User {\n    id: ID!\n    username: String!\n    password: String!\n    userType: String!\n    active: Boolean\n    name: String\n    token: String\n  }\n\n  type UserQueryResult {\n    users: [User]\n    totalUsersByStatus: Int\n  }\n`;\n"],"mappings":";;;;;;;AAAA;;eAEe,IAAAA,wBAAA,CAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"2f6511b4dab2d8fa3767d9f5c0fd035a647f9b52","contentHash":"49b6161d6b6ff7a89045f47e00a0c09884260d2833ea10b871a60fc38ff61ab1"},"/app/src/schema/question.js":{"path":"/app/src/schema/question.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":27},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":15},"end":{"line":101,"column":1}},"4":{"start":{"line":103,"column":0},"end":{"line":103,"column":27}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["gql"],"sourceRoot":"/app/src/schema/","sources":["question.js"],"sourcesContent":["import { gql } from \"apollo-server-express\";\n\nexport default gql`\n  extend type Query {\n    autoGenQuestions(examId: ID! number: Int!): [Question!]\n    getAnyQuestion: Question\n    getQuestions(number: String): [Question!]\n    getAllQuestions(offset: Int, examId: String): QuestionsTotal\n    getExamQuestions(\n      examId: String!\n      cursor: String\n      limit: Int\n    ): QuestionConnection\n  }\n\n  extend type Mutation {\n    addImageToQuestion(questionId: ID!, imageUrl: String!): Boolean!\n    saveBulkQuestion(input: [QuestionInput]): String! #number here is the total number of questions saved\n    editQuestion(input: QuestionInput!, questionId: ID!): Boolean!\n    deleteQuestion(questionId: ID!): Boolean!\n    submitQuestion(input: QuestionInput!): Boolean!\n  }\n\n  type Question {\n    id: ID!\n    question: String!\n    answers: [Answers!]\n    questionImageUrl: String\n    examinationType: String!\n    examId: ID\n    explanation: String\n    createdAt: Date\n  }\n  type Answers {\n    option: String\n    isCorrect: Boolean\n    selected: Boolean\n  }\n  input AnswersInput {\n    option: String\n    isCorrect: Boolean\n    selected: Boolean\n  }\n  input QuestionInput {\n    question: String!\n    answers: [AnswersInput!]\n    questionImageUrl: String\n    examinationType: String!\n    examId: String\n    explanation: String\n  }\n  input QuestionInput2 {\n    question: String!\n    answers: [AnswersInput!]\n    questionImageUrl: String\n    examinationType: String!\n    examId: String\n    explanation: String\n    id: ID!\n  }\n\n  \n  type QuestionConnection {\n    edges: [Question!]!\n    pageInfo: PageInfo!\n  }\n  type ScriptQuestion {\n    number: Int!\n    selectedOption: String\n    correctOption: String\n    explanation: String\n    question: String!\n  }\n  \n  input ScriptQuestionInput {\n    number: Int\n    selectedOption: String\n    correctOption: String\n    explanation: String\n    question: String\n  }\n  \n\n  type PageInfo {\n    hasNextPage: Boolean!\n    endCursor: String!\n    totalCount: String\n  }\n\n  type QuestionsTotal {\n    questions: [Question!]!\n    totalQuestion: String!\n  }\n`;\n"],"mappings":";;;;;;;AAAA;;eAEe,IAAAA,wBAAA,CAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"9179c8416b6e533cacf6de6ddd40da7476618ae9","contentHash":"85c39bee8f555daf099515a941ff29f8cdfcbefc156aab90ff961234d858eb12"},"/app/src/schema/exam.js":{"path":"/app/src/schema/exam.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":27},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":15},"end":{"line":35,"column":1}},"4":{"start":{"line":37,"column":0},"end":{"line":37,"column":27}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["gql"],"sourceRoot":"/app/src/schema/","sources":["exam.js"],"sourcesContent":["import { gql } from \"apollo-server-express\";\n\nexport default gql`\n  extend type Query {\n    getAllExam: [Exam!]\n    getExamByType(examType: String!): [Exam]\n    getExamination(examId: ID!): Exam!\n    dashboardMetrics: [DashBoardMetrics!]!\n  }\n\n  extend type Mutation {\n    createExam(examName: String!, examType: String!): Boolean!\n    editExam(examName: String!, examId: ID!): Boolean!\n    deleteExam(examId: ID!): Boolean!\n  }\n\n  type Exam {\n    id: ID!\n    examName: String!\n    examType: String!\n    examSchedules: [ ExamSchedule ]\n  }\n\n  type DashBoardMetrics {\n    type: String!\n    value: Int!\n  }\n`;\n"],"mappings":";;;;;;;AAAA;;eAEe,IAAAA,wBAAA,CAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"48d41eb05185edd75940aff8484e544a4d645908","contentHash":"933414d3e0ecb74a4384518fc26fcae17d0827050f10486eb7991f2421fa4592"},"/app/src/schema/digitalAsset.js":{"path":"/app/src/schema/digitalAsset.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":27},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":15},"end":{"line":32,"column":1}},"4":{"start":{"line":34,"column":0},"end":{"line":34,"column":27}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["gql"],"sourceRoot":"/app/src/schema/","sources":["digitalAsset.js"],"sourcesContent":["import { gql } from \"apollo-server-express\";\n\nexport default gql`\n  extend type Query {\n    getAssetsByType(type: String!): [DigitalAsset]\n  }\n\n  extend type Mutation {\n    saveAsset(\n      fileName: String!\n      assetType: String!\n      description: String!\n      fileType: String!\n    ): DigitalAsset\n    deleteAsset(fileId: ID!, fileName: String!): Boolean\n  }\n\n  type DigitalAsset {\n    fileName: String!\n    assetType: String!\n    description: String!\n    fileType: String!\n    id: ID!\n  }\n`;\n"],"mappings":";;;;;;;AAAA;;eAEe,IAAAA,wBAAA,CAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b6238aeefe709707a3a4f0a1d5f6e80de3edf521","contentHash":"e9b7dd8fe59feccec3bce72add79ce7f642225dd4e335b6855b665b5a1647937"},"/app/src/schema/spellingQuestion.js":{"path":"/app/src/schema/spellingQuestion.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":27},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":15},"end":{"line":87,"column":1}},"4":{"start":{"line":89,"column":0},"end":{"line":89,"column":27}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["gql"],"sourceRoot":"/app/src/schema/","sources":["spellingQuestion.js"],"sourcesContent":["import { gql } from \"apollo-server-express\";\n\nexport default gql`\n  extend type Query {\n    autoGenSpellingQuestions(examId: ID!, number: Int!): [SpellingQuestion!]\n    getAnySpellingQuestion: SpellingQuestion\n    getSpellingQuestions(number: String): [SpellingQuestion!]\n    getAllSpellingQuestions(offset: Int, examId: String): SpellingQuestionsTotal\n    getExamSpellingQuestions(\n      examId: String!\n      cursor: String\n      limit: Int\n    ): SpellingQuestionConnection\n  }\n\n  extend type Mutation {\n    editSpellingQuestion(\n      input: SpellingQuestionInput!\n      questionId: ID!\n    ): Boolean!\n    deleteSpellingQuestion(questionId: ID!): Boolean!\n    submitSpellingQuestion(input: SpellingQuestionInput!): Boolean!\n    saveBulkSpellingQuestion(input: [SpellingQuestionInput]): String!\n  }\n\n  type SpellingQuestion {\n    id: ID!\n    word: String\n    correctWord: String\n    clue: String\n    examinationType: String!\n    examId: ID\n    createdAt: Date\n  }\n\n  input SpellingQuestionInput {\n    word: String!\n    correctWord: String!\n    clue: String\n    examinationType: String!\n    examId: ID\n    createdAt: Date\n  }\n\n  input SpellingQuestionInput2 {\n    word: String!\n    correctWord: String!\n    clue: String\n    examinationType: String!\n    examId: ID\n    createdAt: Date\n    id: ID\n  }\n\n  input SpellingQuestionScriptInput {\n    number: Int!\n    clue: String\n    word: String!\n    answeredWord: String!\n    correctWord: String!\n  }\n\n  type SpellingScriptQuestion {\n    number: Int!\n    clue: String\n    word: String!\n    answeredWord: String!\n    correctWord: String!\n  }\n\n  type SpellingQuestionConnection {\n    edges: [Question!]!\n    pageInfo: PageInfo!\n  }\n\n  type SpellingQuestionsTotal {\n    questions: [SpellingQuestion!]!\n    totalQuestion: String!\n  }\n`;\n"],"mappings":";;;;;;;AAAA;;eAEe,IAAAA,wBAAA,CAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"ceb9f42d39153abf055e4f112c7c63b1abfc6d3c","contentHash":"37f9c66bdb64f2d4e769ea489b44c2e3c3da6f543c5ec37527f791211af810fc"},"/app/src/schema/essayExamQuestion.js":{"path":"/app/src/schema/essayExamQuestion.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":27},"end":{"line":8,"column":59}},"3":{"start":{"line":10,"column":15},"end":{"line":99,"column":1}},"4":{"start":{"line":101,"column":0},"end":{"line":101,"column":27}}},"fnMap":{},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":1,"4":1},"f":{},"b":{},"inputSourceMap":{"version":3,"names":["gql"],"sourceRoot":"/app/src/schema/","sources":["essayExamQuestion.js"],"sourcesContent":["import { gql } from \"apollo-server-express\";\n\nexport default gql`\n  extend type Query {\n    autoGenEssayQuestions(examId: ID!, number: Int!): [EssayExamQuestion!]\n    getAnyEssayQuestion: EssayExamQuestion\n    getEssayQuestions(number: String): [EssayExamQuestion!]\n    getAllEssayQuestions(offset: Int, examId: String): EssayQuestionsTotal\n  }\n\n  extend type Mutation {\n    saveEssayQuestion(input: EssayExamQuestionInput!): EssayExamQuestion\n    saveBulkEssayQuestion(input: [EssayExamQuestionInput]): String!\n    deleteEssayQuestion(questionId: ID!): Boolean\n    deleteMedia(questionId: ID!, mediaUrl: String!): Boolean\n    editEssayQuestion(input: EssayExamQuestionInput2!): Boolean\n    #addEssayQuestionsToExam\n  }\n\n  type EssayExamQuestion {\n    type: String!\n    question: String!\n    clue: String\n    possibleAnswers: [String]\n    mediaUrl: String\n    examId: ID\n    examinationType: String!\n    createdAt: Date\n    mediaType: String\n    id: ID!\n  }\n\n  input EssayExamQuestionInput {\n    type: String!\n    question: String!\n    clue: String\n    possibleAnswers: [String]\n    examId: ID!\n    examinationType: String\n    mediaType: String\n    mediaUrl: String\n    mediaFile: Upload\n  }\n\n  input EssayExamQuestionInput2 {\n    id: ID!\n    question: String!\n    clue: String\n    possibleAnswers: [String]\n    mediaType: String\n    mediaFile: Upload\n  }\n\n  type EssayQuestionsTotal {\n    questions: [EssayExamQuestion!]!\n    totalQuestion: String!\n  }\n\n  input EssayQuestionScriptInput {\n    number: Int!\n    question: String!\n    clue: String\n    possibleAnswers: [String]\n    mediaType: String\n    mediaUrl: String\n    isCorrect: Boolean\n    yourAnswer: String\n  }\n\n  input EssayQuestionInputTypeForExamSchedule {\n    type: String!\n    question: String!\n    clue: String\n    possibleAnswers: [String]\n    examId: ID!\n    examinationType: String\n    mediaType: String\n    mediaUrl: String\n    id: ID!\n  }\n\n  type EssayQuestionScript {\n    number: Int!\n    question: String!\n    yourAnswer: String\n    clue: String\n    possibleAnswers: [String]\n    mediaType: String\n    mediaUrl: String\n    isCorrect: Boolean\n  }\n`;\n"],"mappings":";;;;;;;AAAA;;eAEe,IAAAA,wBAAA,CAAI;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"f43c7b4cb0aeb25b867f4f20ef809e08edbede6b","contentHash":"185ba09a37a01fe80569de48d30d842aa323f127c57473115ff9dce9162883c1"},"/app/src/resolvers/index.js":{"path":"/app/src/resolvers/index.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":16},"end":{"line":8,"column":61}},"3":{"start":{"line":10,"column":22},"end":{"line":10,"column":49}},"4":{"start":{"line":12,"column":12},"end":{"line":12,"column":53}},"5":{"start":{"line":14,"column":17},"end":{"line":14,"column":63}},"6":{"start":{"line":16,"column":20},"end":{"line":16,"column":69}},"7":{"start":{"line":18,"column":12},"end":{"line":18,"column":53}},"8":{"start":{"line":20,"column":20},"end":{"line":20,"column":69}},"9":{"start":{"line":22,"column":24},"end":{"line":22,"column":77}},"10":{"start":{"line":24,"column":34},"end":{"line":24,"column":97}},"11":{"start":{"line":26,"column":39},"end":{"line":26,"column":93}},"12":{"start":{"line":28,"column":29},"end":{"line":30,"column":1}},"13":{"start":{"line":31,"column":15},"end":{"line":31,"column":216}},"14":{"start":{"line":32,"column":0},"end":{"line":32,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":26,"column":9},"end":{"line":26,"column":31}},"loc":{"start":{"line":26,"column":37},"end":{"line":26,"column":95}},"line":26}},"branchMap":{"0":{"loc":{"start":{"line":26,"column":46},"end":{"line":26,"column":92}},"type":"cond-expr","locations":[{"start":{"line":26,"column":70},"end":{"line":26,"column":73}},{"start":{"line":26,"column":76},"end":{"line":26,"column":92}}],"line":26},"1":{"loc":{"start":{"line":26,"column":46},"end":{"line":26,"column":67}},"type":"binary-expr","locations":[{"start":{"line":26,"column":46},"end":{"line":26,"column":49}},{"start":{"line":26,"column":53},"end":{"line":26,"column":67}}],"line":26}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":1,"6":1,"7":1,"8":1,"9":1,"10":1,"11":8,"12":1,"13":1,"14":1},"f":{"0":8},"b":{"0":[8,0],"1":[8,8]},"inputSourceMap":{"version":3,"names":["customScalarResolver","Date","GraphQLDateTime","QuestionResolvers","ExamResolvers","ExamTakenResolvers","ExamScheduleResolvers","UserResolvers","DigitalAssetResolver","SpellingQuestionResolver","EssayExamQuestionResolver"],"sourceRoot":"/app/src/resolvers/","sources":["index.js"],"sourcesContent":["import QuestionResolvers from \"./question\";\nimport { GraphQLDateTime } from \"graphql-iso-date\";\nimport ExamResolvers from \"./exam\";\nimport ExamTakenResolvers from \"./examTaken\";\nimport ExamScheduleResolvers from \"./examSchedule\";\nimport UserResolvers from \"./user\";\nimport DigitalAssetResolver from \"./digitalAsset\";\nimport SpellingQuestionResolver from \"./spellingQuestion\";\nimport EssayExamQuestionResolver from \"./essayExamQuestionResolvers\";\nconst customScalarResolver = {\n  Date: GraphQLDateTime,\n};\n\nexport default [\n  customScalarResolver,\n  QuestionResolvers,\n  ExamResolvers,\n  ExamTakenResolvers,\n  ExamScheduleResolvers,\n  UserResolvers,\n  DigitalAssetResolver,\n  SpellingQuestionResolver,\n  EssayExamQuestionResolver,\n];\n"],"mappings":";;;;;;;AAAA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;AACA;;;;AACA,MAAMA,oBAAoB,GAAG;EAC3BC,IAAI,EAAEC;AADqB,CAA7B;eAIe,CACbF,oBADa,EAEbG,iBAFa,EAGbC,aAHa,EAIbC,kBAJa,EAKbC,qBALa,EAMbC,aANa,EAObC,qBAPa,EAQbC,yBARa,EASbC,mCATa,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"c8458c942e96915d7da147811c297aaa949c2526","contentHash":"a36a339c5413209826aeaae73c8e20e657f3d5d5ea289a36126a26cf28796f61"},"/app/src/resolvers/question.js":{"path":"/app/src/resolvers/question.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":21},"end":{"line":8,"column":69}},"3":{"start":{"line":8,"column":31},"end":{"line":8,"column":69}},"4":{"start":{"line":10,"column":23},"end":{"line":13,"column":1}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":22}},"6":{"start":{"line":11,"column":15},"end":{"line":11,"column":22}},"7":{"start":{"line":12,"column":2},"end":{"line":12,"column":57}},"8":{"start":{"line":15,"column":15},"end":{"line":197,"column":1}},"9":{"start":{"line":23,"column":6},"end":{"line":23,"column":54}},"10":{"start":{"line":24,"column":24},"end":{"line":32,"column":9}},"11":{"start":{"line":33,"column":21},"end":{"line":33,"column":23}},"12":{"start":{"line":35,"column":6},"end":{"line":42,"column":7}},"13":{"start":{"line":36,"column":8},"end":{"line":41,"column":11}},"14":{"start":{"line":37,"column":28},"end":{"line":38,"column":11}},"15":{"start":{"line":39,"column":10},"end":{"line":39,"column":40}},"16":{"start":{"line":40,"column":10},"end":{"line":40,"column":37}},"17":{"start":{"line":44,"column":6},"end":{"line":44,"column":41}},"18":{"start":{"line":45,"column":6},"end":{"line":45,"column":22}},"19":{"start":{"line":50,"column":23},"end":{"line":50,"column":54}},"20":{"start":{"line":51,"column":6},"end":{"line":51,"column":22}},"21":{"start":{"line":58,"column":27},"end":{"line":58,"column":34}},"22":{"start":{"line":59,"column":24},"end":{"line":63,"column":9}},"23":{"start":{"line":64,"column":6},"end":{"line":64,"column":23}},"24":{"start":{"line":73,"column":20},"end":{"line":75,"column":8}},"25":{"start":{"line":76,"column":6},"end":{"line":78,"column":9}},"26":{"start":{"line":79,"column":6},"end":{"line":79,"column":29}},"27":{"start":{"line":80,"column":6},"end":{"line":80,"column":68}},"28":{"start":{"line":81,"column":24},"end":{"line":81,"column":42}},"29":{"start":{"line":82,"column":26},"end":{"line":82,"column":50}},"30":{"start":{"line":83,"column":20},"end":{"line":83,"column":68}},"31":{"start":{"line":84,"column":6},"end":{"line":90,"column":8}},"32":{"start":{"line":98,"column":20},"end":{"line":100,"column":8}},"33":{"start":{"line":101,"column":28},"end":{"line":103,"column":25}},"34":{"start":{"line":105,"column":6},"end":{"line":105,"column":25}},"35":{"start":{"line":106,"column":6},"end":{"line":106,"column":22}},"36":{"start":{"line":107,"column":24},"end":{"line":107,"column":42}},"37":{"start":{"line":108,"column":6},"end":{"line":111,"column":8}},"38":{"start":{"line":118,"column":6},"end":{"line":127,"column":7}},"39":{"start":{"line":121,"column":12},"end":{"line":121,"column":16}},"40":{"start":{"line":122,"column":29},"end":{"line":122,"column":68}},"41":{"start":{"line":123,"column":8},"end":{"line":123,"column":35}},"42":{"start":{"line":125,"column":8},"end":{"line":125,"column":27}},"43":{"start":{"line":126,"column":8},"end":{"line":126,"column":42}},"44":{"start":{"line":135,"column":6},"end":{"line":143,"column":7}},"45":{"start":{"line":136,"column":25},"end":{"line":136,"column":67}},"46":{"start":{"line":137,"column":8},"end":{"line":137,"column":37}},"47":{"start":{"line":138,"column":8},"end":{"line":138,"column":30}},"48":{"start":{"line":139,"column":8},"end":{"line":139,"column":20}},"49":{"start":{"line":141,"column":8},"end":{"line":141,"column":27}},"50":{"start":{"line":142,"column":8},"end":{"line":142,"column":21}},"51":{"start":{"line":151,"column":6},"end":{"line":174,"column":7}},"52":{"start":{"line":159,"column":12},"end":{"line":159,"column":17}},"53":{"start":{"line":160,"column":8},"end":{"line":169,"column":11}},"54":{"start":{"line":170,"column":8},"end":{"line":170,"column":20}},"55":{"start":{"line":172,"column":8},"end":{"line":172,"column":27}},"56":{"start":{"line":173,"column":8},"end":{"line":173,"column":21}},"57":{"start":{"line":179,"column":26},"end":{"line":179,"column":57}},"58":{"start":{"line":180,"column":6},"end":{"line":180,"column":31}},"59":{"start":{"line":181,"column":6},"end":{"line":181,"column":18}},"60":{"start":{"line":188,"column":6},"end":{"line":194,"column":7}},"61":{"start":{"line":189,"column":8},"end":{"line":189,"column":60}},"62":{"start":{"line":190,"column":8},"end":{"line":190,"column":20}},"63":{"start":{"line":192,"column":8},"end":{"line":192,"column":27}},"64":{"start":{"line":193,"column":8},"end":{"line":193,"column":21}},"65":{"start":{"line":198,"column":0},"end":{"line":198,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":21},"end":{"line":8,"column":22}},"loc":{"start":{"line":8,"column":31},"end":{"line":8,"column":69}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":23},"end":{"line":10,"column":24}},"loc":{"start":{"line":10,"column":33},"end":{"line":13,"column":1}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":22},"end":{"line":17,"column":23}},"loc":{"start":{"line":22,"column":10},"end":{"line":46,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":22},"end":{"line":36,"column":23}},"loc":{"start":{"line":36,"column":34},"end":{"line":41,"column":9}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":47,"column":20},"end":{"line":47,"column":21}},"loc":{"start":{"line":49,"column":10},"end":{"line":52,"column":5}},"line":49},"5":{"name":"(anonymous_5)","decl":{"start":{"line":53,"column":18},"end":{"line":53,"column":19}},"loc":{"start":{"line":57,"column":10},"end":{"line":65,"column":5}},"line":57},"6":{"name":"(anonymous_6)","decl":{"start":{"line":66,"column":22},"end":{"line":66,"column":23}},"loc":{"start":{"line":72,"column":10},"end":{"line":91,"column":5}},"line":72},"7":{"name":"(anonymous_7)","decl":{"start":{"line":92,"column":21},"end":{"line":92,"column":22}},"loc":{"start":{"line":97,"column":10},"end":{"line":112,"column":5}},"line":97},"8":{"name":"(anonymous_8)","decl":{"start":{"line":115,"column":22},"end":{"line":115,"column":23}},"loc":{"start":{"line":117,"column":10},"end":{"line":128,"column":5}},"line":117},"9":{"name":"(anonymous_9)","decl":{"start":{"line":129,"column":24},"end":{"line":129,"column":25}},"loc":{"start":{"line":134,"column":10},"end":{"line":144,"column":5}},"line":134},"10":{"name":"(anonymous_10)","decl":{"start":{"line":145,"column":18},"end":{"line":145,"column":19}},"loc":{"start":{"line":150,"column":10},"end":{"line":175,"column":5}},"line":150},"11":{"name":"(anonymous_11)","decl":{"start":{"line":176,"column":20},"end":{"line":176,"column":21}},"loc":{"start":{"line":178,"column":10},"end":{"line":182,"column":5}},"line":178},"12":{"name":"(anonymous_12)","decl":{"start":{"line":183,"column":20},"end":{"line":183,"column":21}},"loc":{"start":{"line":187,"column":10},"end":{"line":195,"column":5}},"line":187}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":22}},"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":22}},{"start":{"line":11,"column":2},"end":{"line":11,"column":22}}],"line":11},"1":{"loc":{"start":{"line":35,"column":6},"end":{"line":42,"column":7}},"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":42,"column":7}},{"start":{"line":35,"column":6},"end":{"line":42,"column":7}}],"line":35},"2":{"loc":{"start":{"line":69,"column":6},"end":{"line":69,"column":15}},"type":"default-arg","locations":[{"start":{"line":69,"column":14},"end":{"line":69,"column":15}}],"line":69},"3":{"loc":{"start":{"line":80,"column":6},"end":{"line":80,"column":67}},"type":"binary-expr","locations":[{"start":{"line":80,"column":6},"end":{"line":80,"column":12}},{"start":{"line":80,"column":16},"end":{"line":80,"column":67}}],"line":80},"4":{"loc":{"start":{"line":83,"column":20},"end":{"line":83,"column":68}},"type":"cond-expr","locations":[{"start":{"line":83,"column":34},"end":{"line":83,"column":56}},{"start":{"line":83,"column":59},"end":{"line":83,"column":68}}],"line":83},"5":{"loc":{"start":{"line":88,"column":21},"end":{"line":88,"column":99}},"type":"binary-expr","locations":[{"start":{"line":88,"column":21},"end":{"line":88,"column":37}},{"start":{"line":88,"column":41},"end":{"line":88,"column":99}}],"line":88}},"s":{"0":1,"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0},"b":{"0":[0,0],"1":[0,0],"2":[0],"3":[0,0],"4":[0,0],"5":[0,0]},"inputSourceMap":{"version":3,"names":["toCursorHash","string","Buffer","from","toString","fromCursorHash","Query","autoGenQuestions","_","examId","number","models","console","log","questions","Question","aggregate","$match","$sample","size","mapArray","length","map","question","questionMap","id","_id","push","getAnyQuestion","parent","findOne","getQuestions","numberToReturn","getExamQuestions","cursor","limit","query","find","sort","createdAt","where","lt","exec","hasNextPage","edges","slice","pageInfo","endCursor","getAllQuestions","offset","totalQuestion","countDocuments","skip","Mutation","saveBulkQuestion","args","input","uploadResult","insertMany","error","Error","addImageToQuestion","questionId","imageUrl","findById","save","editQuestion","answers","questionImageUrl","examinationType","explanation","updateOne","submitQuestion","newQuestion","deleteQuestion","findByIdAndRemove"],"sourceRoot":"/app/src/resolvers/","sources":["question.js"],"sourcesContent":["const toCursorHash = (string) => Buffer.from(string).toString(\"base64\");\n\nconst fromCursorHash = (string) => {\n  if (!string) return;\n\n  return Buffer.from(string, \"base64\").toString(\"ascii\");\n};\nexport default {\n  Query: {\n    autoGenQuestions: async (_, { examId, number }, { models }) => {\n      console.log(\"examId || number\", examId, number);\n      const questions = await models.Question.aggregate([\n        { $match: { examId: examId } },\n        { $sample: { size: number } },\n      ]);\n      \n      let mapArray = [];\n      if (questions.length > 0) {\n        questions.map((question) => {\n          let questionMap = { ...question };\n          questionMap.id = question._id;\n          mapArray.push( questionMap );\n          \n        });\n      }\n      console.log(\"questions\", mapArray);\n      return mapArray;\n    },\n    getAnyQuestion: async (parent, {}, { models }) => {\n      const question = await models.Question.findOne();\n      return question;\n    },\n\n    getQuestions: async (parent, { number }, { models }) => {\n      let numberToReturn = +number;\n      const questions = await models.Question.aggregate([\n        { $sample: { size: numberToReturn } },\n      ]);\n      return questions;\n    },\n\n    getExamQuestions: async (\n      parent,\n      { cursor, examId, limit = 3 },\n      { models }\n    ) => {\n      const query = models.Question.find({ examId: examId });\n      query.sort({ createdAt: -1 });\n      query.limit(limit + 2);\n      cursor && query.where(\"createdAt\").lt(fromCursorHash(cursor));\n      const questions = await query.exec();\n      const hasNextPage = questions.length > limit;\n      const edges = hasNextPage ? questions.slice(0, -1) : questions;\n      return {\n        edges,\n        pageInfo: {\n          hasNextPage,\n          endCursor:\n            edges.length > 0 &&\n            toCursorHash(edges[edges.length - 1].createdAt.toString()),\n        },\n      };\n    },\n    getAllQuestions: async (parent, { offset, examId }, { models }) => {\n      const query = models.Question.find({ examId: examId });\n      const totalQuestion = await models.Question.find({\n        examId,\n      }).countDocuments();\n      //query.sort({ createdAt: -1 });\n      query.skip(offset);\n      query.limit(20);\n      const questions = await query.exec();\n      return {\n        questions,\n        totalQuestion,\n      };\n    },\n  },\n  Mutation: {\n    saveBulkQuestion: async (_, args, { models }) => {\n      try {\n        const { input } = args;\n        const uploadResult = await models.Question.insertMany(input);\n        return uploadResult.length;\n      } catch (error) {\n        console.log(error);\n        throw new Error(`Database Error`);\n      }\n    },\n    addImageToQuestion: async (\n      parent,\n      { questionId, imageUrl },\n      { models }\n    ) => {\n      try {\n        const question = await models.Question.findById(questionId);\n        question.imageUrl = imageUrl;\n        await question.save();\n        return true;\n      } catch (error) {\n        console.log(error);\n        return false;\n      }\n    },\n    editQuestion: async (parent, { input, questionId }, { models }) => {\n      try {\n        const {\n          question,\n          answers,\n          questionImageUrl,\n          examinationType,\n          examId,\n          explanation,\n        } = input;\n        await models.Question.updateOne(\n          { _id: questionId },\n          {\n            question,\n            answers,\n            questionImageUrl,\n            examinationType,\n            examId,\n            explanation,\n          }\n        );\n        return true;\n      } catch (error) {\n        console.log(error);\n        return false;\n      }\n    },\n    submitQuestion: async (parent, args, { models }) => {\n      const newQuestion = new models.Question(args.input);\n      await newQuestion.save();\n      return true;\n    },\n    deleteQuestion: async (parent, { questionId }, { models }) => {\n      try {\n        await models.Question.findByIdAndRemove(questionId);\n        return true;\n      } catch (error) {\n        console.log(error);\n        return false;\n      }\n    },\n  },\n};\n"],"mappings":"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"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"3ae2145461cd741949fc43317a3fb9c032955ec3","contentHash":"4086943730ef7df4a0c57390f5191e993ddc049c748e7d802c6875b0655af6ca"},"/app/src/resolvers/exam.js":{"path":"/app/src/resolvers/exam.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":7,"column":15},"end":{"line":125,"column":1}},"3":{"start":{"line":12,"column":20},"end":{"line":12,"column":70}},"4":{"start":{"line":13,"column":6},"end":{"line":13,"column":19}},"5":{"start":{"line":20,"column":20},"end":{"line":22,"column":8}},"6":{"start":{"line":23,"column":6},"end":{"line":23,"column":19}},"7":{"start":{"line":30,"column":10},"end":{"line":30,"column":14}},"8":{"start":{"line":31,"column":22},"end":{"line":33,"column":8}},"9":{"start":{"line":34,"column":6},"end":{"line":34,"column":21}},"10":{"start":{"line":43,"column":51},"end":{"line":45,"column":91}},"11":{"start":{"line":46,"column":27},"end":{"line":49,"column":7}},"12":{"start":{"line":50,"column":30},"end":{"line":53,"column":7}},"13":{"start":{"line":54,"column":23},"end":{"line":57,"column":7}},"14":{"start":{"line":58,"column":24},"end":{"line":58,"column":71}},"15":{"start":{"line":59,"column":6},"end":{"line":59,"column":25}},"16":{"start":{"line":69,"column":22},"end":{"line":72,"column":8}},"17":{"start":{"line":74,"column":6},"end":{"line":80,"column":7}},"18":{"start":{"line":75,"column":8},"end":{"line":75,"column":29}},"19":{"start":{"line":76,"column":8},"end":{"line":76,"column":20}},"20":{"start":{"line":78,"column":8},"end":{"line":78,"column":27}},"21":{"start":{"line":79,"column":8},"end":{"line":79,"column":21}},"22":{"start":{"line":87,"column":6},"end":{"line":92,"column":7}},"23":{"start":{"line":88,"column":8},"end":{"line":88,"column":51}},"24":{"start":{"line":89,"column":8},"end":{"line":89,"column":20}},"25":{"start":{"line":91,"column":8},"end":{"line":91,"column":21}},"26":{"start":{"line":100,"column":6},"end":{"line":110,"column":7}},"27":{"start":{"line":101,"column":23},"end":{"line":103,"column":9}},"28":{"start":{"line":104,"column":8},"end":{"line":106,"column":19}},"29":{"start":{"line":107,"column":8},"end":{"line":107,"column":20}},"30":{"start":{"line":109,"column":8},"end":{"line":109,"column":27}},"31":{"start":{"line":117,"column":6},"end":{"line":122,"column":24}},"32":{"start":{"line":118,"column":26},"end":{"line":120,"column":10}},"33":{"start":{"line":121,"column":8},"end":{"line":121,"column":25}},"34":{"start":{"line":126,"column":0},"end":{"line":126,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":16},"end":{"line":9,"column":17}},"loc":{"start":{"line":11,"column":10},"end":{"line":14,"column":5}},"line":11},"1":{"name":"(anonymous_1)","decl":{"start":{"line":15,"column":19},"end":{"line":15,"column":20}},"loc":{"start":{"line":19,"column":10},"end":{"line":24,"column":5}},"line":19},"2":{"name":"(anonymous_2)","decl":{"start":{"line":25,"column":20},"end":{"line":25,"column":21}},"loc":{"start":{"line":27,"column":10},"end":{"line":35,"column":5}},"line":27},"3":{"name":"(anonymous_3)","decl":{"start":{"line":36,"column":22},"end":{"line":36,"column":23}},"loc":{"start":{"line":38,"column":10},"end":{"line":60,"column":5}},"line":38},"4":{"name":"(anonymous_4)","decl":{"start":{"line":63,"column":16},"end":{"line":63,"column":17}},"loc":{"start":{"line":68,"column":10},"end":{"line":81,"column":5}},"line":68},"5":{"name":"(anonymous_5)","decl":{"start":{"line":82,"column":16},"end":{"line":82,"column":17}},"loc":{"start":{"line":86,"column":10},"end":{"line":93,"column":5}},"line":86},"6":{"name":"(anonymous_6)","decl":{"start":{"line":94,"column":14},"end":{"line":94,"column":15}},"loc":{"start":{"line":99,"column":10},"end":{"line":111,"column":5}},"line":99},"7":{"name":"(anonymous_7)","decl":{"start":{"line":114,"column":19},"end":{"line":114,"column":20}},"loc":{"start":{"line":116,"column":10},"end":{"line":123,"column":5}},"line":116}},"branchMap":{},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0},"b":{},"inputSourceMap":{"version":3,"names":["Query","getAllExam","parent","args","models","exams","Exam","find","sort","getExamByType","examType","getExamination","examId","oneExam","findOne","_id","dashboardMetrics","activeExams","totalQuestions","users","Promise","all","ExamSchedule","active","countDocuments","Question","User","activeExamsObj","type","value","totalQuestionsObj","totalUsers","resultArray","Mutation","createExam","examName","newExam","save","error","console","log","deleteExam","findOneAndDelete","editExam","update","updateOne","examSchedules","exam","schedules","examTypeID","id"],"sourceRoot":"/app/src/resolvers/","sources":["exam.js"],"sourcesContent":["export default {\n  Query: {\n    getAllExam: async (parent, args, { models }) => {\n      const exams = await models.Exam.find({}).sort([[\"examName\", 1]]);\n      return exams;\n    },\n    getExamByType: async (parent, { examType }, { models }) => {\n      const exams = await models.Exam.find({ examType });\n      return exams;\n    },\n    getExamination: async (parent, args, { models }) => {\n      const { examId } = args;\n      const oneExam = await models.Exam.findOne({ _id: examId });\n      return oneExam;\n    },\n    dashboardMetrics: async (parent, args, { models }) => {\n      //active exams\n      //total scripts\n      //total questions\n      //total users\n\n      const [activeExams, totalQuestions, users] = await Promise.all([\n        models.ExamSchedule.find({ active: true }).countDocuments(),\n        models.Question.countDocuments(),\n        models.User.countDocuments(),\n      ]);\n\n      let activeExamsObj = {\n        type: \"active exams\",\n        value: +activeExams,\n      };\n      let totalQuestionsObj = {\n        type: \"total questions\",\n        value: +totalQuestions,\n      };\n      let totalUsers = {\n        type: \"total users\",\n        value: +users,\n      };\n      let resultArray = [activeExamsObj, totalQuestionsObj, totalUsers];\n      return resultArray;\n    },\n  },\n  Mutation: {\n    createExam: async (parent, { examName, examType }, { models }) => {\n      const newExam = new models.Exam({\n        examName,\n        examType,\n      });\n      try {\n        await newExam.save();\n        return true;\n      } catch (error) {\n        console.log(error);\n        return false;\n      }\n    },\n    deleteExam: async (parent, { examId }, { models }) => {\n      try {\n        await models.Exam.findOneAndDelete(examId);\n        return true;\n      } catch (error) {\n        return false;\n      }\n    },\n    editExam: async (parent, { examName, examId }, { models }) => {\n      try {\n        const update = { examName };\n        await models.Exam.updateOne({ _id: examId }, update);\n        return true;\n      } catch (error) {\n        console.log(error);\n      }\n    },\n  },\n  Exam: {\n    examSchedules: async (exam, {}, { models }) => {\n      try {\n        const schedules = await models.ExamSchedule.find({\n          examTypeID: exam.id,\n        });\n        return schedules;\n      } catch (error) {}\n    },\n  },\n};\n"],"mappings":";;;;;;eAAe;EACbA,KAAK,EAAE;IACLC,UAAU,EAAE,OAAOC,MAAP,EAAeC,IAAf,EAAqB;MAAEC;IAAF,CAArB,KAAoC;MAC9C,MAAMC,KAAK,GAAG,MAAMD,MAAM,CAACE,IAAP,CAAYC,IAAZ,CAAiB,EAAjB,EAAqBC,IAArB,CAA0B,CAAC,CAAC,UAAD,EAAa,CAAb,CAAD,CAA1B,CAApB;MACA,OAAOH,KAAP;IACD,CAJI;IAKLI,aAAa,EAAE,OAAOP,MAAP,EAAe;MAAEQ;IAAF,CAAf,EAA6B;MAAEN;IAAF,CAA7B,KAA4C;MACzD,MAAMC,KAAK,GAAG,MAAMD,MAAM,CAACE,IAAP,CAAYC,IAAZ,CAAiB;QAAEG;MAAF,CAAjB,CAApB;MACA,OAAOL,KAAP;IACD,CARI;IASLM,cAAc,EAAE,OAAOT,MAAP,EAAeC,IAAf,EAAqB;MAAEC;IAAF,CAArB,KAAoC;MAClD,MAAM;QAAEQ;MAAF,IAAaT,IAAnB;MACA,MAAMU,OAAO,GAAG,MAAMT,MAAM,CAACE,IAAP,CAAYQ,OAAZ,CAAoB;QAAEC,GAAG,EAAEH;MAAP,CAApB,CAAtB;MACA,OAAOC,OAAP;IACD,CAbI;IAcLG,gBAAgB,EAAE,OAAOd,MAAP,EAAeC,IAAf,EAAqB;MAAEC;IAAF,CAArB,KAAoC;MACpD;MACA;MACA;MACA;MAEA,MAAM,CAACa,WAAD,EAAcC,cAAd,EAA8BC,KAA9B,IAAuC,MAAMC,OAAO,CAACC,GAAR,CAAY,CAC7DjB,MAAM,CAACkB,YAAP,CAAoBf,IAApB,CAAyB;QAAEgB,MAAM,EAAE;MAAV,CAAzB,EAA2CC,cAA3C,EAD6D,EAE7DpB,MAAM,CAACqB,QAAP,CAAgBD,cAAhB,EAF6D,EAG7DpB,MAAM,CAACsB,IAAP,CAAYF,cAAZ,EAH6D,CAAZ,CAAnD;MAMA,IAAIG,cAAc,GAAG;QACnBC,IAAI,EAAE,cADa;QAEnBC,KAAK,EAAE,CAACZ;MAFW,CAArB;MAIA,IAAIa,iBAAiB,GAAG;QACtBF,IAAI,EAAE,iBADgB;QAEtBC,KAAK,EAAE,CAACX;MAFc,CAAxB;MAIA,IAAIa,UAAU,GAAG;QACfH,IAAI,EAAE,aADS;QAEfC,KAAK,EAAE,CAACV;MAFO,CAAjB;MAIA,IAAIa,WAAW,GAAG,CAACL,cAAD,EAAiBG,iBAAjB,EAAoCC,UAApC,CAAlB;MACA,OAAOC,WAAP;IACD;EAxCI,CADM;EA2CbC,QAAQ,EAAE;IACRC,UAAU,EAAE,OAAOhC,MAAP,EAAe;MAAEiC,QAAF;MAAYzB;IAAZ,CAAf,EAAuC;MAAEN;IAAF,CAAvC,KAAsD;MAChE,MAAMgC,OAAO,GAAG,IAAIhC,MAAM,CAACE,IAAX,CAAgB;QAC9B6B,QAD8B;QAE9BzB;MAF8B,CAAhB,CAAhB;;MAIA,IAAI;QACF,MAAM0B,OAAO,CAACC,IAAR,EAAN;QACA,OAAO,IAAP;MACD,CAHD,CAGE,OAAOC,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;QACA,OAAO,KAAP;MACD;IACF,CAbO;IAcRG,UAAU,EAAE,OAAOvC,MAAP,EAAe;MAAEU;IAAF,CAAf,EAA2B;MAAER;IAAF,CAA3B,KAA0C;MACpD,IAAI;QACF,MAAMA,MAAM,CAACE,IAAP,CAAYoC,gBAAZ,CAA6B9B,MAA7B,CAAN;QACA,OAAO,IAAP;MACD,CAHD,CAGE,OAAO0B,KAAP,EAAc;QACd,OAAO,KAAP;MACD;IACF,CArBO;IAsBRK,QAAQ,EAAE,OAAOzC,MAAP,EAAe;MAAEiC,QAAF;MAAYvB;IAAZ,CAAf,EAAqC;MAAER;IAAF,CAArC,KAAoD;MAC5D,IAAI;QACF,MAAMwC,MAAM,GAAG;UAAET;QAAF,CAAf;QACA,MAAM/B,MAAM,CAACE,IAAP,CAAYuC,SAAZ,CAAsB;UAAE9B,GAAG,EAAEH;QAAP,CAAtB,EAAuCgC,MAAvC,CAAN;QACA,OAAO,IAAP;MACD,CAJD,CAIE,OAAON,KAAP,EAAc;QACdC,OAAO,CAACC,GAAR,CAAYF,KAAZ;MACD;IACF;EA9BO,CA3CG;EA2EbhC,IAAI,EAAE;IACJwC,aAAa,EAAE,OAAOC,IAAP,EAAa,EAAb,EAAiB;MAAE3C;IAAF,CAAjB,KAAgC;MAC7C,IAAI;QACF,MAAM4C,SAAS,GAAG,MAAM5C,MAAM,CAACkB,YAAP,CAAoBf,IAApB,CAAyB;UAC/C0C,UAAU,EAAEF,IAAI,CAACG;QAD8B,CAAzB,CAAxB;QAGA,OAAOF,SAAP;MACD,CALD,CAKE,OAAOV,KAAP,EAAc,CAAE;IACnB;EARG;AA3EO,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"cd623fce12fbce3ecfa7b3a74d07e7c703b425a2","contentHash":"59a2740aa979e7cddfe636677706a9093afa8c5a412e94850274fbf09f205cfd"},"/app/src/resolvers/examTaken.js":{"path":"/app/src/resolvers/examTaken.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":13},"end":{"line":8,"column":30}},"3":{"start":{"line":10,"column":15},"end":{"line":173,"column":1}},"4":{"start":{"line":17,"column":22},"end":{"line":20,"column":8}},"5":{"start":{"line":21,"column":6},"end":{"line":21,"column":21}},"6":{"start":{"line":29,"column":21},"end":{"line":31,"column":8}},"7":{"start":{"line":32,"column":6},"end":{"line":32,"column":20}},"8":{"start":{"line":38,"column":26},"end":{"line":41,"column":8}},"9":{"start":{"line":42,"column":6},"end":{"line":42,"column":25}},"10":{"start":{"line":52,"column":6},"end":{"line":52,"column":59}},"11":{"start":{"line":53,"column":27},"end":{"line":53,"column":51}},"12":{"start":{"line":54,"column":30},"end":{"line":57,"column":8}},"13":{"start":{"line":59,"column":6},"end":{"line":64,"column":7}},"14":{"start":{"line":60,"column":8},"end":{"line":63,"column":10}},"15":{"start":{"line":66,"column":22},"end":{"line":66,"column":51}},"16":{"start":{"line":67,"column":18},"end":{"line":67,"column":38}},"17":{"start":{"line":68,"column":6},"end":{"line":73,"column":8}},"18":{"start":{"line":85,"column":10},"end":{"line":85,"column":27}},"19":{"start":{"line":86,"column":6},"end":{"line":93,"column":9}},"20":{"start":{"line":94,"column":6},"end":{"line":94,"column":18}},"21":{"start":{"line":106,"column":10},"end":{"line":106,"column":27}},"22":{"start":{"line":107,"column":6},"end":{"line":114,"column":9}},"23":{"start":{"line":115,"column":6},"end":{"line":115,"column":18}},"24":{"start":{"line":127,"column":10},"end":{"line":127,"column":27}},"25":{"start":{"line":128,"column":6},"end":{"line":135,"column":9}},"26":{"start":{"line":136,"column":6},"end":{"line":136,"column":18}},"27":{"start":{"line":143,"column":6},"end":{"line":145,"column":9}},"28":{"start":{"line":146,"column":6},"end":{"line":146,"column":18}},"29":{"start":{"line":151,"column":6},"end":{"line":153,"column":7}},"30":{"start":{"line":152,"column":8},"end":{"line":152,"column":34}},"31":{"start":{"line":155,"column":6},"end":{"line":157,"column":7}},"32":{"start":{"line":156,"column":8},"end":{"line":156,"column":23}},"33":{"start":{"line":163,"column":6},"end":{"line":169,"column":7}},"34":{"start":{"line":164,"column":8},"end":{"line":164,"column":32}},"35":{"start":{"line":165,"column":13},"end":{"line":169,"column":7}},"36":{"start":{"line":166,"column":8},"end":{"line":166,"column":40}},"37":{"start":{"line":168,"column":8},"end":{"line":168,"column":37}},"38":{"start":{"line":174,"column":0},"end":{"line":174,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":12,"column":20},"end":{"line":12,"column":21}},"loc":{"start":{"line":16,"column":10},"end":{"line":22,"column":5}},"line":16},"1":{"name":"(anonymous_1)","decl":{"start":{"line":23,"column":24},"end":{"line":23,"column":25}},"loc":{"start":{"line":23,"column":50},"end":{"line":23,"column":52}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":24,"column":23},"end":{"line":24,"column":24}},"loc":{"start":{"line":28,"column":10},"end":{"line":33,"column":5}},"line":28},"3":{"name":"(anonymous_3)","decl":{"start":{"line":34,"column":27},"end":{"line":34,"column":28}},"loc":{"start":{"line":36,"column":10},"end":{"line":43,"column":5}},"line":36},"4":{"name":"(anonymous_4)","decl":{"start":{"line":46,"column":15},"end":{"line":46,"column":16}},"loc":{"start":{"line":50,"column":10},"end":{"line":74,"column":5}},"line":50},"5":{"name":"(anonymous_5)","decl":{"start":{"line":75,"column":15},"end":{"line":75,"column":16}},"loc":{"start":{"line":79,"column":10},"end":{"line":95,"column":5}},"line":79},"6":{"name":"(anonymous_6)","decl":{"start":{"line":96,"column":23},"end":{"line":96,"column":24}},"loc":{"start":{"line":100,"column":10},"end":{"line":116,"column":5}},"line":100},"7":{"name":"(anonymous_7)","decl":{"start":{"line":117,"column":20},"end":{"line":117,"column":21}},"loc":{"start":{"line":121,"column":10},"end":{"line":137,"column":5}},"line":121},"8":{"name":"(anonymous_8)","decl":{"start":{"line":138,"column":23},"end":{"line":138,"column":24}},"loc":{"start":{"line":142,"column":10},"end":{"line":147,"column":5}},"line":142},"9":{"name":"(anonymous_9)","decl":{"start":{"line":150,"column":4},"end":{"line":150,"column":5}},"loc":{"start":{"line":150,"column":23},"end":{"line":158,"column":5}},"line":150},"10":{"name":"(anonymous_10)","decl":{"start":{"line":162,"column":4},"end":{"line":162,"column":5}},"loc":{"start":{"line":162,"column":23},"end":{"line":170,"column":5}},"line":162}},"branchMap":{"0":{"loc":{"start":{"line":59,"column":6},"end":{"line":64,"column":7}},"type":"if","locations":[{"start":{"line":59,"column":6},"end":{"line":64,"column":7}},{"start":{"line":59,"column":6},"end":{"line":64,"column":7}}],"line":59},"1":{"loc":{"start":{"line":151,"column":6},"end":{"line":153,"column":7}},"type":"if","locations":[{"start":{"line":151,"column":6},"end":{"line":153,"column":7}},{"start":{"line":151,"column":6},"end":{"line":153,"column":7}}],"line":151},"2":{"loc":{"start":{"line":155,"column":6},"end":{"line":157,"column":7}},"type":"if","locations":[{"start":{"line":155,"column":6},"end":{"line":157,"column":7}},{"start":{"line":155,"column":6},"end":{"line":157,"column":7}}],"line":155},"3":{"loc":{"start":{"line":163,"column":6},"end":{"line":169,"column":7}},"type":"if","locations":[{"start":{"line":163,"column":6},"end":{"line":169,"column":7}},{"start":{"line":163,"column":6},"end":{"line":169,"column":7}}],"line":163},"4":{"loc":{"start":{"line":165,"column":13},"end":{"line":169,"column":7}},"type":"if","locations":[{"start":{"line":165,"column":13},"end":{"line":169,"column":7}},{"start":{"line":165,"column":13},"end":{"line":169,"column":7}}],"line":165}},"s":{"0":1,"1":1,"2":1,"3":1,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0]},"inputSourceMap":{"version":3,"names":["lodash","require","Query","getExamResults","_","examScheduleId","models","results","ExamTaken","find","examFinished","getAllCanidateExam","parent","getExamOfCanidate","examId","result","findOne","_id","getRunningExamination","examRunning","examStarted","Mutation","startExam","examDetails","timeExamStarted","Date","questionType","findExamRunning","examinationId","length","message","type","newExam","doc","save","toString","examEnded","submissionDetails","examTakenId","score","scripts","updateOne","timeExamEnded","spellingExamEnded","essayExamEnded","cancelExamination","deleteOne","ExamTakenDetails","__resolveType","obj","ScriptTypes","correctOption","word"],"sourceRoot":"/app/src/resolvers/","sources":["examTaken.js"],"sourcesContent":["var lodash = require(\"lodash\");\n\nexport default {\n  Query: {\n    getExamResults: async (_, { examScheduleId }, { models }) => {\n      const results = await models.ExamTaken.find({\n        \"examDetails.examinationId\": examScheduleId,\n        examFinished: true,\n      });\n      return results;\n    },\n    getAllCanidateExam: async (parent, {}, {}) => {},\n    getExamOfCanidate: async (parent, { examId }, { models }) => {\n      const result = await models.ExamTaken.findOne({ _id: examId });\n      return result;\n    },\n    getRunningExamination: async (_, {}, { models }) => {\n      //check if the person has an examination running already\n      const examRunning = await models.ExamTaken.find({\n        examFinished: false,\n        examStarted: true,\n      });\n\n      return examRunning;\n    },\n  },\n  Mutation: {\n    startExam: async (_, { examDetails }, { models }) => {\n      //check if the person has an examination running already\n      examDetails.examDetails.timeExamStarted = new Date();\n      const questionType = examDetails.questionType;\n      const findExamRunning = await models.ExamTaken.find({\n        \"examDetails.examinationId\": examDetails.examDetails.examinationId,\n        examFinished: false,\n      });\n\n      if (findExamRunning.length > 0) {\n        return {\n          message: \"You already have an examination running\",\n          type: \"ExaminationRunning\",\n        };\n      }\n      const newExam = models.ExamTaken(examDetails);\n      const doc = await newExam.save();\n\n      return {\n        message: \"Exam started\",\n        type: \"ExamStarted\",\n        examId: doc._id.toString(),\n        questionType,\n      };\n    },\n    examEnded: async (_, { submissionDetails }, { models }) => {\n      //check if the person has an examination running already\n      const { examTakenId, score, scripts } = submissionDetails;\n\n      await models.ExamTaken.updateOne(\n        { _id: examTakenId },\n        {\n          examFinished: true,\n          timeExamEnded: new Date(),\n          score,\n          scripts,\n        }\n      );\n\n      return true;\n    },\n    spellingExamEnded: async (_, { submissionDetails }, { models }) => {\n      //check if the person has an examination running already\n      const { examTakenId, score, scripts } = submissionDetails;\n      await models.ExamTaken.updateOne(\n        { _id: examTakenId },\n        {\n          examFinished: true,\n          timeExamEnded: new Date(),\n          score,\n          scripts,\n        }\n      );\n\n      return true;\n    },\n    essayExamEnded: async (_, { submissionDetails }, { models }) => {\n      //check if the person has an examination running already\n      const { examTakenId, score, scripts } = submissionDetails;\n      await models.ExamTaken.updateOne(\n        { _id: examTakenId },\n        {\n          examFinished: true,\n          timeExamEnded: new Date(),\n          score,\n          scripts,\n        }\n      );\n\n      return true;\n    },\n\n    cancelExamination: async (_, { examId }, { models }) => {\n      await models.ExamTaken.deleteOne({_id: examId});\n      return true;\n    },\n  },\n  ExamTakenDetails: {\n    __resolveType(obj) {\n      if (obj.examId) {\n        return \"ExamTakenSuccess\";\n      }\n      if (obj.type) {\n        return \"Error\";\n      }\n    },\n  },\n  ScriptTypes: {\n    __resolveType(obj) {\n      if (obj.correctOption) {\n        return \"ScriptQuestion\";\n      } else if (obj.word) {\n        return \"SpellingScriptQuestion\";\n      } else {\n        return \"EssayQuestionScript\";\n      }\n    },\n  },\n};\n"],"mappings":"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"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b747311322cc34491a02f8b842f0aaac0a70344a","contentHash":"aa5ffbe8e354fd36318688f8ff34ebec03c13509cd609bc50c566dbe1839eb01"},"/app/src/resolvers/examSchedule.js":{"path":"/app/src/resolvers/examSchedule.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":7,"column":15},"end":{"line":284,"column":1}},"3":{"start":{"line":14,"column":27},"end":{"line":16,"column":8}},"4":{"start":{"line":17,"column":6},"end":{"line":17,"column":26}},"5":{"start":{"line":22,"column":29},"end":{"line":24,"column":8}},"6":{"start":{"line":25,"column":6},"end":{"line":25,"column":28}},"7":{"start":{"line":32,"column":28},"end":{"line":34,"column":8}},"8":{"start":{"line":35,"column":6},"end":{"line":35,"column":27}},"9":{"start":{"line":40,"column":28},"end":{"line":42,"column":8}},"10":{"start":{"line":43,"column":6},"end":{"line":43,"column":27}},"11":{"start":{"line":48,"column":20},"end":{"line":48,"column":48}},"12":{"start":{"line":49,"column":6},"end":{"line":51,"column":9}},"13":{"start":{"line":52,"column":31},"end":{"line":52,"column":49}},"14":{"start":{"line":53,"column":6},"end":{"line":53,"column":30}},"15":{"start":{"line":60,"column":23},"end":{"line":62,"column":8}},"16":{"start":{"line":63,"column":6},"end":{"line":63,"column":22}},"17":{"start":{"line":72,"column":6},"end":{"line":79,"column":7}},"18":{"start":{"line":73,"column":28},"end":{"line":73,"column":54}},"19":{"start":{"line":74,"column":8},"end":{"line":74,"column":33}},"20":{"start":{"line":75,"column":8},"end":{"line":75,"column":27}},"21":{"start":{"line":77,"column":8},"end":{"line":77,"column":60}},"22":{"start":{"line":78,"column":8},"end":{"line":78,"column":39}},"23":{"start":{"line":86,"column":6},"end":{"line":93,"column":7}},"24":{"start":{"line":87,"column":28},"end":{"line":87,"column":54}},"25":{"start":{"line":88,"column":8},"end":{"line":88,"column":33}},"26":{"start":{"line":89,"column":8},"end":{"line":89,"column":27}},"27":{"start":{"line":91,"column":8},"end":{"line":91,"column":60}},"28":{"start":{"line":92,"column":8},"end":{"line":92,"column":39}},"29":{"start":{"line":100,"column":6},"end":{"line":107,"column":7}},"30":{"start":{"line":101,"column":28},"end":{"line":101,"column":54}},"31":{"start":{"line":102,"column":8},"end":{"line":102,"column":33}},"32":{"start":{"line":103,"column":8},"end":{"line":103,"column":27}},"33":{"start":{"line":105,"column":8},"end":{"line":105,"column":60}},"34":{"start":{"line":106,"column":8},"end":{"line":106,"column":39}},"35":{"start":{"line":115,"column":6},"end":{"line":147,"column":7}},"36":{"start":{"line":116,"column":29},"end":{"line":116,"column":71}},"37":{"start":{"line":118,"column":8},"end":{"line":123,"column":9}},"38":{"start":{"line":119,"column":10},"end":{"line":122,"column":12}},"39":{"start":{"line":126,"column":32},"end":{"line":126,"column":77}},"40":{"start":{"line":127,"column":30},"end":{"line":127,"column":76}},"41":{"start":{"line":129,"column":8},"end":{"line":134,"column":9}},"42":{"start":{"line":130,"column":10},"end":{"line":133,"column":12}},"43":{"start":{"line":136,"column":8},"end":{"line":140,"column":11}},"44":{"start":{"line":141,"column":8},"end":{"line":143,"column":10}},"45":{"start":{"line":145,"column":8},"end":{"line":145,"column":27}},"46":{"start":{"line":146,"column":8},"end":{"line":146,"column":20}},"47":{"start":{"line":155,"column":6},"end":{"line":180,"column":7}},"48":{"start":{"line":164,"column":12},"end":{"line":164,"column":24}},"49":{"start":{"line":165,"column":8},"end":{"line":175,"column":11}},"50":{"start":{"line":176,"column":8},"end":{"line":176,"column":20}},"51":{"start":{"line":178,"column":8},"end":{"line":178,"column":27}},"52":{"start":{"line":179,"column":8},"end":{"line":179,"column":20}},"53":{"start":{"line":187,"column":6},"end":{"line":193,"column":7}},"54":{"start":{"line":188,"column":8},"end":{"line":188,"column":68}},"55":{"start":{"line":189,"column":8},"end":{"line":189,"column":20}},"56":{"start":{"line":191,"column":8},"end":{"line":191,"column":27}},"57":{"start":{"line":192,"column":8},"end":{"line":192,"column":20}},"58":{"start":{"line":201,"column":6},"end":{"line":213,"column":7}},"59":{"start":{"line":202,"column":8},"end":{"line":208,"column":11}},"60":{"start":{"line":209,"column":8},"end":{"line":209,"column":20}},"61":{"start":{"line":211,"column":8},"end":{"line":211,"column":27}},"62":{"start":{"line":212,"column":8},"end":{"line":212,"column":20}},"63":{"start":{"line":221,"column":6},"end":{"line":233,"column":7}},"64":{"start":{"line":222,"column":8},"end":{"line":228,"column":11}},"65":{"start":{"line":229,"column":8},"end":{"line":229,"column":20}},"66":{"start":{"line":231,"column":8},"end":{"line":231,"column":27}},"67":{"start":{"line":232,"column":8},"end":{"line":232,"column":20}},"68":{"start":{"line":241,"column":6},"end":{"line":253,"column":7}},"69":{"start":{"line":242,"column":8},"end":{"line":248,"column":11}},"70":{"start":{"line":249,"column":8},"end":{"line":249,"column":20}},"71":{"start":{"line":251,"column":8},"end":{"line":251,"column":27}},"72":{"start":{"line":252,"column":8},"end":{"line":252,"column":20}},"73":{"start":{"line":258,"column":6},"end":{"line":260,"column":7}},"74":{"start":{"line":259,"column":8},"end":{"line":259,"column":23}},"75":{"start":{"line":262,"column":6},"end":{"line":264,"column":7}},"76":{"start":{"line":263,"column":8},"end":{"line":263,"column":38}},"77":{"start":{"line":270,"column":6},"end":{"line":272,"column":7}},"78":{"start":{"line":271,"column":8},"end":{"line":271,"column":26}},"79":{"start":{"line":274,"column":6},"end":{"line":276,"column":7}},"80":{"start":{"line":275,"column":8},"end":{"line":275,"column":34}},"81":{"start":{"line":278,"column":6},"end":{"line":280,"column":7}},"82":{"start":{"line":279,"column":8},"end":{"line":279,"column":35}},"83":{"start":{"line":285,"column":0},"end":{"line":285,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":9,"column":21},"end":{"line":9,"column":22}},"loc":{"start":{"line":13,"column":10},"end":{"line":18,"column":5}},"line":13},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":23},"end":{"line":19,"column":24}},"loc":{"start":{"line":21,"column":10},"end":{"line":26,"column":5}},"line":21},"2":{"name":"(anonymous_2)","decl":{"start":{"line":27,"column":27},"end":{"line":27,"column":28}},"loc":{"start":{"line":31,"column":10},"end":{"line":36,"column":5}},"line":31},"3":{"name":"(anonymous_3)","decl":{"start":{"line":37,"column":27},"end":{"line":37,"column":28}},"loc":{"start":{"line":39,"column":10},"end":{"line":44,"column":5}},"line":39},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":24},"end":{"line":45,"column":25}},"loc":{"start":{"line":47,"column":10},"end":{"line":54,"column":5}},"line":47},"5":{"name":"(anonymous_5)","decl":{"start":{"line":55,"column":25},"end":{"line":55,"column":26}},"loc":{"start":{"line":59,"column":10},"end":{"line":64,"column":5}},"line":59},"6":{"name":"(anonymous_6)","decl":{"start":{"line":67,"column":32},"end":{"line":67,"column":33}},"loc":{"start":{"line":71,"column":10},"end":{"line":80,"column":5}},"line":71},"7":{"name":"(anonymous_7)","decl":{"start":{"line":81,"column":32},"end":{"line":81,"column":33}},"loc":{"start":{"line":85,"column":10},"end":{"line":94,"column":5}},"line":85},"8":{"name":"(anonymous_8)","decl":{"start":{"line":95,"column":29},"end":{"line":95,"column":30}},"loc":{"start":{"line":99,"column":10},"end":{"line":108,"column":5}},"line":99},"9":{"name":"(anonymous_9)","decl":{"start":{"line":109,"column":22},"end":{"line":109,"column":23}},"loc":{"start":{"line":114,"column":10},"end":{"line":148,"column":5}},"line":114},"10":{"name":"(anonymous_10)","decl":{"start":{"line":149,"column":22},"end":{"line":149,"column":23}},"loc":{"start":{"line":154,"column":10},"end":{"line":181,"column":5}},"line":154},"11":{"name":"(anonymous_11)","decl":{"start":{"line":182,"column":24},"end":{"line":182,"column":25}},"loc":{"start":{"line":186,"column":10},"end":{"line":194,"column":5}},"line":186},"12":{"name":"(anonymous_12)","decl":{"start":{"line":195,"column":24},"end":{"line":195,"column":25}},"loc":{"start":{"line":200,"column":10},"end":{"line":214,"column":5}},"line":200},"13":{"name":"(anonymous_13)","decl":{"start":{"line":215,"column":29},"end":{"line":215,"column":30}},"loc":{"start":{"line":220,"column":10},"end":{"line":234,"column":5}},"line":220},"14":{"name":"(anonymous_14)","decl":{"start":{"line":235,"column":32},"end":{"line":235,"column":33}},"loc":{"start":{"line":240,"column":10},"end":{"line":254,"column":5}},"line":240},"15":{"name":"(anonymous_15)","decl":{"start":{"line":257,"column":4},"end":{"line":257,"column":5}},"loc":{"start":{"line":257,"column":23},"end":{"line":265,"column":5}},"line":257},"16":{"name":"(anonymous_16)","decl":{"start":{"line":269,"column":4},"end":{"line":269,"column":5}},"loc":{"start":{"line":269,"column":23},"end":{"line":281,"column":5}},"line":269}},"branchMap":{"0":{"loc":{"start":{"line":118,"column":8},"end":{"line":123,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":123,"column":9}},{"start":{"line":118,"column":8},"end":{"line":123,"column":9}}],"line":118},"1":{"loc":{"start":{"line":126,"column":32},"end":{"line":126,"column":77}},"type":"binary-expr","locations":[{"start":{"line":126,"column":32},"end":{"line":126,"column":44}},{"start":{"line":126,"column":48},"end":{"line":126,"column":77}}],"line":126},"2":{"loc":{"start":{"line":127,"column":30},"end":{"line":127,"column":76}},"type":"binary-expr","locations":[{"start":{"line":127,"column":30},"end":{"line":127,"column":42}},{"start":{"line":127,"column":46},"end":{"line":127,"column":76}}],"line":127},"3":{"loc":{"start":{"line":129,"column":8},"end":{"line":134,"column":9}},"type":"if","locations":[{"start":{"line":129,"column":8},"end":{"line":134,"column":9}},{"start":{"line":129,"column":8},"end":{"line":134,"column":9}}],"line":129},"4":{"loc":{"start":{"line":258,"column":6},"end":{"line":260,"column":7}},"type":"if","locations":[{"start":{"line":258,"column":6},"end":{"line":260,"column":7}},{"start":{"line":258,"column":6},"end":{"line":260,"column":7}}],"line":258},"5":{"loc":{"start":{"line":262,"column":6},"end":{"line":264,"column":7}},"type":"if","locations":[{"start":{"line":262,"column":6},"end":{"line":264,"column":7}},{"start":{"line":262,"column":6},"end":{"line":264,"column":7}}],"line":262},"6":{"loc":{"start":{"line":270,"column":6},"end":{"line":272,"column":7}},"type":"if","locations":[{"start":{"line":270,"column":6},"end":{"line":272,"column":7}},{"start":{"line":270,"column":6},"end":{"line":272,"column":7}}],"line":270},"7":{"loc":{"start":{"line":274,"column":6},"end":{"line":276,"column":7}},"type":"if","locations":[{"start":{"line":274,"column":6},"end":{"line":276,"column":7}},{"start":{"line":274,"column":6},"end":{"line":276,"column":7}}],"line":274},"8":{"loc":{"start":{"line":278,"column":6},"end":{"line":280,"column":7}},"type":"if","locations":[{"start":{"line":278,"column":6},"end":{"line":280,"column":7}},{"start":{"line":278,"column":6},"end":{"line":280,"column":7}}],"line":278}},"s":{"0":1,"1":1,"2":1,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0},"b":{"0":[0,0],"1":[0,0],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0]},"inputSourceMap":{"version":3,"names":["Query","getexamSchedule","_","examScheduleId","models","examSchedule","ExamSchedule","findOne","_id","activeExamination","activeSchedule","find","active","getExamScheduleByType","examTypeId","examSchedules","examTypeID","getActiveExamSchedule","getAllExamSchedule","query","sort","examTypeName","allExamSchedules","exec","examScheduleDetails","scheduleId","schedule","Mutation","createSpellingExamSchedule","input","newSchedule","save","error","console","log","Error","message","createMultipleExamSchedule","createEssayExamSchedule","changeExamStatus","examId","status","findSchedule","findById","type","questionsNumber","questions","length","totalQuestion","numberofQuestions","updateOne","editExamSchedule","numberOfQuestion","examName","examDuration","examinationName","examinationDuration","deleteExamSchedule","findByIdAndRemove","addQuestionsToExam","questionsArray","$set","addEssayQuestionsToExam","addSpellingQuestionsToExam","ActiveExamDetails","__resolveType","obj","QuestionTypes","answers","word","possibleAnswers"],"sourceRoot":"/app/src/resolvers/","sources":["examSchedule.js"],"sourcesContent":["export default {\n  Query: {\n    getexamSchedule: async (_, { examScheduleId }, { models }) => {\n      const examSchedule = await models.ExamSchedule.findOne({\n        _id: examScheduleId,\n      });\n      return examSchedule;\n    },\n    activeExamination: async (_, {}, { models }) => {\n      const activeSchedule = await models.ExamSchedule.find({\n        active: true,\n      });\n      return activeSchedule;\n    },\n    getExamScheduleByType: async (_, { examTypeId }, { models }) => {\n      const examSchedules = await models.ExamSchedule.find({\n        examTypeID: examTypeId,\n      });\n      return examSchedules;\n    },\n    getActiveExamSchedule: async (_, {}, { models }) => {\n      const examSchedules = await models.ExamSchedule.find({ active: true });\n      return examSchedules;\n    },\n    getAllExamSchedule: async (_, {}, { models }) => {\n      const query = models.ExamSchedule.find({});\n      query.sort({examTypeName: -1 })\n      const allExamSchedules = await query.exec();\n      return allExamSchedules;\n    },\n    examScheduleDetails: async (_, { scheduleId }, { models }) => {\n      const schedule = await models.ExamSchedule.findOne({ _id: scheduleId });\n      return schedule;\n    },\n  },\n  Mutation: {\n    createSpellingExamSchedule: async (_, { input }, { models }) => {\n      try {\n        const newSchedule = models.ExamSchedule(input);\n        await newSchedule.save();\n        return newSchedule;\n      } catch (error) {\n        console.log(\"the errorfrom the console is:\", error);\n        throw new Error(error.message);\n      }\n    },\n    createMultipleExamSchedule: async (_, { input }, { models }) => {\n      try {\n        const newSchedule = models.ExamSchedule(input);\n        await newSchedule.save();\n        return newSchedule;\n      } catch (error) {\n        console.log(\"the errorfrom the console is:\", error);\n        throw new Error(error.message);\n      }\n    },\n    createEssayExamSchedule: async (_, { input }, { models }) => {\n      try {\n        const newSchedule = models.ExamSchedule(input);\n        await newSchedule.save();\n        return newSchedule;\n      } catch (error) {\n        console.log(\"the errorfrom the console is:\", error);\n        throw new Error(error.message);\n      }\n    },\n    changeExamStatus: async (_, { examId, status }, { models }) => {\n      try {\n        const findSchedule = await models.ExamSchedule.findById(examId);\n        if (!findSchedule) {\n          return {\n            message: \"could not find the the examination\",\n            type: \"CouldNotFindExamination\",\n          };\n        }\n        //check if the questions is complete\n        const questionsNumber = findSchedule && findSchedule.questions.length;\n        const totalQuestion = findSchedule && findSchedule.numberofQuestions;\n        if (+questionsNumber != +totalQuestion) {\n          return {\n            message: `Please complete the question in the examination. Total questions in exam: ${totalQuestion}. Entered questions: ${questionsNumber}`,\n            type: \"CouldNotFindExamination\",\n          };\n        }\n        await models.ExamSchedule.updateOne(\n          { _id: examId },\n          {\n            active: status,\n          }\n        );\n        return {\n          message: \"Examination was made active.\",\n        };\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    editExamSchedule: async (\n      _,\n      { examScheduleId, examSchedule },\n      { models }\n    ) => {\n      try {\n        const {\n          numberOfQuestion,\n          examName,\n          active,\n          examDuration,\n          questions,\n          examTypeId,\n          examTypeName,\n        } = examSchedule;\n        await models.ExamSchedule.updateOne(\n          { _id: examScheduleId },\n          {\n            numberofQuestions: numberOfQuestion,\n            examinationName: examName,\n            active,\n            examinationDuration: examDuration,\n            questions,\n            examTypeID: examTypeId,\n            examTypeName,\n          }\n        );\n        return true;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    deleteExamSchedule: async (_, { examScheduleId }, { models }) => {\n      try {\n        await models.ExamSchedule.findByIdAndRemove(examScheduleId);\n        return true;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    addQuestionsToExam: async (\n      _,\n      { questionsArray, scheduleId },\n      { models }\n    ) => {\n      try {\n        await models.ExamSchedule.updateOne(\n          { _id: scheduleId },\n          {\n            $set: {\n              questions: questionsArray,\n            },\n          }\n        );\n\n        return true;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    addEssayQuestionsToExam: async (\n      _,\n      { questionsArray, scheduleId },\n      { models }\n    ) => {\n      try {\n        await models.ExamSchedule.updateOne(\n          { _id: scheduleId },\n          {\n            $set: {\n              questions: questionsArray,\n            },\n          }\n        );\n\n        return true;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    addSpellingQuestionsToExam: async (\n      _,\n      { questionsArray, scheduleId },\n      { models }\n    ) => {\n      try {\n        await models.ExamSchedule.updateOne(\n          { _id: scheduleId },\n          {\n            $set: {\n              questions: questionsArray,\n            },\n          }\n        );\n\n        return true;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n  },\n  ActiveExamDetails: {\n    __resolveType(obj) {\n      if (obj.type) {\n        return \"Error\";\n      }\n      if (obj.message) {\n        return \"ActiveExamSuccessful\";\n      }\n    },\n  },\n  QuestionTypes: {\n    __resolveType(obj) {\n      if (obj.answers) {\n        return \"Question\";\n      }\n      if (obj.word) {\n        return \"SpellingQuestion\";\n      }\n      if (obj.possibleAnswers) {\n        return \"EssayExamQuestion\";\n      }\n    },\n  },\n};\n"],"mappings":"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"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"e8235506fcf3a163fd9c5d155575f25e5cd334ce","contentHash":"d367f4b22300acd00a9d25ec11085414f3c66b5071cc58c9ae44426c82cb1cd3"},"/app/src/resolvers/user.js":{"path":"/app/src/resolvers/user.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":14},"end":{"line":8,"column":55}},"3":{"start":{"line":10,"column":20},"end":{"line":10,"column":67}},"4":{"start":{"line":12,"column":20},"end":{"line":12,"column":44}},"5":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"6":{"start":{"line":16,"column":19},"end":{"line":16,"column":21}},"7":{"start":{"line":17,"column":15},"end":{"line":201,"column":1}},"8":{"start":{"line":25,"column":20},"end":{"line":27,"column":8}},"9":{"start":{"line":28,"column":33},"end":{"line":30,"column":25}},"10":{"start":{"line":32,"column":6},"end":{"line":32,"column":25}},"11":{"start":{"line":33,"column":6},"end":{"line":33,"column":22}},"12":{"start":{"line":34,"column":20},"end":{"line":34,"column":38}},"13":{"start":{"line":35,"column":6},"end":{"line":38,"column":8}},"14":{"start":{"line":48,"column":6},"end":{"line":95,"column":7}},"15":{"start":{"line":49,"column":28},"end":{"line":51,"column":10}},"16":{"start":{"line":53,"column":8},"end":{"line":58,"column":9}},"17":{"start":{"line":54,"column":10},"end":{"line":57,"column":12}},"18":{"start":{"line":60,"column":22},"end":{"line":60,"column":83}},"19":{"start":{"line":62,"column":8},"end":{"line":68,"column":9}},"20":{"start":{"line":64,"column":10},"end":{"line":67,"column":12}},"21":{"start":{"line":71,"column":8},"end":{"line":76,"column":9}},"22":{"start":{"line":72,"column":10},"end":{"line":75,"column":12}},"23":{"start":{"line":78,"column":22},"end":{"line":83,"column":18}},"24":{"start":{"line":85,"column":8},"end":{"line":91,"column":10}},"25":{"start":{"line":93,"column":8},"end":{"line":93,"column":27}},"26":{"start":{"line":94,"column":8},"end":{"line":94,"column":20}},"27":{"start":{"line":105,"column":6},"end":{"line":109,"column":9}},"28":{"start":{"line":110,"column":6},"end":{"line":110,"column":18}},"29":{"start":{"line":118,"column":19},"end":{"line":120,"column":8}},"30":{"start":{"line":122,"column":6},"end":{"line":124,"column":7}},"31":{"start":{"line":123,"column":8},"end":{"line":123,"column":50}},"32":{"start":{"line":127,"column":19},"end":{"line":127,"column":70}},"33":{"start":{"line":128,"column":6},"end":{"line":128,"column":27}},"34":{"start":{"line":129,"column":6},"end":{"line":129,"column":24}},"35":{"start":{"line":130,"column":6},"end":{"line":130,"column":18}},"36":{"start":{"line":142,"column":6},"end":{"line":186,"column":7}},"37":{"start":{"line":143,"column":8},"end":{"line":148,"column":9}},"38":{"start":{"line":144,"column":10},"end":{"line":147,"column":12}},"39":{"start":{"line":150,"column":8},"end":{"line":155,"column":9}},"40":{"start":{"line":151,"column":10},"end":{"line":154,"column":12}},"41":{"start":{"line":157,"column":28},"end":{"line":159,"column":10}},"42":{"start":{"line":161,"column":8},"end":{"line":166,"column":9}},"43":{"start":{"line":162,"column":10},"end":{"line":165,"column":12}},"44":{"start":{"line":169,"column":21},"end":{"line":169,"column":69}},"45":{"start":{"line":170,"column":24},"end":{"line":176,"column":10}},"46":{"start":{"line":177,"column":8},"end":{"line":177,"column":29}},"47":{"start":{"line":178,"column":8},"end":{"line":183,"column":10}},"48":{"start":{"line":185,"column":8},"end":{"line":185,"column":27}},"49":{"start":{"line":191,"column":6},"end":{"line":193,"column":7}},"50":{"start":{"line":192,"column":8},"end":{"line":192,"column":23}},"51":{"start":{"line":195,"column":6},"end":{"line":197,"column":7}},"52":{"start":{"line":196,"column":8},"end":{"line":196,"column":22}},"53":{"start":{"line":202,"column":0},"end":{"line":202,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":95}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":19,"column":19},"end":{"line":19,"column":20}},"loc":{"start":{"line":24,"column":10},"end":{"line":39,"column":5}},"line":24},"2":{"name":"(anonymous_2)","decl":{"start":{"line":40,"column":15},"end":{"line":40,"column":16}},"loc":{"start":{"line":47,"column":10},"end":{"line":96,"column":5}},"line":47},"3":{"name":"(anonymous_3)","decl":{"start":{"line":99,"column":22},"end":{"line":99,"column":23}},"loc":{"start":{"line":104,"column":10},"end":{"line":111,"column":5}},"line":104},"4":{"name":"(anonymous_4)","decl":{"start":{"line":112,"column":20},"end":{"line":112,"column":21}},"loc":{"start":{"line":117,"column":10},"end":{"line":131,"column":5}},"line":117},"5":{"name":"(anonymous_5)","decl":{"start":{"line":132,"column":16},"end":{"line":132,"column":17}},"loc":{"start":{"line":141,"column":10},"end":{"line":187,"column":5}},"line":141},"6":{"name":"(anonymous_6)","decl":{"start":{"line":190,"column":4},"end":{"line":190,"column":5}},"loc":{"start":{"line":190,"column":23},"end":{"line":198,"column":5}},"line":190}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":92}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14},"2":{"loc":{"start":{"line":53,"column":8},"end":{"line":58,"column":9}},"type":"if","locations":[{"start":{"line":53,"column":8},"end":{"line":58,"column":9}},{"start":{"line":53,"column":8},"end":{"line":58,"column":9}}],"line":53},"3":{"loc":{"start":{"line":62,"column":8},"end":{"line":68,"column":9}},"type":"if","locations":[{"start":{"line":62,"column":8},"end":{"line":68,"column":9}},{"start":{"line":62,"column":8},"end":{"line":68,"column":9}}],"line":62},"4":{"loc":{"start":{"line":71,"column":8},"end":{"line":76,"column":9}},"type":"if","locations":[{"start":{"line":71,"column":8},"end":{"line":76,"column":9}},{"start":{"line":71,"column":8},"end":{"line":76,"column":9}}],"line":71},"5":{"loc":{"start":{"line":122,"column":6},"end":{"line":124,"column":7}},"type":"if","locations":[{"start":{"line":122,"column":6},"end":{"line":124,"column":7}},{"start":{"line":122,"column":6},"end":{"line":124,"column":7}}],"line":122},"6":{"loc":{"start":{"line":143,"column":8},"end":{"line":148,"column":9}},"type":"if","locations":[{"start":{"line":143,"column":8},"end":{"line":148,"column":9}},{"start":{"line":143,"column":8},"end":{"line":148,"column":9}}],"line":143},"7":{"loc":{"start":{"line":150,"column":8},"end":{"line":155,"column":9}},"type":"if","locations":[{"start":{"line":150,"column":8},"end":{"line":155,"column":9}},{"start":{"line":150,"column":8},"end":{"line":155,"column":9}}],"line":150},"8":{"loc":{"start":{"line":161,"column":8},"end":{"line":166,"column":9}},"type":"if","locations":[{"start":{"line":161,"column":8},"end":{"line":166,"column":9}},{"start":{"line":161,"column":8},"end":{"line":166,"column":9}}],"line":161},"9":{"loc":{"start":{"line":191,"column":6},"end":{"line":193,"column":7}},"type":"if","locations":[{"start":{"line":191,"column":6},"end":{"line":193,"column":7}},{"start":{"line":191,"column":6},"end":{"line":193,"column":7}}],"line":191},"10":{"loc":{"start":{"line":195,"column":6},"end":{"line":197,"column":7}},"type":"if","locations":[{"start":{"line":195,"column":6},"end":{"line":197,"column":7}},{"start":{"line":195,"column":6},"end":{"line":197,"column":7}}],"line":195}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":2,"6":1,"7":1,"8":1,"9":1,"10":1,"11":1,"12":1,"13":1,"14":3,"15":3,"16":3,"17":0,"18":3,"19":3,"20":1,"21":2,"22":2,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":3,"50":3,"51":0,"52":0,"53":1},"f":{"0":2,"1":1,"2":3,"3":0,"4":0,"5":0,"6":3},"b":{"0":[0,2],"1":[2,2],"2":[0,3],"3":[1,2],"4":[2,0],"5":[0,0],"6":[0,0],"7":[0,0],"8":[0,0],"9":[3,0],"10":[0,0]},"inputSourceMap":{"version":3,"names":["saltRounds","Query","usersByStatus","parent","status","offset","models","query","User","find","active","totalUsersByStatus","countDocuments","skip","limit","users","exec","loginUser","username","password","secret","user","userAccount","findOne","toLowerCase","type","message","match","bcrypt","compare","token","jwt","sign","id","userType","name","error","console","log","Mutation","changeUserStatus","_","updateOne","_id","changePassword","newPassword","Error","hash","save","createUser","newUser","UserDetailsResult","__resolveType","obj"],"sourceRoot":"/app/src/resolvers/","sources":["user.js"],"sourcesContent":["import bcrypt from \"bcrypt\";\nimport jwt from \"jsonwebtoken\";\nimport { AuthenticationError } from \"apollo-server\";\n\nconst saltRounds = 10;\n\nexport default {\n  Query: {\n    usersByStatus: async (parent, { status, offset }, { models }) => {\n      const query = models.User.find({\n        active: status,\n      });\n      const totalUsersByStatus = await models.User.find({\n        active: status,\n      }).countDocuments();\n      //query.sort({ createdAt: -1 });\n      query.skip(offset);\n      query.limit(50);\n      const users = await query.exec();\n      return {\n        users,\n        totalUsersByStatus,\n      };\n    },\n    loginUser: async (\n      parent,\n      { username, password },\n      { models, secret, user }\n    ) => {\n      try {\n        const userAccount = await models.User.findOne({\n          username: username.toLowerCase(),\n        });\n        if (!userAccount) {\n          return {\n            type: \"UserNotFoundError\",\n            message: \"User details not found\",\n          };\n        }\n        const match = await bcrypt.compare(password, userAccount.password);\n        if (!match) {\n          //return error to userAccount to let them know the password is incorrect\n          return {\n            type: \"FailedCredentialsError\",\n            message: \"Incorrect credentials\",\n          };\n        }\n\n        //check if the user is active before allowing login\n        if (userAccount.active === false) {\n          return {\n            type: \"Account Not Active Error\",\n            message:\n              \"Login unsuccessful because your account is inactive. Please contact admin\",\n          };\n        }\n\n        const token = jwt.sign(\n          {\n            username: userAccount.username,\n            id: userAccount.id,\n            userType: userAccount.userType,\n            name: userAccount.name,\n          },\n          secret\n        );\n\n        return {\n          username: userAccount.username,\n          id: userAccount.id,\n          token: token,\n          name: userAccount.name,\n          userType: userAccount.userType,\n        };\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n  },\n\n  Mutation: {\n    changeUserStatus: async (_, { id, active }, { models }) => {\n      await models.User.updateOne({ _id: id }, { active: !active });\n      return true;\n    },\n    changePassword: async (_, { username, newPassword }, { models }) => {\n      const user = await models.User.findOne({ username });\n      if (!user) {\n        throw new Error(\"user details not found\");\n      }\n      //change the password here\n      const hash = await bcrypt.hash(newPassword, saltRounds);\n      user.password = hash;\n      await user.save();\n      return true;\n    },\n    createUser: async (\n      parent,\n      { username, password, userType, name, active },\n      { models, user }\n    ) => {\n      try {\n        if (!user) {\n          return {\n            type: \"NotLogginIn\",\n            message: \"you must be login to create account\",\n          };\n        }\n\n        if (user.userType !== \"super-admin\") {\n          return {\n            type: \"DontHavePriveledgeToCreateAccount\",\n            message: \"only admins can create account\",\n          };\n        }\n        const userAccount = await models.User.findOne({\n          username: username.toLowerCase(),\n        });\n        if (userAccount) {\n          return {\n            type: \"AccountAlreadyExist\",\n            message: \"Account alreay exist. Please use another username\",\n          };\n        }\n        //lets continue\n        const hash = await bcrypt.hash(password, saltRounds);\n\n        const newUser = new models.User({\n          username: username.toLowerCase(),\n          password: hash,\n          userType: userType,\n          name,\n          active,\n        });\n        await newUser.save();\n        return {\n          id: newUser._id,\n          name: newUser.name,\n          username: newUser.username,\n          userType: newUser.userType,\n        };\n      } catch (error) {\n        console.log(error);\n        //throw error;\n      }\n    },\n  },\n  UserDetailsResult: {\n    __resolveType(obj) {\n      if (obj.type) {\n        return \"Error\";\n      }\n      if (obj.name) {\n        return \"User\";\n      }\n    },\n  },\n};\n"],"mappings":"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"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"b7b32fd676ecbd528d332cc9de538d69197d56d8","contentHash":"3d484558d9bda5d4ee84b27e284b8383f383aed89d5cc8e70cec72d297d1130d"},"/app/src/resolvers/digitalAsset.js":{"path":"/app/src/resolvers/digitalAsset.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":10},"end":{"line":8,"column":47}},"3":{"start":{"line":10,"column":12},"end":{"line":10,"column":51}},"4":{"start":{"line":12,"column":39},"end":{"line":12,"column":93}},"5":{"start":{"line":14,"column":15},"end":{"line":60,"column":1}},"6":{"start":{"line":21,"column":21},"end":{"line":23,"column":8}},"7":{"start":{"line":24,"column":6},"end":{"line":24,"column":20}},"8":{"start":{"line":36,"column":30},"end":{"line":41,"column":8}},"9":{"start":{"line":42,"column":6},"end":{"line":42,"column":35}},"10":{"start":{"line":50,"column":23},"end":{"line":50,"column":74}},"11":{"start":{"line":52,"column":6},"end":{"line":52,"column":39}},"12":{"start":{"line":54,"column":6},"end":{"line":56,"column":9}},"13":{"start":{"line":57,"column":6},"end":{"line":57,"column":18}},"14":{"start":{"line":61,"column":0},"end":{"line":61,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":12,"column":9},"end":{"line":12,"column":31}},"loc":{"start":{"line":12,"column":37},"end":{"line":12,"column":95}},"line":12},"1":{"name":"(anonymous_1)","decl":{"start":{"line":16,"column":21},"end":{"line":16,"column":22}},"loc":{"start":{"line":20,"column":10},"end":{"line":25,"column":5}},"line":20},"2":{"name":"(anonymous_2)","decl":{"start":{"line":28,"column":15},"end":{"line":28,"column":16}},"loc":{"start":{"line":35,"column":10},"end":{"line":43,"column":5}},"line":35},"3":{"name":"(anonymous_3)","decl":{"start":{"line":44,"column":17},"end":{"line":44,"column":18}},"loc":{"start":{"line":49,"column":10},"end":{"line":58,"column":5}},"line":49}},"branchMap":{"0":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":92}},"type":"cond-expr","locations":[{"start":{"line":12,"column":70},"end":{"line":12,"column":73}},{"start":{"line":12,"column":76},"end":{"line":12,"column":92}}],"line":12},"1":{"loc":{"start":{"line":12,"column":46},"end":{"line":12,"column":67}},"type":"binary-expr","locations":[{"start":{"line":12,"column":46},"end":{"line":12,"column":49}},{"start":{"line":12,"column":53},"end":{"line":12,"column":67}}],"line":12}},"s":{"0":1,"1":1,"2":1,"3":1,"4":2,"5":1,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":1},"f":{"0":2,"1":0,"2":0,"3":0},"b":{"0":[0,2],"1":[2,2]},"inputSourceMap":{"version":3,"names":["Query","getAssetsByType","_","type","models","assets","DigitalAsset","find","Mutation","saveAsset","fileName","assetType","description","fileType","newDigitalAsset","save","deleteAsset","fileId","filePath","path","resolve","fs","unlinkSync","deleteOne","_id"],"sourceRoot":"/app/src/resolvers/","sources":["digitalAsset.js"],"sourcesContent":["import fs from \"fs\";\nimport path from \"path\";\n\nexport default {\n  Query: {\n    getAssetsByType: async (_, { type }, { models }) => {\n      const assets = await models.DigitalAsset.find({\n        type: type,\n      });\n      return assets;\n    },\n  },\n  Mutation: {\n    saveAsset: async (\n      _,\n      { fileName, assetType, description, fileType },\n      { models }\n    ) => {\n      const newDigitalAsset = new models.DigitalAsset({\n        fileName,\n        assetType,\n        description,\n        fileType,\n      });\n      await newDigitalAsset.save();\n    },\n    deleteAsset: async (_, { fileId, fileName }, { models }) => {\n      const filePath = path.resolve(\"./uploads\") + \"/\" + fileName;\n      fs.unlinkSync(filePath);\n      await models.DigitalAsset.deleteOne({ _id: fileId });\n      return true;\n    },\n  },\n};\n"],"mappings":";;;;;;;AAAA;;AACA;;;;eAEe;EACbA,KAAK,EAAE;IACLC,eAAe,EAAE,OAAOC,CAAP,EAAU;MAAEC;IAAF,CAAV,EAAoB;MAAEC;IAAF,CAApB,KAAmC;MAClD,MAAMC,MAAM,GAAG,MAAMD,MAAM,CAACE,YAAP,CAAoBC,IAApB,CAAyB;QAC5CJ,IAAI,EAAEA;MADsC,CAAzB,CAArB;MAGA,OAAOE,MAAP;IACD;EANI,CADM;EASbG,QAAQ,EAAE;IACRC,SAAS,EAAE,OACTP,CADS,EAET;MAAEQ,QAAF;MAAYC,SAAZ;MAAuBC,WAAvB;MAAoCC;IAApC,CAFS,EAGT;MAAET;IAAF,CAHS,KAIN;MACH,MAAMU,eAAe,GAAG,IAAIV,MAAM,CAACE,YAAX,CAAwB;QAC9CI,QAD8C;QAE9CC,SAF8C;QAG9CC,WAH8C;QAI9CC;MAJ8C,CAAxB,CAAxB;MAMA,MAAMC,eAAe,CAACC,IAAhB,EAAN;IACD,CAbO;IAcRC,WAAW,EAAE,OAAOd,CAAP,EAAU;MAAEe,MAAF;MAAUP;IAAV,CAAV,EAAgC;MAAEN;IAAF,CAAhC,KAA+C;MAC1D,MAAMc,QAAQ,GAAGC,aAAA,CAAKC,OAAL,CAAa,WAAb,IAA4B,GAA5B,GAAkCV,QAAnD;;MACAW,WAAA,CAAGC,UAAH,CAAcJ,QAAd;;MACA,MAAMd,MAAM,CAACE,YAAP,CAAoBiB,SAApB,CAA8B;QAAEC,GAAG,EAAEP;MAAP,CAA9B,CAAN;MACA,OAAO,IAAP;IACD;EAnBO;AATG,C"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"865f69ceccff7d7c640321117989660da56d00e0","contentHash":"813e09df1406377379127f2d21da46ace3e0dee97c940702d2e1e8d32ff285c3"},"/app/src/resolvers/spellingQuestion.js":{"path":"/app/src/resolvers/spellingQuestion.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":21},"end":{"line":8,"column":69}},"3":{"start":{"line":8,"column":31},"end":{"line":8,"column":69}},"4":{"start":{"line":10,"column":23},"end":{"line":13,"column":1}},"5":{"start":{"line":11,"column":2},"end":{"line":11,"column":22}},"6":{"start":{"line":11,"column":15},"end":{"line":11,"column":22}},"7":{"start":{"line":12,"column":2},"end":{"line":12,"column":57}},"8":{"start":{"line":15,"column":15},"end":{"line":158,"column":1}},"9":{"start":{"line":23,"column":24},"end":{"line":31,"column":9}},"10":{"start":{"line":32,"column":21},"end":{"line":32,"column":23}},"11":{"start":{"line":34,"column":6},"end":{"line":41,"column":7}},"12":{"start":{"line":35,"column":8},"end":{"line":40,"column":11}},"13":{"start":{"line":36,"column":28},"end":{"line":37,"column":11}},"14":{"start":{"line":38,"column":10},"end":{"line":38,"column":40}},"15":{"start":{"line":39,"column":10},"end":{"line":39,"column":37}},"16":{"start":{"line":43,"column":6},"end":{"line":43,"column":22}},"17":{"start":{"line":48,"column":23},"end":{"line":48,"column":62}},"18":{"start":{"line":49,"column":6},"end":{"line":49,"column":22}},"19":{"start":{"line":56,"column":27},"end":{"line":56,"column":34}},"20":{"start":{"line":57,"column":24},"end":{"line":61,"column":9}},"21":{"start":{"line":62,"column":6},"end":{"line":62,"column":23}},"22":{"start":{"line":77,"column":20},"end":{"line":79,"column":8}},"23":{"start":{"line":80,"column":28},"end":{"line":82,"column":25}},"24":{"start":{"line":84,"column":6},"end":{"line":84,"column":25}},"25":{"start":{"line":85,"column":6},"end":{"line":85,"column":22}},"26":{"start":{"line":86,"column":24},"end":{"line":86,"column":42}},"27":{"start":{"line":87,"column":6},"end":{"line":90,"column":8}},"28":{"start":{"line":100,"column":6},"end":{"line":121,"column":7}},"29":{"start":{"line":107,"column":12},"end":{"line":107,"column":17}},"30":{"start":{"line":108,"column":8},"end":{"line":116,"column":11}},"31":{"start":{"line":117,"column":8},"end":{"line":117,"column":20}},"32":{"start":{"line":119,"column":8},"end":{"line":119,"column":27}},"33":{"start":{"line":120,"column":8},"end":{"line":120,"column":21}},"34":{"start":{"line":126,"column":26},"end":{"line":126,"column":65}},"35":{"start":{"line":127,"column":6},"end":{"line":127,"column":31}},"36":{"start":{"line":128,"column":6},"end":{"line":128,"column":18}},"37":{"start":{"line":135,"column":6},"end":{"line":141,"column":7}},"38":{"start":{"line":136,"column":8},"end":{"line":136,"column":68}},"39":{"start":{"line":137,"column":8},"end":{"line":137,"column":20}},"40":{"start":{"line":139,"column":8},"end":{"line":139,"column":27}},"41":{"start":{"line":140,"column":8},"end":{"line":140,"column":21}},"42":{"start":{"line":146,"column":6},"end":{"line":155,"column":7}},"43":{"start":{"line":149,"column":12},"end":{"line":149,"column":16}},"44":{"start":{"line":150,"column":29},"end":{"line":150,"column":76}},"45":{"start":{"line":151,"column":8},"end":{"line":151,"column":35}},"46":{"start":{"line":153,"column":8},"end":{"line":153,"column":27}},"47":{"start":{"line":154,"column":8},"end":{"line":154,"column":42}},"48":{"start":{"line":159,"column":0},"end":{"line":159,"column":27}}},"fnMap":{"0":{"name":"(anonymous_0)","decl":{"start":{"line":8,"column":21},"end":{"line":8,"column":22}},"loc":{"start":{"line":8,"column":31},"end":{"line":8,"column":69}},"line":8},"1":{"name":"(anonymous_1)","decl":{"start":{"line":10,"column":23},"end":{"line":10,"column":24}},"loc":{"start":{"line":10,"column":33},"end":{"line":13,"column":1}},"line":10},"2":{"name":"(anonymous_2)","decl":{"start":{"line":17,"column":30},"end":{"line":17,"column":31}},"loc":{"start":{"line":22,"column":10},"end":{"line":44,"column":5}},"line":22},"3":{"name":"(anonymous_3)","decl":{"start":{"line":35,"column":22},"end":{"line":35,"column":23}},"loc":{"start":{"line":35,"column":34},"end":{"line":40,"column":9}},"line":35},"4":{"name":"(anonymous_4)","decl":{"start":{"line":45,"column":28},"end":{"line":45,"column":29}},"loc":{"start":{"line":47,"column":10},"end":{"line":50,"column":5}},"line":47},"5":{"name":"(anonymous_5)","decl":{"start":{"line":51,"column":26},"end":{"line":51,"column":27}},"loc":{"start":{"line":55,"column":10},"end":{"line":63,"column":5}},"line":55},"6":{"name":"(anonymous_6)","decl":{"start":{"line":64,"column":30},"end":{"line":64,"column":31}},"loc":{"start":{"line":70,"column":10},"end":{"line":70,"column":12}},"line":70},"7":{"name":"(anonymous_7)","decl":{"start":{"line":71,"column":29},"end":{"line":71,"column":30}},"loc":{"start":{"line":76,"column":10},"end":{"line":91,"column":5}},"line":76},"8":{"name":"(anonymous_8)","decl":{"start":{"line":94,"column":26},"end":{"line":94,"column":27}},"loc":{"start":{"line":99,"column":10},"end":{"line":122,"column":5}},"line":99},"9":{"name":"(anonymous_9)","decl":{"start":{"line":123,"column":28},"end":{"line":123,"column":29}},"loc":{"start":{"line":125,"column":10},"end":{"line":129,"column":5}},"line":125},"10":{"name":"(anonymous_10)","decl":{"start":{"line":130,"column":28},"end":{"line":130,"column":29}},"loc":{"start":{"line":134,"column":10},"end":{"line":142,"column":5}},"line":134},"11":{"name":"(anonymous_11)","decl":{"start":{"line":143,"column":30},"end":{"line":143,"column":31}},"loc":{"start":{"line":145,"column":10},"end":{"line":156,"column":5}},"line":145}},"branchMap":{"0":{"loc":{"start":{"line":11,"column":2},"end":{"line":11,"column":22}},"type":"if","locations":[{"start":{"line":11,"column":2},"end":{"line":11,"column":22}},{"start":{"line":11,"column":2},"end":{"line":11,"column":22}}],"line":11},"1":{"loc":{"start":{"line":34,"column":6},"end":{"line":41,"column":7}},"type":"if","locations":[{"start":{"line":34,"column":6},"end":{"line":41,"column":7}},{"start":{"line":34,"column":6},"end":{"line":41,"column":7}}],"line":34},"2":{"loc":{"start":{"line":67,"column":6},"end":{"line":67,"column":15}},"type":"default-arg","locations":[{"start":{"line":67,"column":14},"end":{"line":67,"column":15}}],"line":67}},"s":{"0":1,"1":1,"2":1,"3":0,"4":1,"5":0,"6":0,"7":0,"8":1,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":1},"f":{"0":0,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0,"11":0},"b":{"0":[0,0],"1":[0,0],"2":[0]},"inputSourceMap":{"version":3,"names":["toCursorHash","string","Buffer","from","toString","fromCursorHash","Query","autoGenSpellingQuestions","_","examId","number","models","questions","SpellingQuestion","aggregate","$match","$sample","size","mapArray","length","map","question","questionMap","id","_id","push","getAnySpellingQuestion","parent","findOne","getSpellingQuestions","numberToReturn","getExamSpellingQuestions","cursor","limit","getAllSpellingQuestions","offset","query","find","totalQuestion","countDocuments","skip","exec","Mutation","editSpellingQuestion","input","questionId","word","correctWord","clue","examinationType","updateOne","error","console","log","submitSpellingQuestion","args","newQuestion","save","deleteSpellingQuestion","findByIdAndRemove","saveBulkSpellingQuestion","uploadResult","insertMany","Error"],"sourceRoot":"/app/src/resolvers/","sources":["spellingQuestion.js"],"sourcesContent":["const toCursorHash = (string) => Buffer.from(string).toString(\"base64\");\n\nconst fromCursorHash = (string) => {\n  if (!string) return;\n\n  return Buffer.from(string, \"base64\").toString(\"ascii\");\n};\nexport default {\n  Query: {\n    autoGenSpellingQuestions: async (_, { examId, number }, { models }) => {\n      const questions = await models.SpellingQuestion.aggregate([\n        { $match: { examId: examId } },\n        { $sample: { size: number } },\n      ]);\n\n      let mapArray = [];\n      if (questions.length > 0) {\n        questions.map((question) => {\n          let questionMap = { ...question };\n          questionMap.id = question._id;\n          mapArray.push(questionMap);\n        });\n      }\n      return mapArray;\n    },\n    getAnySpellingQuestion: async (parent, {}, { models }) => {\n      const question = await models.SpellingQuestion.findOne();\n      return question;\n    },\n\n    getSpellingQuestions: async (parent, { number }, { models }) => {\n      let numberToReturn = +number;\n      const questions = await models.SpellingQuestion.aggregate([\n        { $sample: { size: numberToReturn } },\n      ]);\n      return questions;\n    },\n\n    getExamSpellingQuestions: async (\n      parent,\n      { cursor, examId, limit = 3 },\n      { models }\n    ) => {},\n    getAllSpellingQuestions: async (parent, { offset, examId }, { models }) => {\n      const query = models.SpellingQuestion.find({ examId: examId });\n      const totalQuestion = await models.SpellingQuestion.find({\n        examId,\n      }).countDocuments();\n      //query.sort({ createdAt: -1 });\n      query.skip(offset);\n      query.limit(20);\n      const questions = await query.exec();\n      return {\n        questions,\n        totalQuestion,\n      };\n    },\n  },\n  Mutation: {\n    editSpellingQuestion: async (parent, { input, questionId }, { models }) => {\n      try {\n        const {\n          word,\n          correctWord,\n          clue,\n          examinationType,\n          examId,\n        } = input;\n        await models.SpellingQuestion.updateOne(\n          { _id: questionId },\n          {\n            word,\n            correctWord,\n            clue,\n            examinationType,\n            examId\n          }\n        );\n        return true;\n      } catch (error) {\n        console.log(error);\n        return false;\n      }\n    },\n    submitSpellingQuestion: async (parent, args, { models }) => {\n      const newQuestion = new models.SpellingQuestion(args.input);\n      await newQuestion.save();\n      return true;\n    },\n    deleteSpellingQuestion: async (parent, { questionId }, { models }) => {\n      try {\n        await models.SpellingQuestion.findByIdAndRemove(questionId);\n        return true;\n      } catch (error) {\n        console.log(error);\n        return false;\n      }\n    },\n    saveBulkSpellingQuestion: async (_, args, { models }) => {\n      try {\n        const { input } = args;\n        const uploadResult = await models.SpellingQuestion.insertMany(input);\n        return uploadResult.length;\n      } catch (error) {\n        console.log(error);\n        throw new Error(`Database Error`);\n      }\n    },\n  },\n};\n"],"mappings":"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"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"8fd1ff9323815171b03df0428573b899deafd14c","contentHash":"4f98bb7c0afe87f7aaf3dd5b4c0e9e5939db4a7ee9bb91f2da9b25c9175c702b"},"/app/src/resolvers/essayExamQuestionResolvers.js":{"path":"/app/src/resolvers/essayExamQuestionResolvers.js","statementMap":{"0":{"start":{"line":3,"column":0},"end":{"line":5,"column":3}},"1":{"start":{"line":6,"column":0},"end":{"line":6,"column":25}},"2":{"start":{"line":8,"column":15},"end":{"line":8,"column":60}},"3":{"start":{"line":10,"column":12},"end":{"line":10,"column":51}},"4":{"start":{"line":12,"column":10},"end":{"line":12,"column":47}},"5":{"start":{"line":14,"column":39},"end":{"line":14,"column":93}},"6":{"start":{"line":16,"column":15},"end":{"line":283,"column":1}},"7":{"start":{"line":24,"column":24},"end":{"line":32,"column":9}},"8":{"start":{"line":33,"column":21},"end":{"line":33,"column":23}},"9":{"start":{"line":35,"column":6},"end":{"line":42,"column":7}},"10":{"start":{"line":36,"column":8},"end":{"line":41,"column":11}},"11":{"start":{"line":37,"column":28},"end":{"line":38,"column":11}},"12":{"start":{"line":39,"column":10},"end":{"line":39,"column":40}},"13":{"start":{"line":40,"column":10},"end":{"line":40,"column":37}},"14":{"start":{"line":44,"column":6},"end":{"line":44,"column":22}},"15":{"start":{"line":49,"column":23},"end":{"line":49,"column":63}},"16":{"start":{"line":50,"column":6},"end":{"line":50,"column":22}},"17":{"start":{"line":57,"column":27},"end":{"line":57,"column":34}},"18":{"start":{"line":58,"column":24},"end":{"line":62,"column":9}},"19":{"start":{"line":63,"column":6},"end":{"line":63,"column":23}},"20":{"start":{"line":71,"column":20},"end":{"line":73,"column":8}},"21":{"start":{"line":74,"column":28},"end":{"line":76,"column":25}},"22":{"start":{"line":78,"column":6},"end":{"line":78,"column":25}},"23":{"start":{"line":79,"column":6},"end":{"line":79,"column":22}},"24":{"start":{"line":80,"column":6},"end":{"line":80,"column":31}},"25":{"start":{"line":81,"column":24},"end":{"line":81,"column":42}},"26":{"start":{"line":82,"column":6},"end":{"line":85,"column":8}},"27":{"start":{"line":92,"column":6},"end":{"line":101,"column":7}},"28":{"start":{"line":95,"column":12},"end":{"line":95,"column":16}},"29":{"start":{"line":96,"column":29},"end":{"line":96,"column":77}},"30":{"start":{"line":97,"column":8},"end":{"line":97,"column":35}},"31":{"start":{"line":99,"column":8},"end":{"line":99,"column":27}},"32":{"start":{"line":100,"column":8},"end":{"line":100,"column":42}},"33":{"start":{"line":108,"column":6},"end":{"line":155,"column":7}},"34":{"start":{"line":116,"column":12},"end":{"line":116,"column":17}},"35":{"start":{"line":118,"column":8},"end":{"line":151,"column":9}},"36":{"start":{"line":122,"column":14},"end":{"line":122,"column":29}},"37":{"start":{"line":123,"column":25},"end":{"line":123,"column":43}},"38":{"start":{"line":124,"column":24},"end":{"line":127,"column":12}},"39":{"start":{"line":128,"column":25},"end":{"line":130,"column":11}},"40":{"start":{"line":131,"column":25},"end":{"line":137,"column":11}},"41":{"start":{"line":138,"column":10},"end":{"line":138,"column":74}},"42":{"start":{"line":139,"column":10},"end":{"line":139,"column":22}},"43":{"start":{"line":141,"column":25},"end":{"line":143,"column":11}},"44":{"start":{"line":144,"column":25},"end":{"line":148,"column":11}},"45":{"start":{"line":149,"column":10},"end":{"line":149,"column":74}},"46":{"start":{"line":150,"column":10},"end":{"line":150,"column":22}},"47":{"start":{"line":153,"column":8},"end":{"line":153,"column":27}},"48":{"start":{"line":154,"column":8},"end":{"line":154,"column":20}},"49":{"start":{"line":162,"column":6},"end":{"line":184,"column":7}},"50":{"start":{"line":163,"column":33},"end":{"line":165,"column":10}},"51":{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},"52":{"start":{"line":168,"column":10},"end":{"line":168,"column":76}},"53":{"start":{"line":172,"column":25},"end":{"line":172,"column":50}},"54":{"start":{"line":174,"column":25},"end":{"line":174,"column":76}},"55":{"start":{"line":176,"column":8},"end":{"line":176,"column":41}},"56":{"start":{"line":179,"column":8},"end":{"line":179,"column":69}},"57":{"start":{"line":180,"column":8},"end":{"line":180,"column":20}},"58":{"start":{"line":182,"column":8},"end":{"line":182,"column":27}},"59":{"start":{"line":183,"column":8},"end":{"line":183,"column":20}},"60":{"start":{"line":192,"column":6},"end":{"line":215,"column":7}},"61":{"start":{"line":193,"column":25},"end":{"line":195,"column":10}},"62":{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},"63":{"start":{"line":198,"column":10},"end":{"line":198,"column":57}},"64":{"start":{"line":202,"column":25},"end":{"line":202,"column":76}},"65":{"start":{"line":204,"column":8},"end":{"line":204,"column":41}},"66":{"start":{"line":208,"column":8},"end":{"line":208,"column":32}},"67":{"start":{"line":209,"column":8},"end":{"line":209,"column":31}},"68":{"start":{"line":210,"column":8},"end":{"line":210,"column":30}},"69":{"start":{"line":211,"column":8},"end":{"line":211,"column":20}},"70":{"start":{"line":213,"column":8},"end":{"line":213,"column":27}},"71":{"start":{"line":214,"column":8},"end":{"line":214,"column":20}},"72":{"start":{"line":231,"column":10},"end":{"line":231,"column":15}},"73":{"start":{"line":233,"column":6},"end":{"line":280,"column":7}},"74":{"start":{"line":235,"column":8},"end":{"line":262,"column":9}},"75":{"start":{"line":239,"column":14},"end":{"line":239,"column":29}},"76":{"start":{"line":240,"column":25},"end":{"line":240,"column":43}},"77":{"start":{"line":241,"column":24},"end":{"line":244,"column":12}},"78":{"start":{"line":246,"column":32},"end":{"line":256,"column":12}},"79":{"start":{"line":257,"column":10},"end":{"line":257,"column":37}},"80":{"start":{"line":258,"column":10},"end":{"line":258,"column":31}},"81":{"start":{"line":260,"column":10},"end":{"line":260,"column":29}},"82":{"start":{"line":261,"column":10},"end":{"line":261,"column":33}},"83":{"start":{"line":264,"column":8},"end":{"line":279,"column":9}},"84":{"start":{"line":265,"column":32},"end":{"line":273,"column":12}},"85":{"start":{"line":274,"column":10},"end":{"line":274,"column":37}},"86":{"start":{"line":275,"column":10},"end":{"line":275,"column":22}},"87":{"start":{"line":277,"column":10},"end":{"line":277,"column":29}},"88":{"start":{"line":278,"column":10},"end":{"line":278,"column":33}},"89":{"start":{"line":284,"column":0},"end":{"line":284,"column":27}}},"fnMap":{"0":{"name":"_interopRequireDefault","decl":{"start":{"line":14,"column":9},"end":{"line":14,"column":31}},"loc":{"start":{"line":14,"column":37},"end":{"line":14,"column":95}},"line":14},"1":{"name":"(anonymous_1)","decl":{"start":{"line":18,"column":27},"end":{"line":18,"column":28}},"loc":{"start":{"line":23,"column":10},"end":{"line":45,"column":5}},"line":23},"2":{"name":"(anonymous_2)","decl":{"start":{"line":36,"column":22},"end":{"line":36,"column":23}},"loc":{"start":{"line":36,"column":34},"end":{"line":41,"column":9}},"line":36},"3":{"name":"(anonymous_3)","decl":{"start":{"line":46,"column":25},"end":{"line":46,"column":26}},"loc":{"start":{"line":48,"column":10},"end":{"line":51,"column":5}},"line":48},"4":{"name":"(anonymous_4)","decl":{"start":{"line":52,"column":23},"end":{"line":52,"column":24}},"loc":{"start":{"line":56,"column":10},"end":{"line":64,"column":5}},"line":56},"5":{"name":"(anonymous_5)","decl":{"start":{"line":65,"column":26},"end":{"line":65,"column":27}},"loc":{"start":{"line":70,"column":10},"end":{"line":86,"column":5}},"line":70},"6":{"name":"(anonymous_6)","decl":{"start":{"line":89,"column":27},"end":{"line":89,"column":28}},"loc":{"start":{"line":91,"column":10},"end":{"line":102,"column":5}},"line":91},"7":{"name":"(anonymous_7)","decl":{"start":{"line":103,"column":23},"end":{"line":103,"column":24}},"loc":{"start":{"line":107,"column":10},"end":{"line":156,"column":5}},"line":107},"8":{"name":"(anonymous_8)","decl":{"start":{"line":157,"column":25},"end":{"line":157,"column":26}},"loc":{"start":{"line":161,"column":10},"end":{"line":185,"column":5}},"line":161},"9":{"name":"(anonymous_9)","decl":{"start":{"line":186,"column":17},"end":{"line":186,"column":18}},"loc":{"start":{"line":191,"column":10},"end":{"line":216,"column":5}},"line":191},"10":{"name":"(anonymous_10)","decl":{"start":{"line":217,"column":23},"end":{"line":217,"column":24}},"loc":{"start":{"line":221,"column":10},"end":{"line":281,"column":5}},"line":221}},"branchMap":{"0":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":92}},"type":"cond-expr","locations":[{"start":{"line":14,"column":70},"end":{"line":14,"column":73}},{"start":{"line":14,"column":76},"end":{"line":14,"column":92}}],"line":14},"1":{"loc":{"start":{"line":14,"column":46},"end":{"line":14,"column":67}},"type":"binary-expr","locations":[{"start":{"line":14,"column":46},"end":{"line":14,"column":49}},{"start":{"line":14,"column":53},"end":{"line":14,"column":67}}],"line":14},"2":{"loc":{"start":{"line":35,"column":6},"end":{"line":42,"column":7}},"type":"if","locations":[{"start":{"line":35,"column":6},"end":{"line":42,"column":7}},{"start":{"line":35,"column":6},"end":{"line":42,"column":7}}],"line":35},"3":{"loc":{"start":{"line":118,"column":8},"end":{"line":151,"column":9}},"type":"if","locations":[{"start":{"line":118,"column":8},"end":{"line":151,"column":9}},{"start":{"line":118,"column":8},"end":{"line":151,"column":9}}],"line":118},"4":{"loc":{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},"type":"if","locations":[{"start":{"line":167,"column":8},"end":{"line":169,"column":9}},{"start":{"line":167,"column":8},"end":{"line":169,"column":9}}],"line":167},"5":{"loc":{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},"type":"if","locations":[{"start":{"line":197,"column":8},"end":{"line":199,"column":9}},{"start":{"line":197,"column":8},"end":{"line":199,"column":9}}],"line":197},"6":{"loc":{"start":{"line":233,"column":6},"end":{"line":280,"column":7}},"type":"if","locations":[{"start":{"line":233,"column":6},"end":{"line":280,"column":7}},{"start":{"line":233,"column":6},"end":{"line":280,"column":7}}],"line":233}},"s":{"0":1,"1":1,"2":1,"3":1,"4":1,"5":3,"6":1,"7":0,"8":0,"9":0,"10":0,"11":0,"12":0,"13":0,"14":0,"15":0,"16":0,"17":0,"18":0,"19":0,"20":0,"21":0,"22":0,"23":0,"24":0,"25":0,"26":0,"27":0,"28":0,"29":0,"30":0,"31":0,"32":0,"33":0,"34":0,"35":0,"36":0,"37":0,"38":0,"39":0,"40":0,"41":0,"42":0,"43":0,"44":0,"45":0,"46":0,"47":0,"48":0,"49":0,"50":0,"51":0,"52":0,"53":0,"54":0,"55":0,"56":0,"57":0,"58":0,"59":0,"60":0,"61":0,"62":0,"63":0,"64":0,"65":0,"66":0,"67":0,"68":0,"69":0,"70":0,"71":0,"72":0,"73":0,"74":0,"75":0,"76":0,"77":0,"78":0,"79":0,"80":0,"81":0,"82":0,"83":0,"84":0,"85":0,"86":0,"87":0,"88":0,"89":1},"f":{"0":3,"1":0,"2":0,"3":0,"4":0,"5":0,"6":0,"7":0,"8":0,"9":0,"10":0},"b":{"0":[1,2],"1":[3,3],"2":[0,0],"3":[0,0],"4":[0,0],"5":[0,0],"6":[0,0]},"inputSourceMap":{"version":3,"names":["Query","autoGenEssayQuestions","_","examId","number","models","questions","EssayExamQuestion","aggregate","$match","$sample","size","mapArray","length","map","question","questionMap","id","_id","push","getAnyEssayQuestion","parent","findOne","getEssayQuestions","numberToReturn","getAllEssayQuestions","offset","query","find","totalQuestion","countDocuments","skip","limit","sort","exec","Mutation","saveBulkEssayQuestion","args","input","uploadResult","insertMany","error","console","log","Error","editEssayQuestion","clue","possibleAnswers","mediaType","mediaFile","createReadStream","filename","stream","pathObj","methods","uploadFile","filter","update","mediaUrl","findOneAndUpdate","deleteEssayQuestion","questionId","questionToDelete","filePath","path","resolve","fs","unlinkSync","findByIdAndRemove","deleteMedia","save","saveEssayQuestion","type","examinationType","essayQuestion","createdAt","Date"],"sourceRoot":"/app/src/resolvers/","sources":["essayExamQuestionResolvers.js"],"sourcesContent":["import methods from \"../methods\";\nimport path from \"path\";\nimport fs from \"fs\";\n\nexport default {\n  Query: {\n    autoGenEssayQuestions: async (_, { examId, number }, { models }) => {\n      const questions = await models.EssayExamQuestion.aggregate([\n        { $match: { examId: examId } },\n        { $sample: { size: number } },\n      ]);\n\n      let mapArray = [];\n      if (questions.length > 0) {\n        questions.map((question) => {\n          let questionMap = { ...question };\n          questionMap.id = question._id;\n          mapArray.push(questionMap);\n        });\n      }\n      return mapArray;\n    },\n    getAnyEssayQuestion: async (parent, {}, { models }) => {\n      const question = await models.EssayExamQuestion.findOne();\n      return question;\n    },\n    getEssayQuestions: async (parent, { number }, { models }) => {\n      let numberToReturn = +number;\n      const questions = await models.EssayExamQuestion.aggregate([\n        { $sample: { size: numberToReturn } },\n      ]);\n      return questions;\n    },\n    getAllEssayQuestions: async (parent, { offset, examId }, { models }) => {\n      const query = models.EssayExamQuestion.find({ examId: examId });\n      const totalQuestion = await models.EssayExamQuestion.find({\n        examId,\n      }).countDocuments();\n      //query.sort({ createdAt: -1 });\n      query.skip(offset);\n      query.limit(20);\n      query.sort(\"-createdAt\");\n      const questions = await query.exec();\n      return {\n        questions,\n        totalQuestion,\n      };\n    },\n  },\n  Mutation: {\n    saveBulkEssayQuestion: async (_, args, { models }) => {\n      try {\n        const { input } = args;\n        const uploadResult = await models.EssayExamQuestion.insertMany(input);\n        return uploadResult.length;\n      } catch (error) {\n        console.log(error);\n        throw new Error(`Database Error`);\n      }\n    },\n    editEssayQuestion: async (parent, { input }, { models }) => {\n      try {\n        const {\n          id,\n          question,\n          clue,\n          possibleAnswers,\n          mediaType,\n          mediaFile,\n        } = input;\n        if (mediaFile) {\n          const { createReadStream, filename } = await mediaFile;\n          const stream = createReadStream();\n          let pathObj = await methods.uploadFile({\n            stream,\n            filename,\n          });\n\n          const filter = { _id: id };\n          const update = {\n            question,\n            clue,\n            possibleAnswers,\n            mediaType,\n            mediaUrl: pathObj,\n          };\n          await models.EssayExamQuestion.findOneAndUpdate(filter, update);\n          return true;\n        } else {\n          const filter = { _id: id };\n          const update = {\n            question,\n            clue,\n            possibleAnswers,\n          };\n          await models.EssayExamQuestion.findOneAndUpdate(filter, update);\n          return true;\n        }\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    deleteEssayQuestion: async (parent, { questionId }, { models }) => {\n      try {\n        const questionToDelete = await models.EssayExamQuestion.findOne({\n          _id: questionId,\n        });\n        if (!questionToDelete) {\n          throw new Error(\"the question you want to delete does not exist\");\n        }\n        //check if we have a media url and delete that\n        const mediaUrl = questionToDelete.mediaUrl;\n        //construct the path we want to use to delete the file\n        const filePath = path.resolve(\"./uploads\") + \"/\" + mediaUrl;\n        //delete the file\n        fs.unlinkSync(filePath);\n        //delete the question entry here\n        await models.EssayExamQuestion.findByIdAndRemove(questionId);\n        return true;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    deleteMedia: async (parent, { questionId, mediaUrl }, { models }) => {\n      try {\n        const question = await models.EssayExamQuestion.findOne({\n          _id: questionId,\n        });\n        if (!question) {\n          throw new Error(\"the question does not exist\");\n        }\n\n        //construct the path we want to use to delete the file\n        const filePath = path.resolve(\"./uploads\") + \"/\" + mediaUrl;\n        //delete the file\n        fs.unlinkSync(filePath);\n        //delete the question entry here\n        //update the question here\n        question.mediaType = \"\";\n        question.mediaUrl = \"\";\n        await question.save();\n        return true;\n      } catch (error) {\n        console.log(error);\n        throw error;\n      }\n    },\n    saveEssayQuestion: async (parent, { input }, { models }) => {\n      const {\n        type,\n        question,\n        clue,\n        possibleAnswers,\n        examId,\n        examinationType,\n        mediaType,\n        mediaFile,\n      } = input;\n\n      if (mediaFile) {\n        //we have an uploaded file\n        try {\n          const { createReadStream, filename } = await mediaFile;\n          const stream = createReadStream();\n          let pathObj = await methods.uploadFile({\n            stream,\n            filename,\n          });\n          //let us save the stuff in the\n          const essayQuestion = new models.EssayExamQuestion({\n            type,\n            question,\n            clue,\n            possibleAnswers,\n            mediaUrl: pathObj,\n            examId,\n            examinationType,\n            createdAt: new Date(),\n            mediaType: mediaType,\n          });\n          await essayQuestion.save();\n          return essayQuestion;\n        } catch (error) {\n          console.log(error);\n          throw new Error(error);\n        }\n      } else {\n        try {\n          const essayQuestion = new models.EssayExamQuestion({\n            type,\n            question,\n            clue,\n            possibleAnswers,\n            examId,\n            examinationType,\n            createdAt: new Date(),\n          });\n          await essayQuestion.save();\n          return true;\n        } catch (error) {\n          console.log(error);\n          throw new Error(error);\n        }\n      }\n    },\n  },\n};\n"],"mappings":"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"},"_coverageSchema":"1a1c01bbd47fc00a2c39e90264f33305004495a9","hash":"472cff929cedbaeadb26419a1e99c9d4288a2a77","contentHash":"1f549f3d9d4d2f15111ea94ec25bbbf240a41a3cb2d567800849ce718d983029"}}